{"version":3,"sources":["Chart.bundle.js","jquery.cryodex.js"],"names":["global","factory","exports","module","define","amd","Chart","this","conversions","rgb2hsl","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","rgb2xyz","rgb2lab","rgb2lch","args","lab2lch","hsl2rgb","hsl2hsv","hsl","h","s","l","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","hsv2hsl","hsv","sl","v","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2rgb","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab2rgb","lch2lab","lch2xyz","lch2rgb","rgb","r","g","b","min","Math","max","delta","k","reverseKeywords","JSON","stringify","pow","xyz","x","y","z","t1","t2","t3","val","i","hi","floor","f","p","q","t","hwb","n","wh","bl","ratio","cmyk","c","m","lab","y2","a","atan2","PI","sqrt","lch","hr","cos","sin","keyword","cssKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","key","convert","Converter","func","arg","Array","prototype","slice","call","arguments","pair","exec","from","to","undefined","length","round","convs","routeSpace","space","values","getValues","setValues","vals","fspace","forEach","colorConvert","colorName","colorString","getRgba","getHsla","getRgb","string","rgba","getHsl","hsla","getHwb","getAlpha","hexString","hexDouble","rgbString","alpha","rgbaString","percentString","percentaString","hslString","hslaString","hwbString","reverseNames","match","hexAlpha","parseInt","parseFloat","scale","isNaN","num","str","toString","toUpperCase","name","Color","obj","valid","lightness","value","w","whiteness","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","concat","cmykArray","rgbaArray","hslaArray","setChannel","hue","saturation","saturationv","blackness","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","w1","w2","toJSON","clone","type","result","source","target","prop","hasOwnProperty","console","error","spaces","maxes","charAt","capped","chans","sname","index","svalues","window","id","chartjsColor","helpers","noop","uid","isNullOrUndef","isArray","Object","substr","isObject","isFinite","Number","valueOrDefault","defaultValue","valueAtIndexOrDefault","callback","fn","thisArg","apply","each","loopable","reverse","len","keys","arrayEquals","a0","a1","ilen","v0","v1","map","klen","_merger","options","tval","sval","merge","_mergerIf","mergeIf","sources","merger","extend","setFn","inherits","extensions","me","ChartElement","constructor","Surrogate","__super__","helpers_core","callCallback","indexOf","array","item","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","helpers_easing","easingEffects","RAD_PER_DEG","DOUBLE_PI","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","exports$1","clear","chart","ctx","clearRect","width","height","roundedRect","radius","left","top","right","bottom","moveTo","arc","closePath","rect","drawPoint","style","rotation","xOffset","yOffset","size","cornerRadius","rad","beginPath","lineTo","SQRT1_2","fill","stroke","drawImage","_isPointInArea","point","area","clipArea","save","clip","unclipArea","restore","previous","flip","stepped","steppedLine","midpoint","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","helpers_canvas","drawRoundedRectangle","defaults","_set","scope","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","defaultLineHeight","showLines","core_defaults","helpers_options","toLineHeight","matches","toPadding","_parseFont","globalDefaults","fontSize","font","family","fontFamily","lineHeight","fontStyle","toFontString","resolve","inputs","context","helpers$1","easing","canvas","Element","configuration","initialize","hidden","pivot","_view","_model","_start","transition","ease","model","start","view","actual","origin","c0","c1","interpolate","tooltipPosition","hasValue","isNumber","core_element","exports$2","currentStep","numSteps","render","onAnimationProgress","onAnimationComplete","core_animation","defineProperty","get","set","animation","duration","onProgress","onComplete","core_animations","animations","request","addAnimation","lazy","startTime","Date","now","animating","push","requestAnimationFrame","cancelAnimation","findIndex","splice","requestAnimFrame","startDigest","advance","nextStep","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","DatasetController","datasetIndex","datasetElementType","dataElementType","linkScales","addElements","updateIndex","meta","getMeta","dataset","getDataset","xAxisID","scales","xAxes","yAxisID","yAxes","data","datasets","getDatasetMeta","getScaleForId","scaleID","_getValueScaleId","_getIndexScaleId","_getValueScale","_getIndexScale","reset","update","destroy","_data","createMetaDataset","_chart","_datasetIndex","createMetaData","_index","metaData","addElementAndReset","element","updateElement","buildOrUpdateElements","isExtensible","configurable","enumerable","method","base","res","object","resyncElements","easingValue","elements","draw","removeHoverStyle","$previousStyle","setHoverStyle","custom","getHoverColor","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","numMeta","numData","insertElements","count","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","core_datasetController","borderAlign","element_arc","inLabelRange","mouseX","vm","hoverRadius","inRange","chartX","chartY","pointRelativePosition","getAngleFromPoint","angle","distance","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","getCenterPoint","halfAngle","halfRadius","getArea","centreAngle","rangeFromCentre","angleMargin","sA","eA","pixelMargin","fillStyle","lineWidth","lineJoin","strokeStyle","valueOrDefault$1","line","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","capBezierPoints","element_line","current","currentVM","spanGaps","points","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","setLineDash","lineDashOffset","previousItem","skip","valueOrDefault$2","defaultColor$1","xRange","abs","hitRadius","pointStyle","element_point","mouseY","inXRange","inYRange","padding","chartArea","defaultColor$2","isVertical","getBarBounds","x1","x2","y1","half","swap","orig","v2","parseBorderWidth","maxW","maxH","edge","borderSkipped","horizontal","parseBorderSkipped","skipX","skipY","bounds","rectangle","element_rectangle","rects","border","outer","inner","boundingRects","fillRect","Arc","Line","Point","Rectangle","resolve$1","hover","mode","categoryPercentage","barPercentage","offset","gridLines","offsetGridLines","controller_bar","stack","bar","_ruler","getRuler","_resolveElementOptions","_xScale","_yScale","datasetLabel","label","labels","_updateElementGeometry","vscale","getBasePixel","isHorizontal","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","center","_getStacks","last","stacked","stacks","isDatasetVisible","getStackCount","getStackIndex","stackCount","end","pixels","getPixelForValue","barThickness","prev","curr","ticks","getTicks","getPixelForTick","computeMinSampleSize","imeta","ivalue","getRightValue","minBarLength","controller","range","next","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","maxBarThickness","Infinity","dataIndex","valueOrDefault$3","resolve$2","position","tooltips","callbacks","title","dataPoint","xLabel","yLabel","controller_bubble","xScale","yScale","dsIndex","getPixelForDecimal","NaN","_options","resolve$3","valueOrDefault$4","animateRotate","animateScale","legendCallback","text","join","legend","generateLabels","ds","arcOpts","onClick","e","legendItem","cutoutPercentage","circumference","tooltipItem","dataLabel","controller_doughnut","getRingIndex","ringIndex","j","opts","availableWidth","availableHeight","minSize","arcs","chartWeight","_getRingWeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","_getVisibleDatasetWeightTotal","offsetX","offsetY","total","calculateTotal","_getRingWeightOffset","animationOpts","centerX","centerY","calculateCircumference","hoverWidth","ringWeightOffset","dataSetIndex","axis","controller_horizontalBar","valueOrDefault$5","resolve$4","isPointInArea","lineEnabled","showLine","controller_line","lineTension","_scale","_resolveLineOptions","updateBezierControlPoints","lineModel","_resolvePointOptions","calculatePointY","ELEMENT_OPTIONS","elementOptions","dsMeta","sumPos","sumNeg","stackedRightValue","rightValue","controlPoints","capControlPoint","pt","filter","cubicInterpolationMode","splineCurveMonotone","splineCurve","nextItem","halfBorderWidth","resolve$5","angleLines","display","circular","pointLabels","beginAtZero","controller_polarArea","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getDistanceFromCenterForValue","resetRadius","doughnut","controller_pie","valueOrDefault$6","resolve$6","controller_radar","pointPosition","getPointPositionForValue","controllers","bubble","horizontalBar","polarArea","pie","radar","scatter","getRelativePosition","native","parseVisibleItems","handler","jlen","getIntersectItems","getNearestItems","intersect","distanceMetric","minDistance","POSITIVE_INFINITY","nearestItems","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","indexMode","items","core_interaction","modes","single","x-axis","nearest","intersectsItem","filterByPosition","where","sortByWeight","_tmpIndex_","sort","addSizeByPosition","boxes","box","layout","core_layouts","addBox","fullWidth","removeBox","layoutItem","configure","props","layoutOptions","leftPadding","rightPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","maxPadding","verticalBoxes","horizontalBoxes","outerBoxes","chartWidth","chartHeight","verticalBoxWidth","maxChartAreaWidth","maxChartAreaHeight","outerBoxSizes","minBoxSizes","getPadding","boxPadding","findMaxPadding","fitBox","minBoxSize","findNextWhere","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","minBox","self","commonjsRequire","Error","stylesheet","freeze","default","EXPANDO_KEY","CSS_SIZE_MONITOR","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","property","getStyle","eventListenerOptions","supports","addEventListener","passive","addListener","node","removeListener","removeEventListener","createEvent","nativeEvent","createDiv","cls","el","document","createElement","className","addResizeListener","ticking","expando","resizer","expand","shrink","appendChild","_reset","scrollLeft","scrollTop","onScroll","bind","createResizer","container","maintainAspectRatio","parentNode","clientWidth","proxy","renderProxy","animationName","reflow","offsetParent","classList","add","watchForRender","insertBefore","firstChild","removeResizeListener","remove","unwatchForRender","removeChild","platform_dom$2","disableCSSInjection","_enabled","_ensureLoaded","_loaded","platform","css","_style","setAttribute","getElementsByTagName","createTextNode","injectCSS","acquireContext","config","getElementById","getContext","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","initCanvas","releaseContext","removeAttribute","proxies","event","pos","fromNativeEvent","addEvent","removeEvent","implementation","plugins","core_plugins","_plugins","_cacheId","register","plugin","unregister","idx","getAll","notify","hook","descriptor","params","descriptors","cache","$plugins","_invalidate","core_scaleService","constructors","registerScaleType","scaleConstructor","scaleDefaults","getScaleConstructor","getScaleDefaults","updateScaleDefaults","additions","addScalesToLayout","valueOrDefault$7","enabled","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","eventPosition","nearestElement","d","distanceBetweenPoints","tp","pushOrConcat","toPush","splitNewlines","String","split","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","opacity","legendColorBackground","getAlignedX","align","getBeforeAfterBodyLines","exports$3","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","changed","indexScale","valueScale","existingModel","active","_active","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","_eventPosition","getLabelForIndex","itemSort","body","dataPoints","tooltip","combinedBodyLength","reduce","titleLineCount","footerLineCount","widthPadding","maxLineWidth","measureText","fontString","getTooltipSize","paddingAndSize","radiusAndPadding","getBackgroundPoint","lf","rf","olf","orf","yf","midX","midY","determineAlignment","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","textAlign","textBaseline","fillText","drawBody","textColor","drawColorBoxes","xLinePadding","colorX","fillLineOfText","strokeRect","drawFooter","drawBackground","quadraticCurveTo","hasTooltipContent","globalAlpha","handleEvent","getElementsAtEventForMode","positioners_1","core_tooltip","valueOrDefault$8","mergeScaleConfig","slen","mergeConfig","updateConfig","newOptions","ensureScalesHaveIDs","buildOrUpdateScales","positionIsHorizontal","events","onHover","animationDuration","responsive","responsiveAnimationDuration","construct","initConfig","_bufferedRender","instances","retinaScale","devicePixelRatio","bindEvents","resize","initToolTip","stop","silent","newWidth","getMaximumWidth","newHeight","getMaximumHeight","newSize","onResize","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","mergeTicksOptions","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","ControllerClass","resetElements","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","drawDatasets","_drawTooltip","drawDataset","getElementAtEvent","getElementsAtEvent","getElementsAtXAxis","getDatasetAtEvent","_meta","generateLegend","unbindEvents","toBase64Image","toDataURL","_chartInstance","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","core_controller","Controller","types","configMerge","scaleMerge","abstract","DateAdapter","formats","parse","format","diff","startOf","endOf","_create","override","members","core_adapters","_date","core_ticks","formatters","tickValue","logDelta","log10","tickString","logTick","toExponential","numDecimal","toFixed","logarithmic","remain","valueOrDefault$9","labelsFromTicks","computeTextSize","tick","longestText","color","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","minor","major","core_scale","paddingLeft","paddingTop","paddingRight","paddingBottom","_ticks","beforeUpdate","maxWidth","maxHeight","margins","_maxLabelLines","longestLabelWidth","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","toRadians","scaleLabelOpts","gridLineOpts","_isVisible","parseFont","isFullWidth","scaleLabelFont","scaleLabelPadding","deltaHeight","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","tickPadding","labelHeight","firstLabelWidth","lastLabelWidth","offsetLeft","offsetRight","handleMargins","rawValue","getValueForPixel","pixel","finalVal","innerHeight","decimal","valueOffset","getBaseValue","_autoSkip","optionTicks","tickCount","skipRatio","maxTicks","maxTicksLimit","ticksLength","_tickSize","axisLength","PaddingBottom","rot","borderValue","tickStart","tickEnd","optionMajorTicks","isRotated","isMirrored","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","labelRotationRadians","itemsToDraw","axisWidth","alignPixel","_alignPixel","lineColor","tx1","ty1","tx2","ty2","labelX","labelY","textOffset","zeroLineIndex","lineValue","getPixelForGridLine","labelYOffset","labelXOffset","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","translate","scaleLabelX","scaleLabelY","halfLineHeight","isLeft","firstLineWidth","lastLineWidth","scale_category","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","_defaults","scale_linearbase","handleTickRangeOptions","minSign","sign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","stepSize","ceil","_computeTickLimit","handleDirectionalChanges","numericGeneratorOptions","precision","fixedStepSize","generationOptions","dataRange","factor","niceMin","niceMax","numSpaces","unit","maxNumSpaces","rmin","rmax","spacing","niceNum","_decimalPlaces","almostWhole","almostEquals","generateTicks","ticksAsNumbers","defaultConfig$1","scale_linear","IDMatches","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","innerDimension","_defaults$1","valueOrDefault$a","defaultConfig$2","nonNegativeOrDefault","scale_logarithmic","minNotZero","exp","significand","tickVal","endExp","endSignificand","lastTick","generateTicks$1","tickValues","_getFirstTickValue","firstTickValue","_defaults$2","valueOrDefault$b","valueAtIndexOrDefault$1","resolve$7","defaultConfig$3","animate","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","getValueCount","getTickBackdropHeight","determineLimits","getTextAlignForAngle","adjustPointPositionForLabelHeight","textSize","numberOrZero","param","scale_radialLinear","drawingArea","NEGATIVE_INFINITY","plFont","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","toDegrees","hLimits","vLimits","setReductions","fitWithPointLabels","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","scalingFactor","distanceFromCenter","thisAngle","getBasePosition","angleLineOpts","pointLabelOpts","tickBackdropHeight","outerDistance","outerPosition","extra","pointLabelPosition","pointLabelFontColor","drawPointLabels","yCenterOffset","drawRadiusLine","_defaults$3","valueOrDefault$c","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","MAX_SAFE_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","hash","out","interpolate$1","table","skey","tkey","mid","i0","i1","lo","lookup","span","toTimestamp","input","adapter","_adapter","time","parser","determineMajorUnit","generate","capacity","timeOpts","minUnit","interval","determineUnitForAutoTicks","unitStepSize","weekday","isoWeekday","majorTicksEnabled","first","milliseconds","determineStepSize","scale_time","adapters","date","warn","displayFormats","timestamp","timestamps","dataLabels","_horizontal","_table","_timestamps","getLabelCapacity","_unit","determineUnitForFormatting","_majorUnit","distribution","buildLookupTable","_offsets","computeOffsets","majorUnit","ticksFromTimestamps","tooltipFormat","datetime","tickFormatFunction","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","isReverse","getLabelWidth","ticksOpts","tickLabelWidth","sinRotation","exampleTime","exampleLabel","innerWidth","_defaults$4","displayFormat","category","radialLinear","moment","createCommonjsModule","hookCallback","some","hooks","isUndefined","isDate","arr","hasOwnProp","valueOf","createUTC","locale","strict","createLocalOrUTC","utc","getParsingFlags","_pf","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","_isValid","flags","parsedParts","isNowValid","_d","getTime","invalidWeekday","_strict","bigHour","isFrozen","createInvalid","fun","momentProperties","copyConfig","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","updateInProgress","Moment","updateOffset","isMoment","absFloor","number","toInt","argumentForCoercion","coercedNumber","compareArrays","array1","array2","dontConvert","lengthDiff","diffs","msg","suppressDeprecationWarnings","deprecate","firstTime","deprecationHandler","deprecations","deprecateSimple","isFunction","Function","mergeConfigs","parentConfig","childConfig","Locale","aliases","addUnitAlias","shorthand","lowerCase","toLowerCase","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","priorities","addUnitPriority","priority","zeroFill","targetLength","forceSign","absNumber","zerosToFill","formattingTokens","localFormattingTokens","formatFunctions","formatTokenFunctions","addFormatToken","token","padded","ordinal","localeData","formatMoment","expandFormat","replace","mom","output","makeFormatFunction","invalidDate","replaceLongDateFormatTokens","longDateFormat","lastIndex","test","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchOffset","matchShortOffset","matchWord","regexes","addRegexToken","regex","strictRegex","isStrict","getParseRegexForToken","RegExp","regexEscape","matched","p1","p2","p3","p4","tokens","addParseToken","addWeekParseToken","_w","addTimeToArrayFromToken","_a","YEAR","MONTH","DATE","HOUR","MINUTE","SECOND","MILLISECOND","WEEK","WEEKDAY","daysInYear","isLeapYear","parseTwoDigitYear","getSetYear","makeGetSet","keepTime","set$1","daysInMonth","modMonth","mod","o","monthsShort","months","monthsShortRegex","monthsRegex","monthsParse","MONTHS_IN_FORMAT","defaultLocaleMonths","defaultLocaleMonthsShort","handleStrictParse","monthName","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","setMonth","dayOfMonth","getSetMonth","defaultMonthsShortRegex","defaultMonthsRegex","computeMonthsParse","cmpLenRev","shortPieces","longPieces","mixedPieces","_monthsRegex","_monthsShortRegex","_monthsStrictRegex","_monthsShortStrictRegex","createDate","M","ms","getFullYear","setFullYear","createUTCDate","UTC","getUTCFullYear","setUTCFullYear","firstWeekOffset","dow","doy","fwd","getUTCDay","dayOfYearFromWeeks","resYear","resDayOfYear","dayOfYear","weekOfYear","resWeek","weekOffset","weeksInYear","weekOffsetNext","shiftWeekdays","ws","weekdaysMin","weekdaysShort","weekdays","weekdaysMinRegex","weekdaysShortRegex","weekdaysRegex","weekdaysParse","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","handleStrictParse$1","weekdayName","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","defaultWeekdaysRegex","defaultWeekdaysShortRegex","defaultWeekdaysMinRegex","computeWeekdaysParse","minp","shortp","longp","minPieces","_weekdaysRegex","_weekdaysShortRegex","_weekdaysMinRegex","_weekdaysStrictRegex","_weekdaysShortStrictRegex","_weekdaysMinStrictRegex","hFormat","hours","lowercase","minutes","matchMeridiem","_meridiemParse","seconds","kInput","_isPm","isPM","_meridiem","pos1","pos2","globalLocale","getSetHour","baseConfig","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","LTS","LT","L","LL","LLL","LLLL","dayOfMonthOrdinalParse","relativeTime","future","past","ss","mm","hh","dd","MM","yy","meridiemParse","locales","localeFamilies","normalizeLocale","loadLocale","oldLocale","_abbr","getSetGlobalLocale","getLocale","defineLocale","abbr","_config","parentLocale","names","chooseLocale","checkOverflow","_overflowDayOfYear","_overflowWeeks","_overflowWeekday","configFromArray","currentDate","expectedWeekday","yearToUse","nowValue","_useUTC","getUTCMonth","getUTCDate","getMonth","getDate","currentDateArray","weekYear","temp","weekdayOverflow","GG","W","E","createLocal","_week","curWeek","gg","_dayOfYear","dayOfYearFromWeekInfo","_nextDay","getDay","setUTCMinutes","getUTCMinutes","extendedIsoRegex","basicIsoRegex","tzRegex","isoDates","isoTimes","aspNetJsonRegex","configFromISO","allowTime","dateFormat","timeFormat","tzFormat","configFromStringAndFormat","untruncateYear","yearStr","obsOffsets","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","configFromRFC2822","monthStr","dayStr","hourStr","minuteStr","secondStr","parsedArray","weekdayStr","parsedInput","checkWeekday","obsOffset","militaryOffset","numOffset","hm","calculateOffset","ISO_8601","RFC_2822","skipped","stringLength","totalParsedInputLength","isPm","meridiemHour","meridiemFixWrap","prepareConfig","preparse","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromStringAndArray","createFromInputFallback","configFromString","configFromObject","configFromInput","isUTC","getOwnPropertyNames","isObjectEmpty","prototypeMin","other","prototypeMax","pickBy","moments","ordering","Duration","years","quarters","weeks","isoWeek","days","unitHasDecimal","isDurationValid","_milliseconds","_days","_months","_bubble","isDuration","absRound","separator","utcOffset","offsetFromString","chunkOffset","matcher","parts","cloneWithOffset","setTime","local","getDateOffset","getTimezoneOffset","isUtc","aspNetRegex","isoRegex","createDuration","ret","diffRes","parseIso","isBefore","positiveMomentsDifference","inp","isAfter","createAdder","direction","period","addSubtract","isAdding","invalid","subtract","monthDiff","wholeMonthDiff","anchor","newLocaleData","defaultFormat","defaultFormatUtc","lang","MS_PER_SECOND","MS_PER_MINUTE","MS_PER_HOUR","MS_PER_400_YEARS","mod$1","dividend","divisor","localStartOfDate","utcStartOfDate","addWeekYearFormatToken","getter","getSetWeekYearHelper","weeksTarget","setWeekAll","dayOfYearData","isoWeekYear","_dayOfMonthOrdinalParse","_ordinalParse","_dayOfMonthOrdinalParseLenient","getSetDayOfMonth","getSetMinute","getSetSecond","parseMs","getSetMillisecond","proto","preParsePostFormat","sod","calendarFormat","asFloat","that","zoneDelta","startOfDate","inputString","postformat","withoutSuffix","humanize","fromNow","toNow","invalidAt","localInput","isBetween","inclusivity","localFrom","localTo","isSame","inputMs","isSameOrAfter","isSameOrBefore","parsingFlags","prioritized","unitsObj","u","getPrioritizedUnits","toArray","toObject","toDate","toISOString","keepOffset","inspect","zone","isLocal","prefix","suffix","unix","creationData","isoWeeks","weekInfo","isoWeeksInYear","parseWeekday","parseIsoWeekday","keepLocalTime","keepMinutes","localAdjust","_changeInProgress","parseZone","tZone","hasAlignedHourOffset","isDST","isUtcOffset","zoneAbbr","zoneName","dates","isDSTShifted","_isDSTShifted","proto$1","get$1","field","setter","listMonthsImpl","listWeekdaysImpl","localeSorted","_calendar","_longDateFormat","formatUpper","_invalidDate","_ordinal","isFuture","_relativeTime","pastFuture","isFormat","_monthsShort","_monthsParseExact","firstDayOfYear","firstDayOfWeek","_weekdays","_weekdaysMin","_weekdaysShort","_weekdaysParseExact","_fullWeekdaysParse","isLower","langData","mathAbs","addSubtract$1","absCeil","daysToMonths","monthsToDays","makeAs","alias","as","asMilliseconds","asSeconds","asMinutes","asHours","asDays","asWeeks","asMonths","asQuarters","asYears","makeGetter","thresholds","substituteTimeAgo","abs$1","toISOString$1","Y","D","totalSign","ymSign","daysSign","hmsSign","proto$2","monthsFromDays","withSuffix","posNegDuration","relativeTime$1","toIsoString","version","updateLocale","tmpLocale","relativeTimeRounding","roundingFunction","relativeTimeThreshold","threshold","limit","myMoment","HTML5_FMT","DATETIME_LOCAL","DATETIME_LOCAL_SECONDS","DATETIME_LOCAL_MS","TIME","TIME_SECONDS","TIME_MS","FORMATS","_id","amount","filler","propagate","mappers","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","visible","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","plugin_filler","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","loop","p0","d0","d1","doFill","noop$1","valueOrDefault$d","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","onLeave","lineDash","Legend","legendHitBoxes","_hoveredItem","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","textWidth","SQRT2","drawLegendBox","halfFontSize","xLeft","yMiddle","_getLegendItemAt","hitBox","lh","hoveredItem","createNewLegendAndAttach","legendOpts","plugin_legend","_element","beforeInit","afterEvent","noop$2","Title","lineCount","fontOpts","titleX","titleY","createNewTitleBlockAndAttach","titleOpts","titleBlock","parseMaxStyle","styleValue","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","_getParentNode","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","collection","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","epsilon","rounded","exponent","log","LOG10E","powerOf10","radians","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","aliasPixel","pixelWidth","currentDevicePixelRatio","halfWidth","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","originalEvent","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","getConstraintWidth","getConstraintHeight","_calculatePadding","parentDimension","parent","host","cw","clientHeight","ch","currentStyle","getPropertyValue","forceRatio","pixelRatio","pixelSize","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","numberOfLines","CanvasGradient","colorValue","CanvasPattern","core_helpers","_adapters","Animation","animationService","Interaction","layouts","Scale","scaleService","Ticks","Tooltip","src","pluginService","PluginBase","canvasHelpers","layoutService","LinearScaleBase","klass","cfg","$","pluginName","baseColours","third","fourth","fifth","sixth","seventh","eighth","ninth","tenth","Cryodex","append","colours","jQuery","parseJSON","_name","_counter","init","attr","_gauge","_doughnut","_bar","_line","_progress","addClass","_getColour","colour","_getColourAlpha","substring","value1","value2","eq","hide","dataset_item","html","charttype","chartoptions","pointRadius","pointHoverRadius","pointBackgroundColor","pointBorderColor","pointHitRadius"],"mappings":"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","file":"jquery.cryodex.bundle.js","sourcesContent":["/*!\n * Chart.js v2.8.0\n * https://www.chartjs.org\n * (c) 2019 Chart.js Contributors\n * Released under the MIT License\n */\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\ntypeof define === 'function' && define.amd ? define(factory) :\n(global.Chart = factory());\n}(this, (function () { 'use strict';\n\n/* MIT license */\n\nvar conversions = {\n  rgb2hsl: rgb2hsl,\n  rgb2hsv: rgb2hsv,\n  rgb2hwb: rgb2hwb,\n  rgb2cmyk: rgb2cmyk,\n  rgb2keyword: rgb2keyword,\n  rgb2xyz: rgb2xyz,\n  rgb2lab: rgb2lab,\n  rgb2lch: rgb2lch,\n\n  hsl2rgb: hsl2rgb,\n  hsl2hsv: hsl2hsv,\n  hsl2hwb: hsl2hwb,\n  hsl2cmyk: hsl2cmyk,\n  hsl2keyword: hsl2keyword,\n\n  hsv2rgb: hsv2rgb,\n  hsv2hsl: hsv2hsl,\n  hsv2hwb: hsv2hwb,\n  hsv2cmyk: hsv2cmyk,\n  hsv2keyword: hsv2keyword,\n\n  hwb2rgb: hwb2rgb,\n  hwb2hsl: hwb2hsl,\n  hwb2hsv: hwb2hsv,\n  hwb2cmyk: hwb2cmyk,\n  hwb2keyword: hwb2keyword,\n\n  cmyk2rgb: cmyk2rgb,\n  cmyk2hsl: cmyk2hsl,\n  cmyk2hsv: cmyk2hsv,\n  cmyk2hwb: cmyk2hwb,\n  cmyk2keyword: cmyk2keyword,\n\n  keyword2rgb: keyword2rgb,\n  keyword2hsl: keyword2hsl,\n  keyword2hsv: keyword2hsv,\n  keyword2hwb: keyword2hwb,\n  keyword2cmyk: keyword2cmyk,\n  keyword2lab: keyword2lab,\n  keyword2xyz: keyword2xyz,\n\n  xyz2rgb: xyz2rgb,\n  xyz2lab: xyz2lab,\n  xyz2lch: xyz2lch,\n\n  lab2xyz: lab2xyz,\n  lab2rgb: lab2rgb,\n  lab2lch: lab2lch,\n\n  lch2lab: lch2lab,\n  lch2xyz: lch2xyz,\n  lch2rgb: lch2rgb\n};\n\n\nfunction rgb2hsl(rgb) {\n  var r = rgb[0]/255,\n      g = rgb[1]/255,\n      b = rgb[2]/255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, l;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g)/ delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  l = (min + max) / 2;\n\n  if (max == min)\n    s = 0;\n  else if (l <= 0.5)\n    s = delta / (max + min);\n  else\n    s = delta / (2 - max - min);\n\n  return [h, s * 100, l * 100];\n}\n\nfunction rgb2hsv(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, v;\n\n  if (max == 0)\n    s = 0;\n  else\n    s = (delta/max * 1000)/10;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g) / delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  v = ((max / 255) * 1000) / 10;\n\n  return [h, s, v];\n}\n\nfunction rgb2hwb(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      h = rgb2hsl(rgb)[0],\n      w = 1/255 * Math.min(r, Math.min(g, b)),\n      b = 1 - 1/255 * Math.max(r, Math.max(g, b));\n\n  return [h, w * 100, b * 100];\n}\n\nfunction rgb2cmyk(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      c, m, y, k;\n\n  k = Math.min(1 - r, 1 - g, 1 - b);\n  c = (1 - r - k) / (1 - k) || 0;\n  m = (1 - g - k) / (1 - k) || 0;\n  y = (1 - b - k) / (1 - k) || 0;\n  return [c * 100, m * 100, y * 100, k * 100];\n}\n\nfunction rgb2keyword(rgb) {\n  return reverseKeywords[JSON.stringify(rgb)];\n}\n\nfunction rgb2xyz(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255;\n\n  // assume sRGB\n  r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n  g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n  b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n  var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n  var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n  var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n  return [x * 100, y *100, z * 100];\n}\n\nfunction rgb2lab(rgb) {\n  var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction rgb2lch(args) {\n  return lab2lch(rgb2lab(args));\n}\n\nfunction hsl2rgb(hsl) {\n  var h = hsl[0] / 360,\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      t1, t2, t3, rgb, val;\n\n  if (s == 0) {\n    val = l * 255;\n    return [val, val, val];\n  }\n\n  if (l < 0.5)\n    t2 = l * (1 + s);\n  else\n    t2 = l + s - l * s;\n  t1 = 2 * l - t2;\n\n  rgb = [0, 0, 0];\n  for (var i = 0; i < 3; i++) {\n    t3 = h + 1 / 3 * - (i - 1);\n    t3 < 0 && t3++;\n    t3 > 1 && t3--;\n\n    if (6 * t3 < 1)\n      val = t1 + (t2 - t1) * 6 * t3;\n    else if (2 * t3 < 1)\n      val = t2;\n    else if (3 * t3 < 2)\n      val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n    else\n      val = t1;\n\n    rgb[i] = val * 255;\n  }\n\n  return rgb;\n}\n\nfunction hsl2hsv(hsl) {\n  var h = hsl[0],\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      sv, v;\n\n  if(l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n  }\n\n  l *= 2;\n  s *= (l <= 1) ? l : 2 - l;\n  v = (l + s) / 2;\n  sv = (2 * s) / (l + s);\n  return [h, sv * 100, v * 100];\n}\n\nfunction hsl2hwb(args) {\n  return rgb2hwb(hsl2rgb(args));\n}\n\nfunction hsl2cmyk(args) {\n  return rgb2cmyk(hsl2rgb(args));\n}\n\nfunction hsl2keyword(args) {\n  return rgb2keyword(hsl2rgb(args));\n}\n\n\nfunction hsv2rgb(hsv) {\n  var h = hsv[0] / 60,\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      hi = Math.floor(h) % 6;\n\n  var f = h - Math.floor(h),\n      p = 255 * v * (1 - s),\n      q = 255 * v * (1 - (s * f)),\n      t = 255 * v * (1 - (s * (1 - f))),\n      v = 255 * v;\n\n  switch(hi) {\n    case 0:\n      return [v, t, p];\n    case 1:\n      return [q, v, p];\n    case 2:\n      return [p, v, t];\n    case 3:\n      return [p, q, v];\n    case 4:\n      return [t, p, v];\n    case 5:\n      return [v, p, q];\n  }\n}\n\nfunction hsv2hsl(hsv) {\n  var h = hsv[0],\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      sl, l;\n\n  l = (2 - s) * v;\n  sl = s * v;\n  sl /= (l <= 1) ? l : 2 - l;\n  sl = sl || 0;\n  l /= 2;\n  return [h, sl * 100, l * 100];\n}\n\nfunction hsv2hwb(args) {\n  return rgb2hwb(hsv2rgb(args))\n}\n\nfunction hsv2cmyk(args) {\n  return rgb2cmyk(hsv2rgb(args));\n}\n\nfunction hsv2keyword(args) {\n  return rgb2keyword(hsv2rgb(args));\n}\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nfunction hwb2rgb(hwb) {\n  var h = hwb[0] / 360,\n      wh = hwb[1] / 100,\n      bl = hwb[2] / 100,\n      ratio = wh + bl,\n      i, v, f, n;\n\n  // wh + bl cant be > 1\n  if (ratio > 1) {\n    wh /= ratio;\n    bl /= ratio;\n  }\n\n  i = Math.floor(6 * h);\n  v = 1 - bl;\n  f = 6 * h - i;\n  if ((i & 0x01) != 0) {\n    f = 1 - f;\n  }\n  n = wh + f * (v - wh);  // linear interpolation\n\n  switch (i) {\n    default:\n    case 6:\n    case 0: r = v; g = n; b = wh; break;\n    case 1: r = n; g = v; b = wh; break;\n    case 2: r = wh; g = v; b = n; break;\n    case 3: r = wh; g = n; b = v; break;\n    case 4: r = n; g = wh; b = v; break;\n    case 5: r = v; g = wh; b = n; break;\n  }\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction hwb2hsl(args) {\n  return rgb2hsl(hwb2rgb(args));\n}\n\nfunction hwb2hsv(args) {\n  return rgb2hsv(hwb2rgb(args));\n}\n\nfunction hwb2cmyk(args) {\n  return rgb2cmyk(hwb2rgb(args));\n}\n\nfunction hwb2keyword(args) {\n  return rgb2keyword(hwb2rgb(args));\n}\n\nfunction cmyk2rgb(cmyk) {\n  var c = cmyk[0] / 100,\n      m = cmyk[1] / 100,\n      y = cmyk[2] / 100,\n      k = cmyk[3] / 100,\n      r, g, b;\n\n  r = 1 - Math.min(1, c * (1 - k) + k);\n  g = 1 - Math.min(1, m * (1 - k) + k);\n  b = 1 - Math.min(1, y * (1 - k) + k);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction cmyk2hsl(args) {\n  return rgb2hsl(cmyk2rgb(args));\n}\n\nfunction cmyk2hsv(args) {\n  return rgb2hsv(cmyk2rgb(args));\n}\n\nfunction cmyk2hwb(args) {\n  return rgb2hwb(cmyk2rgb(args));\n}\n\nfunction cmyk2keyword(args) {\n  return rgb2keyword(cmyk2rgb(args));\n}\n\n\nfunction xyz2rgb(xyz) {\n  var x = xyz[0] / 100,\n      y = xyz[1] / 100,\n      z = xyz[2] / 100,\n      r, g, b;\n\n  r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n  g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n  b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n  // assume sRGB\n  r = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n    : r = (r * 12.92);\n\n  g = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n    : g = (g * 12.92);\n\n  b = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n    : b = (b * 12.92);\n\n  r = Math.min(Math.max(0, r), 1);\n  g = Math.min(Math.max(0, g), 1);\n  b = Math.min(Math.max(0, b), 1);\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction xyz2lab(xyz) {\n  var x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction xyz2lch(args) {\n  return lab2lch(xyz2lab(args));\n}\n\nfunction lab2xyz(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      x, y, z, y2;\n\n  if (l <= 8) {\n    y = (l * 100) / 903.3;\n    y2 = (7.787 * (y / 100)) + (16 / 116);\n  } else {\n    y = 100 * Math.pow((l + 16) / 116, 3);\n    y2 = Math.pow(y / 100, 1/3);\n  }\n\n  x = x / 95.047 <= 0.008856 ? x = (95.047 * ((a / 500) + y2 - (16 / 116))) / 7.787 : 95.047 * Math.pow((a / 500) + y2, 3);\n\n  z = z / 108.883 <= 0.008859 ? z = (108.883 * (y2 - (b / 200) - (16 / 116))) / 7.787 : 108.883 * Math.pow(y2 - (b / 200), 3);\n\n  return [x, y, z];\n}\n\nfunction lab2lch(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      hr, h, c;\n\n  hr = Math.atan2(b, a);\n  h = hr * 360 / 2 / Math.PI;\n  if (h < 0) {\n    h += 360;\n  }\n  c = Math.sqrt(a * a + b * b);\n  return [l, c, h];\n}\n\nfunction lab2rgb(args) {\n  return xyz2rgb(lab2xyz(args));\n}\n\nfunction lch2lab(lch) {\n  var l = lch[0],\n      c = lch[1],\n      h = lch[2],\n      a, b, hr;\n\n  hr = h / 360 * 2 * Math.PI;\n  a = c * Math.cos(hr);\n  b = c * Math.sin(hr);\n  return [l, a, b];\n}\n\nfunction lch2xyz(args) {\n  return lab2xyz(lch2lab(args));\n}\n\nfunction lch2rgb(args) {\n  return lab2rgb(lch2lab(args));\n}\n\nfunction keyword2rgb(keyword) {\n  return cssKeywords[keyword];\n}\n\nfunction keyword2hsl(args) {\n  return rgb2hsl(keyword2rgb(args));\n}\n\nfunction keyword2hsv(args) {\n  return rgb2hsv(keyword2rgb(args));\n}\n\nfunction keyword2hwb(args) {\n  return rgb2hwb(keyword2rgb(args));\n}\n\nfunction keyword2cmyk(args) {\n  return rgb2cmyk(keyword2rgb(args));\n}\n\nfunction keyword2lab(args) {\n  return rgb2lab(keyword2rgb(args));\n}\n\nfunction keyword2xyz(args) {\n  return rgb2xyz(keyword2rgb(args));\n}\n\nvar cssKeywords = {\n  aliceblue:  [240,248,255],\n  antiquewhite: [250,235,215],\n  aqua: [0,255,255],\n  aquamarine: [127,255,212],\n  azure:  [240,255,255],\n  beige:  [245,245,220],\n  bisque: [255,228,196],\n  black:  [0,0,0],\n  blanchedalmond: [255,235,205],\n  blue: [0,0,255],\n  blueviolet: [138,43,226],\n  brown:  [165,42,42],\n  burlywood:  [222,184,135],\n  cadetblue:  [95,158,160],\n  chartreuse: [127,255,0],\n  chocolate:  [210,105,30],\n  coral:  [255,127,80],\n  cornflowerblue: [100,149,237],\n  cornsilk: [255,248,220],\n  crimson:  [220,20,60],\n  cyan: [0,255,255],\n  darkblue: [0,0,139],\n  darkcyan: [0,139,139],\n  darkgoldenrod:  [184,134,11],\n  darkgray: [169,169,169],\n  darkgreen:  [0,100,0],\n  darkgrey: [169,169,169],\n  darkkhaki:  [189,183,107],\n  darkmagenta:  [139,0,139],\n  darkolivegreen: [85,107,47],\n  darkorange: [255,140,0],\n  darkorchid: [153,50,204],\n  darkred:  [139,0,0],\n  darksalmon: [233,150,122],\n  darkseagreen: [143,188,143],\n  darkslateblue:  [72,61,139],\n  darkslategray:  [47,79,79],\n  darkslategrey:  [47,79,79],\n  darkturquoise:  [0,206,209],\n  darkviolet: [148,0,211],\n  deeppink: [255,20,147],\n  deepskyblue:  [0,191,255],\n  dimgray:  [105,105,105],\n  dimgrey:  [105,105,105],\n  dodgerblue: [30,144,255],\n  firebrick:  [178,34,34],\n  floralwhite:  [255,250,240],\n  forestgreen:  [34,139,34],\n  fuchsia:  [255,0,255],\n  gainsboro:  [220,220,220],\n  ghostwhite: [248,248,255],\n  gold: [255,215,0],\n  goldenrod:  [218,165,32],\n  gray: [128,128,128],\n  green:  [0,128,0],\n  greenyellow:  [173,255,47],\n  grey: [128,128,128],\n  honeydew: [240,255,240],\n  hotpink:  [255,105,180],\n  indianred:  [205,92,92],\n  indigo: [75,0,130],\n  ivory:  [255,255,240],\n  khaki:  [240,230,140],\n  lavender: [230,230,250],\n  lavenderblush:  [255,240,245],\n  lawngreen:  [124,252,0],\n  lemonchiffon: [255,250,205],\n  lightblue:  [173,216,230],\n  lightcoral: [240,128,128],\n  lightcyan:  [224,255,255],\n  lightgoldenrodyellow: [250,250,210],\n  lightgray:  [211,211,211],\n  lightgreen: [144,238,144],\n  lightgrey:  [211,211,211],\n  lightpink:  [255,182,193],\n  lightsalmon:  [255,160,122],\n  lightseagreen:  [32,178,170],\n  lightskyblue: [135,206,250],\n  lightslategray: [119,136,153],\n  lightslategrey: [119,136,153],\n  lightsteelblue: [176,196,222],\n  lightyellow:  [255,255,224],\n  lime: [0,255,0],\n  limegreen:  [50,205,50],\n  linen:  [250,240,230],\n  magenta:  [255,0,255],\n  maroon: [128,0,0],\n  mediumaquamarine: [102,205,170],\n  mediumblue: [0,0,205],\n  mediumorchid: [186,85,211],\n  mediumpurple: [147,112,219],\n  mediumseagreen: [60,179,113],\n  mediumslateblue:  [123,104,238],\n  mediumspringgreen:  [0,250,154],\n  mediumturquoise:  [72,209,204],\n  mediumvioletred:  [199,21,133],\n  midnightblue: [25,25,112],\n  mintcream:  [245,255,250],\n  mistyrose:  [255,228,225],\n  moccasin: [255,228,181],\n  navajowhite:  [255,222,173],\n  navy: [0,0,128],\n  oldlace:  [253,245,230],\n  olive:  [128,128,0],\n  olivedrab:  [107,142,35],\n  orange: [255,165,0],\n  orangered:  [255,69,0],\n  orchid: [218,112,214],\n  palegoldenrod:  [238,232,170],\n  palegreen:  [152,251,152],\n  paleturquoise:  [175,238,238],\n  palevioletred:  [219,112,147],\n  papayawhip: [255,239,213],\n  peachpuff:  [255,218,185],\n  peru: [205,133,63],\n  pink: [255,192,203],\n  plum: [221,160,221],\n  powderblue: [176,224,230],\n  purple: [128,0,128],\n  rebeccapurple: [102, 51, 153],\n  red:  [255,0,0],\n  rosybrown:  [188,143,143],\n  royalblue:  [65,105,225],\n  saddlebrown:  [139,69,19],\n  salmon: [250,128,114],\n  sandybrown: [244,164,96],\n  seagreen: [46,139,87],\n  seashell: [255,245,238],\n  sienna: [160,82,45],\n  silver: [192,192,192],\n  skyblue:  [135,206,235],\n  slateblue:  [106,90,205],\n  slategray:  [112,128,144],\n  slategrey:  [112,128,144],\n  snow: [255,250,250],\n  springgreen:  [0,255,127],\n  steelblue:  [70,130,180],\n  tan:  [210,180,140],\n  teal: [0,128,128],\n  thistle:  [216,191,216],\n  tomato: [255,99,71],\n  turquoise:  [64,224,208],\n  violet: [238,130,238],\n  wheat:  [245,222,179],\n  white:  [255,255,255],\n  whitesmoke: [245,245,245],\n  yellow: [255,255,0],\n  yellowgreen:  [154,205,50]\n};\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n  reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n}\n\nvar convert = function() {\n   return new Converter();\n};\n\nfor (var func in conversions) {\n  // export Raw versions\n  convert[func + \"Raw\"] =  (function(func) {\n    // accept array or plain args\n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      return conversions[func](arg);\n    }\n  })(func);\n\n  var pair = /(\\w+)2(\\w+)/.exec(func),\n      from = pair[1],\n      to = pair[2];\n\n  // export rgb2hsl and [\"rgb\"][\"hsl\"]\n  convert[from] = convert[from] || {};\n\n  convert[from][to] = convert[func] = (function(func) { \n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      \n      var val = conversions[func](arg);\n      if (typeof val == \"string\" || val === undefined)\n        return val; // keyword\n\n      for (var i = 0; i < val.length; i++)\n        val[i] = Math.round(val[i]);\n      return val;\n    }\n  })(func);\n}\n\n\n/* Converter does lazy conversion and caching */\nvar Converter = function() {\n   this.convs = {};\n};\n\n/* Either get the values for a space or\n  set the values for a space, depending on args */\nConverter.prototype.routeSpace = function(space, args) {\n   var values = args[0];\n   if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n   }\n   // color.rgb(10, 10, 10)\n   if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);        \n   }\n\n   return this.setValues(space, values);\n};\n  \n/* Set the values for a space, invalidating cache */\nConverter.prototype.setValues = function(space, values) {\n   this.space = space;\n   this.convs = {};\n   this.convs[space] = values;\n   return this;\n};\n\n/* Get the values for a space. If there's already\n  a conversion for the space, fetch it, otherwise\n  compute it */\nConverter.prototype.getValues = function(space) {\n   var vals = this.convs[space];\n   if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n\n      this.convs[space] = vals;\n   }\n  return vals;\n};\n\n[\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function(space) {\n   Converter.prototype[space] = function(vals) {\n      return this.routeSpace(space, arguments);\n   };\n});\n\nvar colorConvert = convert;\n\nvar colorName = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\n\n/* MIT license */\n\n\nvar colorString = {\n   getRgba: getRgba,\n   getHsla: getHsla,\n   getRgb: getRgb,\n   getHsl: getHsl,\n   getHwb: getHwb,\n   getAlpha: getAlpha,\n\n   hexString: hexString,\n   rgbString: rgbString,\n   rgbaString: rgbaString,\n   percentString: percentString,\n   percentaString: percentaString,\n   hslString: hslString,\n   hslaString: hslaString,\n   hwbString: hwbString,\n   keyword: keyword\n};\n\nfunction getRgba(string) {\n   if (!string) {\n      return;\n   }\n   var abbr =  /^#([a-fA-F0-9]{3,4})$/i,\n       hex =  /^#([a-fA-F0-9]{6}([a-fA-F0-9]{2})?)$/i,\n       rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n       per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n       keyword = /(\\w+)/;\n\n   var rgb = [0, 0, 0],\n       a = 1,\n       match = string.match(abbr),\n       hexAlpha = \"\";\n   if (match) {\n      match = match[1];\n      hexAlpha = match[3];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n      if (hexAlpha) {\n         a = Math.round((parseInt(hexAlpha + hexAlpha, 16) / 255) * 100) / 100;\n      }\n   }\n   else if (match = string.match(hex)) {\n      hexAlpha = match[2];\n      match = match[1];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n      if (hexAlpha) {\n         a = Math.round((parseInt(hexAlpha, 16) / 255) * 100) / 100;\n      }\n   }\n   else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i + 1]);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n         return [0, 0, 0, 0];\n      }\n      rgb = colorName[match[1]];\n      if (!rgb) {\n         return;\n      }\n   }\n\n   for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n   }\n   if (!a && a != 0) {\n      a = 1;\n   }\n   else {\n      a = scale(a, 0, 1);\n   }\n   rgb[3] = a;\n   return rgb;\n}\n\nfunction getHsla(string) {\n   if (!string) {\n      return;\n   }\n   var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hsl);\n   if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n   }\n}\n\nfunction getHwb(string) {\n   if (!string) {\n      return;\n   }\n   var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hwb);\n   if (match) {\n    var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n   }\n}\n\nfunction getRgb(string) {\n   var rgba = getRgba(string);\n   return rgba && rgba.slice(0, 3);\n}\n\nfunction getHsl(string) {\n  var hsla = getHsla(string);\n  return hsla && hsla.slice(0, 3);\n}\n\nfunction getAlpha(string) {\n   var vals = getRgba(string);\n   if (vals) {\n      return vals[3];\n   }\n   else if (vals = getHsla(string)) {\n      return vals[3];\n   }\n   else if (vals = getHwb(string)) {\n      return vals[3];\n   }\n}\n\n// generators\nfunction hexString(rgba, a) {\n   var a = (a !== undefined && rgba.length === 3) ? a : rgba[3];\n   return \"#\" + hexDouble(rgba[0]) \n              + hexDouble(rgba[1])\n              + hexDouble(rgba[2])\n              + (\n                 (a >= 0 && a < 1)\n                 ? hexDouble(Math.round(a * 255))\n                 : \"\"\n              );\n}\n\nfunction rgbString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return rgbaString(rgba, alpha);\n   }\n   return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n}\n\nfunction rgbaString(rgba, alpha) {\n   if (alpha === undefined) {\n      alpha = (rgba[3] !== undefined ? rgba[3] : 1);\n   }\n   return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2]\n           + \", \" + alpha + \")\";\n}\n\nfunction percentString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return percentaString(rgba, alpha);\n   }\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n\n   return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n}\n\nfunction percentaString(rgba, alpha) {\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n   return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n}\n\nfunction hslString(hsla, alpha) {\n   if (alpha < 1 || (hsla[3] && hsla[3] < 1)) {\n      return hslaString(hsla, alpha);\n   }\n   return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n}\n\nfunction hslaString(hsla, alpha) {\n   if (alpha === undefined) {\n      alpha = (hsla[3] !== undefined ? hsla[3] : 1);\n   }\n   return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \"\n           + alpha + \")\";\n}\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\nfunction hwbString(hwb, alpha) {\n   if (alpha === undefined) {\n      alpha = (hwb[3] !== undefined ? hwb[3] : 1);\n   }\n   return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\"\n           + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n}\n\nfunction keyword(rgb) {\n  return reverseNames[rgb.slice(0, 3)];\n}\n\n// helpers\nfunction scale(num, min, max) {\n   return Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n  var str = num.toString(16).toUpperCase();\n  return (str.length < 2) ? \"0\" + str : str;\n}\n\n\n//create a list of reverse color names\nvar reverseNames = {};\nfor (var name in colorName) {\n   reverseNames[colorName[name]] = name;\n}\n\n/* MIT license */\n\n\n\nvar Color = function (obj) {\n\tif (obj instanceof Color) {\n\t\treturn obj;\n\t}\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(obj);\n\t}\n\n\tthis.valid = false;\n\tthis.values = {\n\t\trgb: [0, 0, 0],\n\t\thsl: [0, 0, 0],\n\t\thsv: [0, 0, 0],\n\t\thwb: [0, 0, 0],\n\t\tcmyk: [0, 0, 0, 0],\n\t\talpha: 1\n\t};\n\n\t// parse Color() argument\n\tvar vals;\n\tif (typeof obj === 'string') {\n\t\tvals = colorString.getRgba(obj);\n\t\tif (vals) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals = colorString.getHsla(obj)) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals = colorString.getHwb(obj)) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t}\n\t} else if (typeof obj === 'object') {\n\t\tvals = obj;\n\t\tif (vals.r !== undefined || vals.red !== undefined) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals.l !== undefined || vals.lightness !== undefined) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals.v !== undefined || vals.value !== undefined) {\n\t\t\tthis.setValues('hsv', vals);\n\t\t} else if (vals.w !== undefined || vals.whiteness !== undefined) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t} else if (vals.c !== undefined || vals.cyan !== undefined) {\n\t\t\tthis.setValues('cmyk', vals);\n\t\t}\n\t}\n};\n\nColor.prototype = {\n\tisValid: function () {\n\t\treturn this.valid;\n\t},\n\trgb: function () {\n\t\treturn this.setSpace('rgb', arguments);\n\t},\n\thsl: function () {\n\t\treturn this.setSpace('hsl', arguments);\n\t},\n\thsv: function () {\n\t\treturn this.setSpace('hsv', arguments);\n\t},\n\thwb: function () {\n\t\treturn this.setSpace('hwb', arguments);\n\t},\n\tcmyk: function () {\n\t\treturn this.setSpace('cmyk', arguments);\n\t},\n\n\trgbArray: function () {\n\t\treturn this.values.rgb;\n\t},\n\thslArray: function () {\n\t\treturn this.values.hsl;\n\t},\n\thsvArray: function () {\n\t\treturn this.values.hsv;\n\t},\n\thwbArray: function () {\n\t\tvar values = this.values;\n\t\tif (values.alpha !== 1) {\n\t\t\treturn values.hwb.concat([values.alpha]);\n\t\t}\n\t\treturn values.hwb;\n\t},\n\tcmykArray: function () {\n\t\treturn this.values.cmyk;\n\t},\n\trgbaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.rgb.concat([values.alpha]);\n\t},\n\thslaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.hsl.concat([values.alpha]);\n\t},\n\talpha: function (val) {\n\t\tif (val === undefined) {\n\t\t\treturn this.values.alpha;\n\t\t}\n\t\tthis.setValues('alpha', val);\n\t\treturn this;\n\t},\n\n\tred: function (val) {\n\t\treturn this.setChannel('rgb', 0, val);\n\t},\n\tgreen: function (val) {\n\t\treturn this.setChannel('rgb', 1, val);\n\t},\n\tblue: function (val) {\n\t\treturn this.setChannel('rgb', 2, val);\n\t},\n\thue: function (val) {\n\t\tif (val) {\n\t\t\tval %= 360;\n\t\t\tval = val < 0 ? 360 + val : val;\n\t\t}\n\t\treturn this.setChannel('hsl', 0, val);\n\t},\n\tsaturation: function (val) {\n\t\treturn this.setChannel('hsl', 1, val);\n\t},\n\tlightness: function (val) {\n\t\treturn this.setChannel('hsl', 2, val);\n\t},\n\tsaturationv: function (val) {\n\t\treturn this.setChannel('hsv', 1, val);\n\t},\n\twhiteness: function (val) {\n\t\treturn this.setChannel('hwb', 1, val);\n\t},\n\tblackness: function (val) {\n\t\treturn this.setChannel('hwb', 2, val);\n\t},\n\tvalue: function (val) {\n\t\treturn this.setChannel('hsv', 2, val);\n\t},\n\tcyan: function (val) {\n\t\treturn this.setChannel('cmyk', 0, val);\n\t},\n\tmagenta: function (val) {\n\t\treturn this.setChannel('cmyk', 1, val);\n\t},\n\tyellow: function (val) {\n\t\treturn this.setChannel('cmyk', 2, val);\n\t},\n\tblack: function (val) {\n\t\treturn this.setChannel('cmyk', 3, val);\n\t},\n\n\thexString: function () {\n\t\treturn colorString.hexString(this.values.rgb);\n\t},\n\trgbString: function () {\n\t\treturn colorString.rgbString(this.values.rgb, this.values.alpha);\n\t},\n\trgbaString: function () {\n\t\treturn colorString.rgbaString(this.values.rgb, this.values.alpha);\n\t},\n\tpercentString: function () {\n\t\treturn colorString.percentString(this.values.rgb, this.values.alpha);\n\t},\n\thslString: function () {\n\t\treturn colorString.hslString(this.values.hsl, this.values.alpha);\n\t},\n\thslaString: function () {\n\t\treturn colorString.hslaString(this.values.hsl, this.values.alpha);\n\t},\n\thwbString: function () {\n\t\treturn colorString.hwbString(this.values.hwb, this.values.alpha);\n\t},\n\tkeyword: function () {\n\t\treturn colorString.keyword(this.values.rgb, this.values.alpha);\n\t},\n\n\trgbNumber: function () {\n\t\tvar rgb = this.values.rgb;\n\t\treturn (rgb[0] << 16) | (rgb[1] << 8) | rgb[2];\n\t},\n\n\tluminosity: function () {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tvar rgb = this.values.rgb;\n\t\tvar lum = [];\n\t\tfor (var i = 0; i < rgb.length; i++) {\n\t\t\tvar chan = rgb[i] / 255;\n\t\t\tlum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\n\t\t}\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast: function (color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tvar lum1 = this.luminosity();\n\t\tvar lum2 = color2.luminosity();\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel: function (color2) {\n\t\tvar contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7.1) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tdark: function () {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tvar rgb = this.values.rgb;\n\t\tvar yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n\t\treturn yiq < 128;\n\t},\n\n\tlight: function () {\n\t\treturn !this.dark();\n\t},\n\n\tnegate: function () {\n\t\tvar rgb = [];\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\trgb[i] = 255 - this.values.rgb[i];\n\t\t}\n\t\tthis.setValues('rgb', rgb);\n\t\treturn this;\n\t},\n\n\tlighten: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] += hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdarken: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] -= hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tsaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] += hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdesaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] -= hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\twhiten: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[1] += hwb[1] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tblacken: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[2] += hwb[2] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tgreyscale: function () {\n\t\tvar rgb = this.values.rgb;\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tvar val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\tthis.setValues('rgb', [val, val, val]);\n\t\treturn this;\n\t},\n\n\tclearer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha - (alpha * ratio));\n\t\treturn this;\n\t},\n\n\topaquer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha + (alpha * ratio));\n\t\treturn this;\n\t},\n\n\trotate: function (degrees) {\n\t\tvar hsl = this.values.hsl;\n\t\tvar hue = (hsl[0] + degrees) % 360;\n\t\thsl[0] = hue < 0 ? 360 + hue : hue;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\t/**\n\t * Ported from sass implementation in C\n\t * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t */\n\tmix: function (mixinColor, weight) {\n\t\tvar color1 = this;\n\t\tvar color2 = mixinColor;\n\t\tvar p = weight === undefined ? 0.5 : weight;\n\n\t\tvar w = 2 * p - 1;\n\t\tvar a = color1.alpha() - color2.alpha();\n\n\t\tvar w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\tvar w2 = 1 - w1;\n\n\t\treturn this\n\t\t\t.rgb(\n\t\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\t\tw1 * color1.blue() + w2 * color2.blue()\n\t\t\t)\n\t\t\t.alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n\t},\n\n\ttoJSON: function () {\n\t\treturn this.rgb();\n\t},\n\n\tclone: function () {\n\t\t// NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n\t\t// making the final build way to big to embed in Chart.js. So let's do it manually,\n\t\t// assuming that values to clone are 1 dimension arrays containing only numbers,\n\t\t// except 'alpha' which is a number.\n\t\tvar result = new Color();\n\t\tvar source = this.values;\n\t\tvar target = result.values;\n\t\tvar value, type;\n\n\t\tfor (var prop in source) {\n\t\t\tif (source.hasOwnProperty(prop)) {\n\t\t\t\tvalue = source[prop];\n\t\t\t\ttype = ({}).toString.call(value);\n\t\t\t\tif (type === '[object Array]') {\n\t\t\t\t\ttarget[prop] = value.slice(0);\n\t\t\t\t} else if (type === '[object Number]') {\n\t\t\t\t\ttarget[prop] = value;\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error('unexpected color value:', value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n};\n\nColor.prototype.spaces = {\n\trgb: ['red', 'green', 'blue'],\n\thsl: ['hue', 'saturation', 'lightness'],\n\thsv: ['hue', 'saturation', 'value'],\n\thwb: ['hue', 'whiteness', 'blackness'],\n\tcmyk: ['cyan', 'magenta', 'yellow', 'black']\n};\n\nColor.prototype.maxes = {\n\trgb: [255, 255, 255],\n\thsl: [360, 100, 100],\n\thsv: [360, 100, 100],\n\thwb: [360, 100, 100],\n\tcmyk: [100, 100, 100, 100]\n};\n\nColor.prototype.getValues = function (space) {\n\tvar values = this.values;\n\tvar vals = {};\n\n\tfor (var i = 0; i < space.length; i++) {\n\t\tvals[space.charAt(i)] = values[space][i];\n\t}\n\n\tif (values.alpha !== 1) {\n\t\tvals.a = values.alpha;\n\t}\n\n\t// {r: 255, g: 255, b: 255, a: 0.4}\n\treturn vals;\n};\n\nColor.prototype.setValues = function (space, vals) {\n\tvar values = this.values;\n\tvar spaces = this.spaces;\n\tvar maxes = this.maxes;\n\tvar alpha = 1;\n\tvar i;\n\n\tthis.valid = true;\n\n\tif (space === 'alpha') {\n\t\talpha = vals;\n\t} else if (vals.length) {\n\t\t// [10, 10, 10]\n\t\tvalues[space] = vals.slice(0, space.length);\n\t\talpha = vals[space.length];\n\t} else if (vals[space.charAt(0)] !== undefined) {\n\t\t// {r: 10, g: 10, b: 10}\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[space.charAt(i)];\n\t\t}\n\n\t\talpha = vals.a;\n\t} else if (vals[spaces[space][0]] !== undefined) {\n\t\t// {red: 10, green: 10, blue: 10}\n\t\tvar chans = spaces[space];\n\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[chans[i]];\n\t\t}\n\n\t\talpha = vals.alpha;\n\t}\n\n\tvalues.alpha = Math.max(0, Math.min(1, (alpha === undefined ? values.alpha : alpha)));\n\n\tif (space === 'alpha') {\n\t\treturn false;\n\t}\n\n\tvar capped;\n\n\t// cap values of the space prior converting all values\n\tfor (i = 0; i < space.length; i++) {\n\t\tcapped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n\t\tvalues[space][i] = Math.round(capped);\n\t}\n\n\t// convert to all the other color spaces\n\tfor (var sname in spaces) {\n\t\tif (sname !== space) {\n\t\t\tvalues[sname] = colorConvert[space][sname](values[space]);\n\t\t}\n\t}\n\n\treturn true;\n};\n\nColor.prototype.setSpace = function (space, args) {\n\tvar vals = args[0];\n\n\tif (vals === undefined) {\n\t\t// color.rgb()\n\t\treturn this.getValues(space);\n\t}\n\n\t// color.rgb(10, 10, 10)\n\tif (typeof vals === 'number') {\n\t\tvals = Array.prototype.slice.call(args);\n\t}\n\n\tthis.setValues(space, vals);\n\treturn this;\n};\n\nColor.prototype.setChannel = function (space, index, val) {\n\tvar svalues = this.values[space];\n\tif (val === undefined) {\n\t\t// color.red()\n\t\treturn svalues[index];\n\t} else if (val === svalues[index]) {\n\t\t// color.red(color.red())\n\t\treturn this;\n\t}\n\n\t// color.red(100)\n\tsvalues[index] = val;\n\tthis.setValues(space, svalues);\n\n\treturn this;\n};\n\nif (typeof window !== 'undefined') {\n\twindow.Color = Color;\n}\n\nvar chartjsColor = Color;\n\n/**\n * @namespace Chart.helpers\n */\nvar helpers = {\n\t/**\n\t * An empty function that can be used, for example, for optional callback.\n\t */\n\tnoop: function() {},\n\n\t/**\n\t * Returns a unique id, sequentially generated from a global variable.\n\t * @returns {number}\n\t * @function\n\t */\n\tuid: (function() {\n\t\tvar id = 0;\n\t\treturn function() {\n\t\t\treturn id++;\n\t\t};\n\t}()),\n\n\t/**\n\t * Returns true if `value` is neither null nor undefined, else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {boolean}\n\t * @since 2.7.0\n\t */\n\tisNullOrUndef: function(value) {\n\t\treturn value === null || typeof value === 'undefined';\n\t},\n\n\t/**\n\t * Returns true if `value` is an array (including typed arrays), else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {boolean}\n\t * @function\n\t */\n\tisArray: function(value) {\n\t\tif (Array.isArray && Array.isArray(value)) {\n\t\t\treturn true;\n\t\t}\n\t\tvar type = Object.prototype.toString.call(value);\n\t\tif (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\t/**\n\t * Returns true if `value` is an object (excluding null), else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {boolean}\n\t * @since 2.7.0\n\t */\n\tisObject: function(value) {\n\t\treturn value !== null && Object.prototype.toString.call(value) === '[object Object]';\n\t},\n\n\t/**\n\t * Returns true if `value` is a finite number, else returns false\n\t * @param {*} value  - The value to test.\n\t * @returns {boolean}\n\t */\n\tisFinite: function(value) {\n\t\treturn (typeof value === 'number' || value instanceof Number) && isFinite(value);\n\t},\n\n\t/**\n\t * Returns `value` if defined, else returns `defaultValue`.\n\t * @param {*} value - The value to return if defined.\n\t * @param {*} defaultValue - The value to return if `value` is undefined.\n\t * @returns {*}\n\t */\n\tvalueOrDefault: function(value, defaultValue) {\n\t\treturn typeof value === 'undefined' ? defaultValue : value;\n\t},\n\n\t/**\n\t * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n\t * @param {Array} value - The array to lookup for value at `index`.\n\t * @param {number} index - The index in `value` to lookup for value.\n\t * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n\t * @returns {*}\n\t */\n\tvalueAtIndexOrDefault: function(value, index, defaultValue) {\n\t\treturn helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n\t},\n\n\t/**\n\t * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n\t * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n\t * @param {function} fn - The function to call.\n\t * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n\t * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n\t * @returns {*}\n\t */\n\tcallback: function(fn, args, thisArg) {\n\t\tif (fn && typeof fn.call === 'function') {\n\t\t\treturn fn.apply(thisArg, args);\n\t\t}\n\t},\n\n\t/**\n\t * Note(SB) for performance sake, this method should only be used when loopable type\n\t * is unknown or in none intensive code (not called often and small loopable). Else\n\t * it's preferable to use a regular for() loop and save extra function calls.\n\t * @param {object|Array} loopable - The object or array to be iterated.\n\t * @param {function} fn - The function to call for each item.\n\t * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n\t * @param {boolean} [reverse] - If true, iterates backward on the loopable.\n\t */\n\teach: function(loopable, fn, thisArg, reverse) {\n\t\tvar i, len, keys;\n\t\tif (helpers.isArray(loopable)) {\n\t\t\tlen = loopable.length;\n\t\t\tif (reverse) {\n\t\t\t\tfor (i = len - 1; i >= 0; i--) {\n\t\t\t\t\tfn.call(thisArg, loopable[i], i);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tfn.call(thisArg, loopable[i], i);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (helpers.isObject(loopable)) {\n\t\t\tkeys = Object.keys(loopable);\n\t\t\tlen = keys.length;\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tfn.call(thisArg, loopable[keys[i]], keys[i]);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n\t * @see https://stackoverflow.com/a/14853974\n\t * @param {Array} a0 - The array to compare\n\t * @param {Array} a1 - The array to compare\n\t * @returns {boolean}\n\t */\n\tarrayEquals: function(a0, a1) {\n\t\tvar i, ilen, v0, v1;\n\n\t\tif (!a0 || !a1 || a0.length !== a1.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (i = 0, ilen = a0.length; i < ilen; ++i) {\n\t\t\tv0 = a0[i];\n\t\t\tv1 = a1[i];\n\n\t\t\tif (v0 instanceof Array && v1 instanceof Array) {\n\t\t\t\tif (!helpers.arrayEquals(v0, v1)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else if (v0 !== v1) {\n\t\t\t\t// NOTE: two different object instances will never be equal: {x:20} != {x:20}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns a deep copy of `source` without keeping references on objects and arrays.\n\t * @param {*} source - The value to clone.\n\t * @returns {*}\n\t */\n\tclone: function(source) {\n\t\tif (helpers.isArray(source)) {\n\t\t\treturn source.map(helpers.clone);\n\t\t}\n\n\t\tif (helpers.isObject(source)) {\n\t\t\tvar target = {};\n\t\t\tvar keys = Object.keys(source);\n\t\t\tvar klen = keys.length;\n\t\t\tvar k = 0;\n\n\t\t\tfor (; k < klen; ++k) {\n\t\t\t\ttarget[keys[k]] = helpers.clone(source[keys[k]]);\n\t\t\t}\n\n\t\t\treturn target;\n\t\t}\n\n\t\treturn source;\n\t},\n\n\t/**\n\t * The default merger when Chart.helpers.merge is called without merger option.\n\t * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n\t * @private\n\t */\n\t_merger: function(key, target, source, options) {\n\t\tvar tval = target[key];\n\t\tvar sval = source[key];\n\n\t\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\n\t\t\thelpers.merge(tval, sval, options);\n\t\t} else {\n\t\t\ttarget[key] = helpers.clone(sval);\n\t\t}\n\t},\n\n\t/**\n\t * Merges source[key] in target[key] only if target[key] is undefined.\n\t * @private\n\t */\n\t_mergerIf: function(key, target, source) {\n\t\tvar tval = target[key];\n\t\tvar sval = source[key];\n\n\t\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\n\t\t\thelpers.mergeIf(tval, sval);\n\t\t} else if (!target.hasOwnProperty(key)) {\n\t\t\ttarget[key] = helpers.clone(sval);\n\t\t}\n\t},\n\n\t/**\n\t * Recursively deep copies `source` properties into `target` with the given `options`.\n\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n\t * @param {object} target - The target object in which all sources are merged into.\n\t * @param {object|object[]} source - Object(s) to merge into `target`.\n\t * @param {object} [options] - Merging options:\n\t * @param {function} [options.merger] - The merge method (key, target, source, options)\n\t * @returns {object} The `target` object.\n\t */\n\tmerge: function(target, source, options) {\n\t\tvar sources = helpers.isArray(source) ? source : [source];\n\t\tvar ilen = sources.length;\n\t\tvar merge, i, keys, klen, k;\n\n\t\tif (!helpers.isObject(target)) {\n\t\t\treturn target;\n\t\t}\n\n\t\toptions = options || {};\n\t\tmerge = options.merger || helpers._merger;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tsource = sources[i];\n\t\t\tif (!helpers.isObject(source)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tkeys = Object.keys(source);\n\t\t\tfor (k = 0, klen = keys.length; k < klen; ++k) {\n\t\t\t\tmerge(keys[k], target, source, options);\n\t\t\t}\n\t\t}\n\n\t\treturn target;\n\t},\n\n\t/**\n\t * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n\t * @param {object} target - The target object in which all sources are merged into.\n\t * @param {object|object[]} source - Object(s) to merge into `target`.\n\t * @returns {object} The `target` object.\n\t */\n\tmergeIf: function(target, source) {\n\t\treturn helpers.merge(target, source, {merger: helpers._mergerIf});\n\t},\n\n\t/**\n\t * Applies the contents of two or more objects together into the first object.\n\t * @param {object} target - The target object in which all objects are merged into.\n\t * @param {object} arg1 - Object containing additional properties to merge in target.\n\t * @param {object} argN - Additional objects containing properties to merge in target.\n\t * @returns {object} The `target` object.\n\t */\n\textend: function(target) {\n\t\tvar setFn = function(value, key) {\n\t\t\ttarget[key] = value;\n\t\t};\n\t\tfor (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n\t\t\thelpers.each(arguments[i], setFn);\n\t\t}\n\t\treturn target;\n\t},\n\n\t/**\n\t * Basic javascript inheritance based on the model created in Backbone.js\n\t */\n\tinherits: function(extensions) {\n\t\tvar me = this;\n\t\tvar ChartElement = (extensions && extensions.hasOwnProperty('constructor')) ? extensions.constructor : function() {\n\t\t\treturn me.apply(this, arguments);\n\t\t};\n\n\t\tvar Surrogate = function() {\n\t\t\tthis.constructor = ChartElement;\n\t\t};\n\n\t\tSurrogate.prototype = me.prototype;\n\t\tChartElement.prototype = new Surrogate();\n\t\tChartElement.extend = helpers.inherits;\n\n\t\tif (extensions) {\n\t\t\thelpers.extend(ChartElement.prototype, extensions);\n\t\t}\n\n\t\tChartElement.__super__ = me.prototype;\n\t\treturn ChartElement;\n\t}\n};\n\nvar helpers_core = helpers;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.callback instead.\n * @function Chart.helpers.callCallback\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\nhelpers.callCallback = helpers.callback;\n\n/**\n * Provided for backward compatibility, use Array.prototype.indexOf instead.\n * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n * @function Chart.helpers.indexOf\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.indexOf = function(array, item, fromIndex) {\n\treturn Array.prototype.indexOf.call(array, item, fromIndex);\n};\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n * @function Chart.helpers.getValueOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.getValueOrDefault = helpers.valueOrDefault;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n * @function Chart.helpers.getValueAtIndexOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easingEffects\n * @see http://www.robertpenner.com/easing/\n */\nvar effects = {\n\tlinear: function(t) {\n\t\treturn t;\n\t},\n\n\teaseInQuad: function(t) {\n\t\treturn t * t;\n\t},\n\n\teaseOutQuad: function(t) {\n\t\treturn -t * (t - 2);\n\t},\n\n\teaseInOutQuad: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t;\n\t\t}\n\t\treturn -0.5 * ((--t) * (t - 2) - 1);\n\t},\n\n\teaseInCubic: function(t) {\n\t\treturn t * t * t;\n\t},\n\n\teaseOutCubic: function(t) {\n\t\treturn (t = t - 1) * t * t + 1;\n\t},\n\n\teaseInOutCubic: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t;\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * t + 2);\n\t},\n\n\teaseInQuart: function(t) {\n\t\treturn t * t * t * t;\n\t},\n\n\teaseOutQuart: function(t) {\n\t\treturn -((t = t - 1) * t * t * t - 1);\n\t},\n\n\teaseInOutQuart: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t * t;\n\t\t}\n\t\treturn -0.5 * ((t -= 2) * t * t * t - 2);\n\t},\n\n\teaseInQuint: function(t) {\n\t\treturn t * t * t * t * t;\n\t},\n\n\teaseOutQuint: function(t) {\n\t\treturn (t = t - 1) * t * t * t * t + 1;\n\t},\n\n\teaseInOutQuint: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t * t * t;\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * t * t * t + 2);\n\t},\n\n\teaseInSine: function(t) {\n\t\treturn -Math.cos(t * (Math.PI / 2)) + 1;\n\t},\n\n\teaseOutSine: function(t) {\n\t\treturn Math.sin(t * (Math.PI / 2));\n\t},\n\n\teaseInOutSine: function(t) {\n\t\treturn -0.5 * (Math.cos(Math.PI * t) - 1);\n\t},\n\n\teaseInExpo: function(t) {\n\t\treturn (t === 0) ? 0 : Math.pow(2, 10 * (t - 1));\n\t},\n\n\teaseOutExpo: function(t) {\n\t\treturn (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1;\n\t},\n\n\teaseInOutExpo: function(t) {\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * Math.pow(2, 10 * (t - 1));\n\t\t}\n\t\treturn 0.5 * (-Math.pow(2, -10 * --t) + 2);\n\t},\n\n\teaseInCirc: function(t) {\n\t\tif (t >= 1) {\n\t\t\treturn t;\n\t\t}\n\t\treturn -(Math.sqrt(1 - t * t) - 1);\n\t},\n\n\teaseOutCirc: function(t) {\n\t\treturn Math.sqrt(1 - (t = t - 1) * t);\n\t},\n\n\teaseInOutCirc: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn -0.5 * (Math.sqrt(1 - t * t) - 1);\n\t\t}\n\t\treturn 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n\t},\n\n\teaseInElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.3;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\treturn -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n\t},\n\n\teaseOutElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.3;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\treturn a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n\t},\n\n\teaseInOutElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif ((t /= 0.5) === 2) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.45;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\tif (t < 1) {\n\t\t\treturn -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n\t\t}\n\t\treturn a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\t},\n\teaseInBack: function(t) {\n\t\tvar s = 1.70158;\n\t\treturn t * t * ((s + 1) * t - s);\n\t},\n\n\teaseOutBack: function(t) {\n\t\tvar s = 1.70158;\n\t\treturn (t = t - 1) * t * ((s + 1) * t + s) + 1;\n\t},\n\n\teaseInOutBack: function(t) {\n\t\tvar s = 1.70158;\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n\t},\n\n\teaseInBounce: function(t) {\n\t\treturn 1 - effects.easeOutBounce(1 - t);\n\t},\n\n\teaseOutBounce: function(t) {\n\t\tif (t < (1 / 2.75)) {\n\t\t\treturn 7.5625 * t * t;\n\t\t}\n\t\tif (t < (2 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (1.5 / 2.75)) * t + 0.75;\n\t\t}\n\t\tif (t < (2.5 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375;\n\t\t}\n\t\treturn 7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375;\n\t},\n\n\teaseInOutBounce: function(t) {\n\t\tif (t < 0.5) {\n\t\t\treturn effects.easeInBounce(t * 2) * 0.5;\n\t\t}\n\t\treturn effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n\t}\n};\n\nvar helpers_easing = {\n\teffects: effects\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n * @function Chart.helpers.easingEffects\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers_core.easingEffects = effects;\n\nvar PI = Math.PI;\nvar RAD_PER_DEG = PI / 180;\nvar DOUBLE_PI = PI * 2;\nvar HALF_PI = PI / 2;\nvar QUARTER_PI = PI / 4;\nvar TWO_THIRDS_PI = PI * 2 / 3;\n\n/**\n * @namespace Chart.helpers.canvas\n */\nvar exports$1 = {\n\t/**\n\t * Clears the entire canvas associated to the given `chart`.\n\t * @param {Chart} chart - The chart for which to clear the canvas.\n\t */\n\tclear: function(chart) {\n\t\tchart.ctx.clearRect(0, 0, chart.width, chart.height);\n\t},\n\n\t/**\n\t * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n\t * given size (width, height) and the same `radius` for all corners.\n\t * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n\t * @param {number} x - The x axis of the coordinate for the rectangle starting point.\n\t * @param {number} y - The y axis of the coordinate for the rectangle starting point.\n\t * @param {number} width - The rectangle's width.\n\t * @param {number} height - The rectangle's height.\n\t * @param {number} radius - The rounded amount (in pixels) for the four corners.\n\t * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n\t */\n\troundedRect: function(ctx, x, y, width, height, radius) {\n\t\tif (radius) {\n\t\t\tvar r = Math.min(radius, height / 2, width / 2);\n\t\t\tvar left = x + r;\n\t\t\tvar top = y + r;\n\t\t\tvar right = x + width - r;\n\t\t\tvar bottom = y + height - r;\n\n\t\t\tctx.moveTo(x, top);\n\t\t\tif (left < right && top < bottom) {\n\t\t\t\tctx.arc(left, top, r, -PI, -HALF_PI);\n\t\t\t\tctx.arc(right, top, r, -HALF_PI, 0);\n\t\t\t\tctx.arc(right, bottom, r, 0, HALF_PI);\n\t\t\t\tctx.arc(left, bottom, r, HALF_PI, PI);\n\t\t\t} else if (left < right) {\n\t\t\t\tctx.moveTo(left, y);\n\t\t\t\tctx.arc(right, top, r, -HALF_PI, HALF_PI);\n\t\t\t\tctx.arc(left, top, r, HALF_PI, PI + HALF_PI);\n\t\t\t} else if (top < bottom) {\n\t\t\t\tctx.arc(left, top, r, -PI, 0);\n\t\t\t\tctx.arc(left, bottom, r, 0, PI);\n\t\t\t} else {\n\t\t\t\tctx.arc(left, top, r, -PI, PI);\n\t\t\t}\n\t\t\tctx.closePath();\n\t\t\tctx.moveTo(x, y);\n\t\t} else {\n\t\t\tctx.rect(x, y, width, height);\n\t\t}\n\t},\n\n\tdrawPoint: function(ctx, style, radius, x, y, rotation) {\n\t\tvar type, xOffset, yOffset, size, cornerRadius;\n\t\tvar rad = (rotation || 0) * RAD_PER_DEG;\n\n\t\tif (style && typeof style === 'object') {\n\t\t\ttype = style.toString();\n\t\t\tif (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n\t\t\t\tctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (isNaN(radius) || radius <= 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tctx.beginPath();\n\n\t\tswitch (style) {\n\t\t// Default includes circle\n\t\tdefault:\n\t\t\tctx.arc(x, y, radius, 0, DOUBLE_PI);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'triangle':\n\t\t\tctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n\t\t\trad += TWO_THIRDS_PI;\n\t\t\tctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n\t\t\trad += TWO_THIRDS_PI;\n\t\t\tctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'rectRounded':\n\t\t\t// NOTE: the rounded rect implementation changed to use `arc` instead of\n\t\t\t// `quadraticCurveTo` since it generates better results when rect is\n\t\t\t// almost a circle. 0.516 (instead of 0.5) produces results with visually\n\t\t\t// closer proportion to the previous impl and it is inscribed in the\n\t\t\t// circle with `radius`. For more details, see the following PRs:\n\t\t\t// https://github.com/chartjs/Chart.js/issues/5597\n\t\t\t// https://github.com/chartjs/Chart.js/issues/5858\n\t\t\tcornerRadius = radius * 0.516;\n\t\t\tsize = radius - cornerRadius;\n\t\t\txOffset = Math.cos(rad + QUARTER_PI) * size;\n\t\t\tyOffset = Math.sin(rad + QUARTER_PI) * size;\n\t\t\tctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n\t\t\tctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n\t\t\tctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n\t\t\tctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'rect':\n\t\t\tif (!rotation) {\n\t\t\t\tsize = Math.SQRT1_2 * radius;\n\t\t\t\tctx.rect(x - size, y - size, 2 * size, 2 * size);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\trad += QUARTER_PI;\n\t\t\t/* falls through */\n\t\tcase 'rectRot':\n\t\t\txOffset = Math.cos(rad) * radius;\n\t\t\tyOffset = Math.sin(rad) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + yOffset, y - xOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.lineTo(x - yOffset, y + xOffset);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'crossRot':\n\t\t\trad += QUARTER_PI;\n\t\t\t/* falls through */\n\t\tcase 'cross':\n\t\t\txOffset = Math.cos(rad) * radius;\n\t\t\tyOffset = Math.sin(rad) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x + yOffset, y - xOffset);\n\t\t\tctx.lineTo(x - yOffset, y + xOffset);\n\t\t\tbreak;\n\t\tcase 'star':\n\t\t\txOffset = Math.cos(rad) * radius;\n\t\t\tyOffset = Math.sin(rad) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x + yOffset, y - xOffset);\n\t\t\tctx.lineTo(x - yOffset, y + xOffset);\n\t\t\trad += QUARTER_PI;\n\t\t\txOffset = Math.cos(rad) * radius;\n\t\t\tyOffset = Math.sin(rad) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x + yOffset, y - xOffset);\n\t\t\tctx.lineTo(x - yOffset, y + xOffset);\n\t\t\tbreak;\n\t\tcase 'line':\n\t\t\txOffset = Math.cos(rad) * radius;\n\t\t\tyOffset = Math.sin(rad) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tbreak;\n\t\tcase 'dash':\n\t\t\tctx.moveTo(x, y);\n\t\t\tctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n\t\t\tbreak;\n\t\t}\n\n\t\tctx.fill();\n\t\tctx.stroke();\n\t},\n\n\t/**\n\t * Returns true if the point is inside the rectangle\n\t * @param {object} point - The point to test\n\t * @param {object} area - The rectangle\n\t * @returns {boolean}\n\t * @private\n\t */\n\t_isPointInArea: function(point, area) {\n\t\tvar epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n\n\t\treturn point.x > area.left - epsilon && point.x < area.right + epsilon &&\n\t\t\tpoint.y > area.top - epsilon && point.y < area.bottom + epsilon;\n\t},\n\n\tclipArea: function(ctx, area) {\n\t\tctx.save();\n\t\tctx.beginPath();\n\t\tctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n\t\tctx.clip();\n\t},\n\n\tunclipArea: function(ctx) {\n\t\tctx.restore();\n\t},\n\n\tlineTo: function(ctx, previous, target, flip) {\n\t\tvar stepped = target.steppedLine;\n\t\tif (stepped) {\n\t\t\tif (stepped === 'middle') {\n\t\t\t\tvar midpoint = (previous.x + target.x) / 2.0;\n\t\t\t\tctx.lineTo(midpoint, flip ? target.y : previous.y);\n\t\t\t\tctx.lineTo(midpoint, flip ? previous.y : target.y);\n\t\t\t} else if ((stepped === 'after' && !flip) || (stepped !== 'after' && flip)) {\n\t\t\t\tctx.lineTo(previous.x, target.y);\n\t\t\t} else {\n\t\t\t\tctx.lineTo(target.x, previous.y);\n\t\t\t}\n\t\t\tctx.lineTo(target.x, target.y);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!target.tension) {\n\t\t\tctx.lineTo(target.x, target.y);\n\t\t\treturn;\n\t\t}\n\n\t\tctx.bezierCurveTo(\n\t\t\tflip ? previous.controlPointPreviousX : previous.controlPointNextX,\n\t\t\tflip ? previous.controlPointPreviousY : previous.controlPointNextY,\n\t\t\tflip ? target.controlPointNextX : target.controlPointPreviousX,\n\t\t\tflip ? target.controlPointNextY : target.controlPointPreviousY,\n\t\t\ttarget.x,\n\t\t\ttarget.y);\n\t}\n};\n\nvar helpers_canvas = exports$1;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n * @namespace Chart.helpers.clear\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers_core.clear = exports$1.clear;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n * @namespace Chart.helpers.drawRoundedRectangle\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers_core.drawRoundedRectangle = function(ctx) {\n\tctx.beginPath();\n\texports$1.roundedRect.apply(exports$1, arguments);\n};\n\nvar defaults = {\n\t/**\n\t * @private\n\t */\n\t_set: function(scope, values) {\n\t\treturn helpers_core.merge(this[scope] || (this[scope] = {}), values);\n\t}\n};\n\ndefaults._set('global', {\n\tdefaultColor: 'rgba(0,0,0,0.1)',\n\tdefaultFontColor: '#666',\n\tdefaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\tdefaultFontSize: 12,\n\tdefaultFontStyle: 'normal',\n\tdefaultLineHeight: 1.2,\n\tshowLines: true\n});\n\nvar core_defaults = defaults;\n\nvar valueOrDefault = helpers_core.valueOrDefault;\n\n/**\n * Converts the given font object into a CSS font string.\n * @param {object} font - A font object.\n * @return {string} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nfunction toFontString(font) {\n\tif (!font || helpers_core.isNullOrUndef(font.size) || helpers_core.isNullOrUndef(font.family)) {\n\t\treturn null;\n\t}\n\n\treturn (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\nvar helpers_options = {\n\t/**\n\t * Converts the given line height `value` in pixels for a specific font `size`.\n\t * @param {number|string} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n\t * @param {number} size - The font size (in pixels) used to resolve relative `value`.\n\t * @returns {number} The effective line height in pixels (size * 1.2 if value is invalid).\n\t * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n\t * @since 2.7.0\n\t */\n\ttoLineHeight: function(value, size) {\n\t\tvar matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\t\tif (!matches || matches[1] === 'normal') {\n\t\t\treturn size * 1.2;\n\t\t}\n\n\t\tvalue = +matches[2];\n\n\t\tswitch (matches[3]) {\n\t\tcase 'px':\n\t\t\treturn value;\n\t\tcase '%':\n\t\t\tvalue /= 100;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\n\t\treturn size * value;\n\t},\n\n\t/**\n\t * Converts the given value into a padding object with pre-computed width/height.\n\t * @param {number|object} value - If a number, set the value to all TRBL component,\n\t *  else, if and object, use defined properties and sets undefined ones to 0.\n\t * @returns {object} The padding values (top, right, bottom, left, width, height)\n\t * @since 2.7.0\n\t */\n\ttoPadding: function(value) {\n\t\tvar t, r, b, l;\n\n\t\tif (helpers_core.isObject(value)) {\n\t\t\tt = +value.top || 0;\n\t\t\tr = +value.right || 0;\n\t\t\tb = +value.bottom || 0;\n\t\t\tl = +value.left || 0;\n\t\t} else {\n\t\t\tt = r = b = l = +value || 0;\n\t\t}\n\n\t\treturn {\n\t\t\ttop: t,\n\t\t\tright: r,\n\t\t\tbottom: b,\n\t\t\tleft: l,\n\t\t\theight: t + b,\n\t\t\twidth: l + r\n\t\t};\n\t},\n\n\t/**\n\t * Parses font options and returns the font object.\n\t * @param {object} options - A object that contains font options to be parsed.\n\t * @return {object} The font object.\n\t * @todo Support font.* options and renamed to toFont().\n\t * @private\n\t */\n\t_parseFont: function(options) {\n\t\tvar globalDefaults = core_defaults.global;\n\t\tvar size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n\t\tvar font = {\n\t\t\tfamily: valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily),\n\t\t\tlineHeight: helpers_core.options.toLineHeight(valueOrDefault(options.lineHeight, globalDefaults.defaultLineHeight), size),\n\t\t\tsize: size,\n\t\t\tstyle: valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle),\n\t\t\tweight: null,\n\t\t\tstring: ''\n\t\t};\n\n\t\tfont.string = toFontString(font);\n\t\treturn font;\n\t},\n\n\t/**\n\t * Evaluates the given `inputs` sequentially and returns the first defined value.\n\t * @param {Array} inputs - An array of values, falling back to the last value.\n\t * @param {object} [context] - If defined and the current value is a function, the value\n\t * is called with `context` as first argument and the result becomes the new input.\n\t * @param {number} [index] - If defined and the current value is an array, the value\n\t * at `index` become the new input.\n\t * @since 2.7.0\n\t */\n\tresolve: function(inputs, context, index) {\n\t\tvar i, ilen, value;\n\n\t\tfor (i = 0, ilen = inputs.length; i < ilen; ++i) {\n\t\t\tvalue = inputs[i];\n\t\t\tif (value === undefined) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (context !== undefined && typeof value === 'function') {\n\t\t\t\tvalue = value(context);\n\t\t\t}\n\t\t\tif (index !== undefined && helpers_core.isArray(value)) {\n\t\t\t\tvalue = value[index];\n\t\t\t}\n\t\t\tif (value !== undefined) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t}\n\t}\n};\n\nvar helpers$1 = helpers_core;\nvar easing = helpers_easing;\nvar canvas = helpers_canvas;\nvar options = helpers_options;\nhelpers$1.easing = easing;\nhelpers$1.canvas = canvas;\nhelpers$1.options = options;\n\nfunction interpolate(start, view, model, ease) {\n\tvar keys = Object.keys(model);\n\tvar i, ilen, key, actual, origin, target, type, c0, c1;\n\n\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\tkey = keys[i];\n\n\t\ttarget = model[key];\n\n\t\t// if a value is added to the model after pivot() has been called, the view\n\t\t// doesn't contain it, so let's initialize the view to the target value.\n\t\tif (!view.hasOwnProperty(key)) {\n\t\t\tview[key] = target;\n\t\t}\n\n\t\tactual = view[key];\n\n\t\tif (actual === target || key[0] === '_') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!start.hasOwnProperty(key)) {\n\t\t\tstart[key] = actual;\n\t\t}\n\n\t\torigin = start[key];\n\n\t\ttype = typeof target;\n\n\t\tif (type === typeof origin) {\n\t\t\tif (type === 'string') {\n\t\t\t\tc0 = chartjsColor(origin);\n\t\t\t\tif (c0.valid) {\n\t\t\t\t\tc1 = chartjsColor(target);\n\t\t\t\t\tif (c1.valid) {\n\t\t\t\t\t\tview[key] = c1.mix(c0, ease).rgbString();\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (helpers$1.isFinite(origin) && helpers$1.isFinite(target)) {\n\t\t\t\tview[key] = origin + (target - origin) * ease;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\tview[key] = target;\n\t}\n}\n\nvar Element = function(configuration) {\n\thelpers$1.extend(this, configuration);\n\tthis.initialize.apply(this, arguments);\n};\n\nhelpers$1.extend(Element.prototype, {\n\n\tinitialize: function() {\n\t\tthis.hidden = false;\n\t},\n\n\tpivot: function() {\n\t\tvar me = this;\n\t\tif (!me._view) {\n\t\t\tme._view = helpers$1.clone(me._model);\n\t\t}\n\t\tme._start = {};\n\t\treturn me;\n\t},\n\n\ttransition: function(ease) {\n\t\tvar me = this;\n\t\tvar model = me._model;\n\t\tvar start = me._start;\n\t\tvar view = me._view;\n\n\t\t// No animation -> No Transition\n\t\tif (!model || ease === 1) {\n\t\t\tme._view = model;\n\t\t\tme._start = null;\n\t\t\treturn me;\n\t\t}\n\n\t\tif (!view) {\n\t\t\tview = me._view = {};\n\t\t}\n\n\t\tif (!start) {\n\t\t\tstart = me._start = {};\n\t\t}\n\n\t\tinterpolate(start, view, model, ease);\n\n\t\treturn me;\n\t},\n\n\ttooltipPosition: function() {\n\t\treturn {\n\t\t\tx: this._model.x,\n\t\t\ty: this._model.y\n\t\t};\n\t},\n\n\thasValue: function() {\n\t\treturn helpers$1.isNumber(this._model.x) && helpers$1.isNumber(this._model.y);\n\t}\n});\n\nElement.extend = helpers$1.inherits;\n\nvar core_element = Element;\n\nvar exports$2 = core_element.extend({\n\tchart: null, // the animation associated chart instance\n\tcurrentStep: 0, // the current animation step\n\tnumSteps: 60, // default number of steps\n\teasing: '', // the easing to use for this animation\n\trender: null, // render function used by the animation service\n\n\tonAnimationProgress: null, // user specified callback to fire on each step of the animation\n\tonAnimationComplete: null, // user specified callback to fire when the animation finishes\n});\n\nvar core_animation = exports$2;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.Animation instead\n * @prop Chart.Animation#animationObject\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n */\nObject.defineProperty(exports$2.prototype, 'animationObject', {\n\tget: function() {\n\t\treturn this;\n\t}\n});\n\n/**\n * Provided for backward compatibility, use Chart.Animation#chart instead\n * @prop Chart.Animation#chartInstance\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n */\nObject.defineProperty(exports$2.prototype, 'chartInstance', {\n\tget: function() {\n\t\treturn this.chart;\n\t},\n\tset: function(value) {\n\t\tthis.chart = value;\n\t}\n});\n\ncore_defaults._set('global', {\n\tanimation: {\n\t\tduration: 1000,\n\t\teasing: 'easeOutQuart',\n\t\tonProgress: helpers$1.noop,\n\t\tonComplete: helpers$1.noop\n\t}\n});\n\nvar core_animations = {\n\tanimations: [],\n\trequest: null,\n\n\t/**\n\t * @param {Chart} chart - The chart to animate.\n\t * @param {Chart.Animation} animation - The animation that we will animate.\n\t * @param {number} duration - The animation duration in ms.\n\t * @param {boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n\t */\n\taddAnimation: function(chart, animation, duration, lazy) {\n\t\tvar animations = this.animations;\n\t\tvar i, ilen;\n\n\t\tanimation.chart = chart;\n\t\tanimation.startTime = Date.now();\n\t\tanimation.duration = duration;\n\n\t\tif (!lazy) {\n\t\t\tchart.animating = true;\n\t\t}\n\n\t\tfor (i = 0, ilen = animations.length; i < ilen; ++i) {\n\t\t\tif (animations[i].chart === chart) {\n\t\t\t\tanimations[i] = animation;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tanimations.push(animation);\n\n\t\t// If there are no animations queued, manually kickstart a digest, for lack of a better word\n\t\tif (animations.length === 1) {\n\t\t\tthis.requestAnimationFrame();\n\t\t}\n\t},\n\n\tcancelAnimation: function(chart) {\n\t\tvar index = helpers$1.findIndex(this.animations, function(animation) {\n\t\t\treturn animation.chart === chart;\n\t\t});\n\n\t\tif (index !== -1) {\n\t\t\tthis.animations.splice(index, 1);\n\t\t\tchart.animating = false;\n\t\t}\n\t},\n\n\trequestAnimationFrame: function() {\n\t\tvar me = this;\n\t\tif (me.request === null) {\n\t\t\t// Skip animation frame requests until the active one is executed.\n\t\t\t// This can happen when processing mouse events, e.g. 'mousemove'\n\t\t\t// and 'mouseout' events will trigger multiple renders.\n\t\t\tme.request = helpers$1.requestAnimFrame.call(window, function() {\n\t\t\t\tme.request = null;\n\t\t\t\tme.startDigest();\n\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tstartDigest: function() {\n\t\tvar me = this;\n\n\t\tme.advance();\n\n\t\t// Do we have more stuff to animate?\n\t\tif (me.animations.length > 0) {\n\t\t\tme.requestAnimationFrame();\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tadvance: function() {\n\t\tvar animations = this.animations;\n\t\tvar animation, chart, numSteps, nextStep;\n\t\tvar i = 0;\n\n\t\t// 1 animation per chart, so we are looping charts here\n\t\twhile (i < animations.length) {\n\t\t\tanimation = animations[i];\n\t\t\tchart = animation.chart;\n\t\t\tnumSteps = animation.numSteps;\n\n\t\t\t// Make sure that currentStep starts at 1\n\t\t\t// https://github.com/chartjs/Chart.js/issues/6104\n\t\t\tnextStep = Math.floor((Date.now() - animation.startTime) / animation.duration * numSteps) + 1;\n\t\t\tanimation.currentStep = Math.min(nextStep, numSteps);\n\n\t\t\thelpers$1.callback(animation.render, [chart, animation], chart);\n\t\t\thelpers$1.callback(animation.onAnimationProgress, [animation], chart);\n\n\t\t\tif (animation.currentStep >= numSteps) {\n\t\t\t\thelpers$1.callback(animation.onAnimationComplete, [animation], chart);\n\t\t\t\tchart.animating = false;\n\t\t\t\tanimations.splice(i, 1);\n\t\t\t} else {\n\t\t\t\t++i;\n\t\t\t}\n\t\t}\n\t}\n};\n\nvar resolve = helpers$1.options.resolve;\n\nvar arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n */\nfunction listenArrayEvents(array, listener) {\n\tif (array._chartjs) {\n\t\tarray._chartjs.listeners.push(listener);\n\t\treturn;\n\t}\n\n\tObject.defineProperty(array, '_chartjs', {\n\t\tconfigurable: true,\n\t\tenumerable: false,\n\t\tvalue: {\n\t\t\tlisteners: [listener]\n\t\t}\n\t});\n\n\tarrayEvents.forEach(function(key) {\n\t\tvar method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n\t\tvar base = array[key];\n\n\t\tObject.defineProperty(array, key, {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tvalue: function() {\n\t\t\t\tvar args = Array.prototype.slice.call(arguments);\n\t\t\t\tvar res = base.apply(this, args);\n\n\t\t\t\thelpers$1.each(array._chartjs.listeners, function(object) {\n\t\t\t\t\tif (typeof object[method] === 'function') {\n\t\t\t\t\t\tobject[method].apply(object, args);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn res;\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nfunction unlistenArrayEvents(array, listener) {\n\tvar stub = array._chartjs;\n\tif (!stub) {\n\t\treturn;\n\t}\n\n\tvar listeners = stub.listeners;\n\tvar index = listeners.indexOf(listener);\n\tif (index !== -1) {\n\t\tlisteners.splice(index, 1);\n\t}\n\n\tif (listeners.length > 0) {\n\t\treturn;\n\t}\n\n\tarrayEvents.forEach(function(key) {\n\t\tdelete array[key];\n\t});\n\n\tdelete array._chartjs;\n}\n\n// Base class for all dataset controllers (line, bar, etc)\nvar DatasetController = function(chart, datasetIndex) {\n\tthis.initialize(chart, datasetIndex);\n};\n\nhelpers$1.extend(DatasetController.prototype, {\n\n\t/**\n\t * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n\t * @type {Chart.core.element}\n\t */\n\tdatasetElementType: null,\n\n\t/**\n\t * Element type used to generate a meta data (e.g. Chart.element.Point).\n\t * @type {Chart.core.element}\n\t */\n\tdataElementType: null,\n\n\tinitialize: function(chart, datasetIndex) {\n\t\tvar me = this;\n\t\tme.chart = chart;\n\t\tme.index = datasetIndex;\n\t\tme.linkScales();\n\t\tme.addElements();\n\t},\n\n\tupdateIndex: function(datasetIndex) {\n\t\tthis.index = datasetIndex;\n\t},\n\n\tlinkScales: function() {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar dataset = me.getDataset();\n\n\t\tif (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n\t\t\tmeta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n\t\t}\n\t\tif (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n\t\t\tmeta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n\t\t}\n\t},\n\n\tgetDataset: function() {\n\t\treturn this.chart.data.datasets[this.index];\n\t},\n\n\tgetMeta: function() {\n\t\treturn this.chart.getDatasetMeta(this.index);\n\t},\n\n\tgetScaleForId: function(scaleID) {\n\t\treturn this.chart.scales[scaleID];\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getValueScaleId: function() {\n\t\treturn this.getMeta().yAxisID;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getIndexScaleId: function() {\n\t\treturn this.getMeta().xAxisID;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getValueScale: function() {\n\t\treturn this.getScaleForId(this._getValueScaleId());\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getIndexScale: function() {\n\t\treturn this.getScaleForId(this._getIndexScaleId());\n\t},\n\n\treset: function() {\n\t\tthis.update(true);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tdestroy: function() {\n\t\tif (this._data) {\n\t\t\tunlistenArrayEvents(this._data, this);\n\t\t}\n\t},\n\n\tcreateMetaDataset: function() {\n\t\tvar me = this;\n\t\tvar type = me.datasetElementType;\n\t\treturn type && new type({\n\t\t\t_chart: me.chart,\n\t\t\t_datasetIndex: me.index\n\t\t});\n\t},\n\n\tcreateMetaData: function(index) {\n\t\tvar me = this;\n\t\tvar type = me.dataElementType;\n\t\treturn type && new type({\n\t\t\t_chart: me.chart,\n\t\t\t_datasetIndex: me.index,\n\t\t\t_index: index\n\t\t});\n\t},\n\n\taddElements: function() {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar data = me.getDataset().data || [];\n\t\tvar metaData = meta.data;\n\t\tvar i, ilen;\n\n\t\tfor (i = 0, ilen = data.length; i < ilen; ++i) {\n\t\t\tmetaData[i] = metaData[i] || me.createMetaData(i);\n\t\t}\n\n\t\tmeta.dataset = meta.dataset || me.createMetaDataset();\n\t},\n\n\taddElementAndReset: function(index) {\n\t\tvar element = this.createMetaData(index);\n\t\tthis.getMeta().data.splice(index, 0, element);\n\t\tthis.updateElement(element, index, true);\n\t},\n\n\tbuildOrUpdateElements: function() {\n\t\tvar me = this;\n\t\tvar dataset = me.getDataset();\n\t\tvar data = dataset.data || (dataset.data = []);\n\n\t\t// In order to correctly handle data addition/deletion animation (an thus simulate\n\t\t// real-time charts), we need to monitor these data modifications and synchronize\n\t\t// the internal meta data accordingly.\n\t\tif (me._data !== data) {\n\t\t\tif (me._data) {\n\t\t\t\t// This case happens when the user replaced the data array instance.\n\t\t\t\tunlistenArrayEvents(me._data, me);\n\t\t\t}\n\n\t\t\tif (data && Object.isExtensible(data)) {\n\t\t\t\tlistenArrayEvents(data, me);\n\t\t\t}\n\t\t\tme._data = data;\n\t\t}\n\n\t\t// Re-sync meta data in case the user replaced the data array or if we missed\n\t\t// any updates and so make sure that we handle number of datapoints changing.\n\t\tme.resyncElements();\n\t},\n\n\tupdate: helpers$1.noop,\n\n\ttransition: function(easingValue) {\n\t\tvar meta = this.getMeta();\n\t\tvar elements = meta.data || [];\n\t\tvar ilen = elements.length;\n\t\tvar i = 0;\n\n\t\tfor (; i < ilen; ++i) {\n\t\t\telements[i].transition(easingValue);\n\t\t}\n\n\t\tif (meta.dataset) {\n\t\t\tmeta.dataset.transition(easingValue);\n\t\t}\n\t},\n\n\tdraw: function() {\n\t\tvar meta = this.getMeta();\n\t\tvar elements = meta.data || [];\n\t\tvar ilen = elements.length;\n\t\tvar i = 0;\n\n\t\tif (meta.dataset) {\n\t\t\tmeta.dataset.draw();\n\t\t}\n\n\t\tfor (; i < ilen; ++i) {\n\t\t\telements[i].draw();\n\t\t}\n\t},\n\n\tremoveHoverStyle: function(element) {\n\t\thelpers$1.merge(element._model, element.$previousStyle || {});\n\t\tdelete element.$previousStyle;\n\t},\n\n\tsetHoverStyle: function(element) {\n\t\tvar dataset = this.chart.data.datasets[element._datasetIndex];\n\t\tvar index = element._index;\n\t\tvar custom = element.custom || {};\n\t\tvar model = element._model;\n\t\tvar getHoverColor = helpers$1.getHoverColor;\n\n\t\telement.$previousStyle = {\n\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\tborderColor: model.borderColor,\n\t\t\tborderWidth: model.borderWidth\n\t\t};\n\n\t\tmodel.backgroundColor = resolve([custom.hoverBackgroundColor, dataset.hoverBackgroundColor, getHoverColor(model.backgroundColor)], undefined, index);\n\t\tmodel.borderColor = resolve([custom.hoverBorderColor, dataset.hoverBorderColor, getHoverColor(model.borderColor)], undefined, index);\n\t\tmodel.borderWidth = resolve([custom.hoverBorderWidth, dataset.hoverBorderWidth, model.borderWidth], undefined, index);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tresyncElements: function() {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar data = me.getDataset().data;\n\t\tvar numMeta = meta.data.length;\n\t\tvar numData = data.length;\n\n\t\tif (numData < numMeta) {\n\t\t\tmeta.data.splice(numData, numMeta - numData);\n\t\t} else if (numData > numMeta) {\n\t\t\tme.insertElements(numMeta, numData - numMeta);\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tinsertElements: function(start, count) {\n\t\tfor (var i = 0; i < count; ++i) {\n\t\t\tthis.addElementAndReset(start + i);\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tonDataPush: function() {\n\t\tvar count = arguments.length;\n\t\tthis.insertElements(this.getDataset().data.length - count, count);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tonDataPop: function() {\n\t\tthis.getMeta().data.pop();\n\t},\n\n\t/**\n\t * @private\n\t */\n\tonDataShift: function() {\n\t\tthis.getMeta().data.shift();\n\t},\n\n\t/**\n\t * @private\n\t */\n\tonDataSplice: function(start, count) {\n\t\tthis.getMeta().data.splice(start, count);\n\t\tthis.insertElements(start, arguments.length - 2);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tonDataUnshift: function() {\n\t\tthis.insertElements(0, arguments.length);\n\t}\n});\n\nDatasetController.extend = helpers$1.inherits;\n\nvar core_datasetController = DatasetController;\n\ncore_defaults._set('global', {\n\telements: {\n\t\tarc: {\n\t\t\tbackgroundColor: core_defaults.global.defaultColor,\n\t\t\tborderColor: '#fff',\n\t\t\tborderWidth: 2,\n\t\t\tborderAlign: 'center'\n\t\t}\n\t}\n});\n\nvar element_arc = core_element.extend({\n\tinLabelRange: function(mouseX) {\n\t\tvar vm = this._view;\n\n\t\tif (vm) {\n\t\t\treturn (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2));\n\t\t}\n\t\treturn false;\n\t},\n\n\tinRange: function(chartX, chartY) {\n\t\tvar vm = this._view;\n\n\t\tif (vm) {\n\t\t\tvar pointRelativePosition = helpers$1.getAngleFromPoint(vm, {x: chartX, y: chartY});\n\t\t\tvar\tangle = pointRelativePosition.angle;\n\t\t\tvar distance = pointRelativePosition.distance;\n\n\t\t\t// Sanitise angle range\n\t\t\tvar startAngle = vm.startAngle;\n\t\t\tvar endAngle = vm.endAngle;\n\t\t\twhile (endAngle < startAngle) {\n\t\t\t\tendAngle += 2.0 * Math.PI;\n\t\t\t}\n\t\t\twhile (angle > endAngle) {\n\t\t\t\tangle -= 2.0 * Math.PI;\n\t\t\t}\n\t\t\twhile (angle < startAngle) {\n\t\t\t\tangle += 2.0 * Math.PI;\n\t\t\t}\n\n\t\t\t// Check if within the range of the open/close angle\n\t\t\tvar betweenAngles = (angle >= startAngle && angle <= endAngle);\n\t\t\tvar withinRadius = (distance >= vm.innerRadius && distance <= vm.outerRadius);\n\n\t\t\treturn (betweenAngles && withinRadius);\n\t\t}\n\t\treturn false;\n\t},\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\tvar halfAngle = (vm.startAngle + vm.endAngle) / 2;\n\t\tvar halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n\t\treturn {\n\t\t\tx: vm.x + Math.cos(halfAngle) * halfRadius,\n\t\t\ty: vm.y + Math.sin(halfAngle) * halfRadius\n\t\t};\n\t},\n\n\tgetArea: function() {\n\t\tvar vm = this._view;\n\t\treturn Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\tvar centreAngle = vm.startAngle + ((vm.endAngle - vm.startAngle) / 2);\n\t\tvar rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n\n\t\treturn {\n\t\t\tx: vm.x + (Math.cos(centreAngle) * rangeFromCentre),\n\t\t\ty: vm.y + (Math.sin(centreAngle) * rangeFromCentre)\n\t\t};\n\t},\n\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar sA = vm.startAngle;\n\t\tvar eA = vm.endAngle;\n\t\tvar pixelMargin = (vm.borderAlign === 'inner') ? 0.33 : 0;\n\t\tvar angleMargin;\n\n\t\tctx.save();\n\n\t\tctx.beginPath();\n\t\tctx.arc(vm.x, vm.y, Math.max(vm.outerRadius - pixelMargin, 0), sA, eA);\n\t\tctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n\t\tctx.closePath();\n\n\t\tctx.fillStyle = vm.backgroundColor;\n\t\tctx.fill();\n\n\t\tif (vm.borderWidth) {\n\t\t\tif (vm.borderAlign === 'inner') {\n\t\t\t\t// Draw an inner border by cliping the arc and drawing a double-width border\n\t\t\t\t// Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n\t\t\t\tctx.beginPath();\n\t\t\t\tangleMargin = pixelMargin / vm.outerRadius;\n\t\t\t\tctx.arc(vm.x, vm.y, vm.outerRadius, sA - angleMargin, eA + angleMargin);\n\t\t\t\tif (vm.innerRadius > pixelMargin) {\n\t\t\t\t\tangleMargin = pixelMargin / vm.innerRadius;\n\t\t\t\t\tctx.arc(vm.x, vm.y, vm.innerRadius - pixelMargin, eA + angleMargin, sA - angleMargin, true);\n\t\t\t\t} else {\n\t\t\t\t\tctx.arc(vm.x, vm.y, pixelMargin, eA + Math.PI / 2, sA - Math.PI / 2);\n\t\t\t\t}\n\t\t\t\tctx.closePath();\n\t\t\t\tctx.clip();\n\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n\t\t\t\tctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n\t\t\t\tctx.closePath();\n\n\t\t\t\tctx.lineWidth = vm.borderWidth * 2;\n\t\t\t\tctx.lineJoin = 'round';\n\t\t\t} else {\n\t\t\t\tctx.lineWidth = vm.borderWidth;\n\t\t\t\tctx.lineJoin = 'bevel';\n\t\t\t}\n\n\t\t\tctx.strokeStyle = vm.borderColor;\n\t\t\tctx.stroke();\n\t\t}\n\n\t\tctx.restore();\n\t}\n});\n\nvar valueOrDefault$1 = helpers$1.valueOrDefault;\n\nvar defaultColor = core_defaults.global.defaultColor;\n\ncore_defaults._set('global', {\n\telements: {\n\t\tline: {\n\t\t\ttension: 0.4,\n\t\t\tbackgroundColor: defaultColor,\n\t\t\tborderWidth: 3,\n\t\t\tborderColor: defaultColor,\n\t\t\tborderCapStyle: 'butt',\n\t\t\tborderDash: [],\n\t\t\tborderDashOffset: 0.0,\n\t\t\tborderJoinStyle: 'miter',\n\t\t\tcapBezierPoints: true,\n\t\t\tfill: true, // do we fill in the area between the line and its base axis\n\t\t}\n\t}\n});\n\nvar element_line = core_element.extend({\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar vm = me._view;\n\t\tvar ctx = me._chart.ctx;\n\t\tvar spanGaps = vm.spanGaps;\n\t\tvar points = me._children.slice(); // clone array\n\t\tvar globalDefaults = core_defaults.global;\n\t\tvar globalOptionLineElements = globalDefaults.elements.line;\n\t\tvar lastDrawnIndex = -1;\n\t\tvar index, current, previous, currentVM;\n\n\t\t// If we are looping, adding the first point again\n\t\tif (me._loop && points.length) {\n\t\t\tpoints.push(points[0]);\n\t\t}\n\n\t\tctx.save();\n\n\t\t// Stroke Line Options\n\t\tctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle;\n\n\t\t// IE 9 and 10 do not support line dash\n\t\tif (ctx.setLineDash) {\n\t\t\tctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n\t\t}\n\n\t\tctx.lineDashOffset = valueOrDefault$1(vm.borderDashOffset, globalOptionLineElements.borderDashOffset);\n\t\tctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n\t\tctx.lineWidth = valueOrDefault$1(vm.borderWidth, globalOptionLineElements.borderWidth);\n\t\tctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor;\n\n\t\t// Stroke Line\n\t\tctx.beginPath();\n\t\tlastDrawnIndex = -1;\n\n\t\tfor (index = 0; index < points.length; ++index) {\n\t\t\tcurrent = points[index];\n\t\t\tprevious = helpers$1.previousItem(points, index);\n\t\t\tcurrentVM = current._view;\n\n\t\t\t// First point moves to it's starting position no matter what\n\t\t\tif (index === 0) {\n\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprevious = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\tif ((lastDrawnIndex !== (index - 1) && !spanGaps) || lastDrawnIndex === -1) {\n\t\t\t\t\t\t// There was a gap and this is the first point after the gap\n\t\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Line to next point\n\t\t\t\t\t\thelpers$1.canvas.lineTo(ctx, previous._view, current._view);\n\t\t\t\t\t}\n\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tctx.stroke();\n\t\tctx.restore();\n\t}\n});\n\nvar valueOrDefault$2 = helpers$1.valueOrDefault;\n\nvar defaultColor$1 = core_defaults.global.defaultColor;\n\ncore_defaults._set('global', {\n\telements: {\n\t\tpoint: {\n\t\t\tradius: 3,\n\t\t\tpointStyle: 'circle',\n\t\t\tbackgroundColor: defaultColor$1,\n\t\t\tborderColor: defaultColor$1,\n\t\t\tborderWidth: 1,\n\t\t\t// Hover\n\t\t\thitRadius: 1,\n\t\t\thoverRadius: 4,\n\t\t\thoverBorderWidth: 1\n\t\t}\n\t}\n});\n\nfunction xRange(mouseX) {\n\tvar vm = this._view;\n\treturn vm ? (Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius) : false;\n}\n\nfunction yRange(mouseY) {\n\tvar vm = this._view;\n\treturn vm ? (Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius) : false;\n}\n\nvar element_point = core_element.extend({\n\tinRange: function(mouseX, mouseY) {\n\t\tvar vm = this._view;\n\t\treturn vm ? ((Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2)) < Math.pow(vm.hitRadius + vm.radius, 2)) : false;\n\t},\n\n\tinLabelRange: xRange,\n\tinXRange: xRange,\n\tinYRange: yRange,\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\t},\n\n\tgetArea: function() {\n\t\treturn Math.PI * Math.pow(this._view.radius, 2);\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y,\n\t\t\tpadding: vm.radius + vm.borderWidth\n\t\t};\n\t},\n\n\tdraw: function(chartArea) {\n\t\tvar vm = this._view;\n\t\tvar ctx = this._chart.ctx;\n\t\tvar pointStyle = vm.pointStyle;\n\t\tvar rotation = vm.rotation;\n\t\tvar radius = vm.radius;\n\t\tvar x = vm.x;\n\t\tvar y = vm.y;\n\t\tvar globalDefaults = core_defaults.global;\n\t\tvar defaultColor = globalDefaults.defaultColor; // eslint-disable-line no-shadow\n\n\t\tif (vm.skip) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Clipping for Points.\n\t\tif (chartArea === undefined || helpers$1.canvas._isPointInArea(vm, chartArea)) {\n\t\t\tctx.strokeStyle = vm.borderColor || defaultColor;\n\t\t\tctx.lineWidth = valueOrDefault$2(vm.borderWidth, globalDefaults.elements.point.borderWidth);\n\t\t\tctx.fillStyle = vm.backgroundColor || defaultColor;\n\t\t\thelpers$1.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n\t\t}\n\t}\n});\n\nvar defaultColor$2 = core_defaults.global.defaultColor;\n\ncore_defaults._set('global', {\n\telements: {\n\t\trectangle: {\n\t\t\tbackgroundColor: defaultColor$2,\n\t\t\tborderColor: defaultColor$2,\n\t\t\tborderSkipped: 'bottom',\n\t\t\tborderWidth: 0\n\t\t}\n\t}\n});\n\nfunction isVertical(vm) {\n\treturn vm && vm.width !== undefined;\n}\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param bar {Chart.Element.Rectangle} the bar\n * @return {Bounds} bounds of the bar\n * @private\n */\nfunction getBarBounds(vm) {\n\tvar x1, x2, y1, y2, half;\n\n\tif (isVertical(vm)) {\n\t\thalf = vm.width / 2;\n\t\tx1 = vm.x - half;\n\t\tx2 = vm.x + half;\n\t\ty1 = Math.min(vm.y, vm.base);\n\t\ty2 = Math.max(vm.y, vm.base);\n\t} else {\n\t\thalf = vm.height / 2;\n\t\tx1 = Math.min(vm.x, vm.base);\n\t\tx2 = Math.max(vm.x, vm.base);\n\t\ty1 = vm.y - half;\n\t\ty2 = vm.y + half;\n\t}\n\n\treturn {\n\t\tleft: x1,\n\t\ttop: y1,\n\t\tright: x2,\n\t\tbottom: y2\n\t};\n}\n\nfunction swap(orig, v1, v2) {\n\treturn orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction parseBorderSkipped(vm) {\n\tvar edge = vm.borderSkipped;\n\tvar res = {};\n\n\tif (!edge) {\n\t\treturn res;\n\t}\n\n\tif (vm.horizontal) {\n\t\tif (vm.base > vm.x) {\n\t\t\tedge = swap(edge, 'left', 'right');\n\t\t}\n\t} else if (vm.base < vm.y) {\n\t\tedge = swap(edge, 'bottom', 'top');\n\t}\n\n\tres[edge] = true;\n\treturn res;\n}\n\nfunction parseBorderWidth(vm, maxW, maxH) {\n\tvar value = vm.borderWidth;\n\tvar skip = parseBorderSkipped(vm);\n\tvar t, r, b, l;\n\n\tif (helpers$1.isObject(value)) {\n\t\tt = +value.top || 0;\n\t\tr = +value.right || 0;\n\t\tb = +value.bottom || 0;\n\t\tl = +value.left || 0;\n\t} else {\n\t\tt = r = b = l = +value || 0;\n\t}\n\n\treturn {\n\t\tt: skip.top || (t < 0) ? 0 : t > maxH ? maxH : t,\n\t\tr: skip.right || (r < 0) ? 0 : r > maxW ? maxW : r,\n\t\tb: skip.bottom || (b < 0) ? 0 : b > maxH ? maxH : b,\n\t\tl: skip.left || (l < 0) ? 0 : l > maxW ? maxW : l\n\t};\n}\n\nfunction boundingRects(vm) {\n\tvar bounds = getBarBounds(vm);\n\tvar width = bounds.right - bounds.left;\n\tvar height = bounds.bottom - bounds.top;\n\tvar border = parseBorderWidth(vm, width / 2, height / 2);\n\n\treturn {\n\t\touter: {\n\t\t\tx: bounds.left,\n\t\t\ty: bounds.top,\n\t\t\tw: width,\n\t\t\th: height\n\t\t},\n\t\tinner: {\n\t\t\tx: bounds.left + border.l,\n\t\t\ty: bounds.top + border.t,\n\t\t\tw: width - border.l - border.r,\n\t\t\th: height - border.t - border.b\n\t\t}\n\t};\n}\n\nfunction inRange(vm, x, y) {\n\tvar skipX = x === null;\n\tvar skipY = y === null;\n\tvar bounds = !vm || (skipX && skipY) ? false : getBarBounds(vm);\n\n\treturn bounds\n\t\t&& (skipX || x >= bounds.left && x <= bounds.right)\n\t\t&& (skipY || y >= bounds.top && y <= bounds.bottom);\n}\n\nvar element_rectangle = core_element.extend({\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar rects = boundingRects(vm);\n\t\tvar outer = rects.outer;\n\t\tvar inner = rects.inner;\n\n\t\tctx.fillStyle = vm.backgroundColor;\n\t\tctx.fillRect(outer.x, outer.y, outer.w, outer.h);\n\n\t\tif (outer.w === inner.w && outer.h === inner.h) {\n\t\t\treturn;\n\t\t}\n\n\t\tctx.save();\n\t\tctx.beginPath();\n\t\tctx.rect(outer.x, outer.y, outer.w, outer.h);\n\t\tctx.clip();\n\t\tctx.fillStyle = vm.borderColor;\n\t\tctx.rect(inner.x, inner.y, inner.w, inner.h);\n\t\tctx.fill('evenodd');\n\t\tctx.restore();\n\t},\n\n\theight: function() {\n\t\tvar vm = this._view;\n\t\treturn vm.base - vm.y;\n\t},\n\n\tinRange: function(mouseX, mouseY) {\n\t\treturn inRange(this._view, mouseX, mouseY);\n\t},\n\n\tinLabelRange: function(mouseX, mouseY) {\n\t\tvar vm = this._view;\n\t\treturn isVertical(vm)\n\t\t\t? inRange(vm, mouseX, null)\n\t\t\t: inRange(vm, null, mouseY);\n\t},\n\n\tinXRange: function(mouseX) {\n\t\treturn inRange(this._view, mouseX, null);\n\t},\n\n\tinYRange: function(mouseY) {\n\t\treturn inRange(this._view, null, mouseY);\n\t},\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\tvar x, y;\n\t\tif (isVertical(vm)) {\n\t\t\tx = vm.x;\n\t\t\ty = (vm.y + vm.base) / 2;\n\t\t} else {\n\t\t\tx = (vm.x + vm.base) / 2;\n\t\t\ty = vm.y;\n\t\t}\n\n\t\treturn {x: x, y: y};\n\t},\n\n\tgetArea: function() {\n\t\tvar vm = this._view;\n\n\t\treturn isVertical(vm)\n\t\t\t? vm.width * Math.abs(vm.y - vm.base)\n\t\t\t: vm.height * Math.abs(vm.x - vm.base);\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\t}\n});\n\nvar elements = {};\nvar Arc = element_arc;\nvar Line = element_line;\nvar Point = element_point;\nvar Rectangle = element_rectangle;\nelements.Arc = Arc;\nelements.Line = Line;\nelements.Point = Point;\nelements.Rectangle = Rectangle;\n\nvar resolve$1 = helpers$1.options.resolve;\n\ncore_defaults._set('bar', {\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'category',\n\t\t\tcategoryPercentage: 0.8,\n\t\t\tbarPercentage: 0.9,\n\t\t\toffset: true,\n\t\t\tgridLines: {\n\t\t\t\toffsetGridLines: true\n\t\t\t}\n\t\t}],\n\n\t\tyAxes: [{\n\t\t\ttype: 'linear'\n\t\t}]\n\t}\n});\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(scale, pixels) {\n\tvar min = scale.isHorizontal() ? scale.width : scale.height;\n\tvar ticks = scale.getTicks();\n\tvar prev, curr, i, ilen;\n\n\tfor (i = 1, ilen = pixels.length; i < ilen; ++i) {\n\t\tmin = Math.min(min, Math.abs(pixels[i] - pixels[i - 1]));\n\t}\n\n\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\tcurr = scale.getPixelForTick(i);\n\t\tmin = i > 0 ? Math.min(min, curr - prev) : min;\n\t\tprev = curr;\n\t}\n\n\treturn min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options) {\n\tvar thickness = options.barThickness;\n\tvar count = ruler.stackCount;\n\tvar curr = ruler.pixels[index];\n\tvar size, ratio;\n\n\tif (helpers$1.isNullOrUndef(thickness)) {\n\t\tsize = ruler.min * options.categoryPercentage;\n\t\tratio = options.barPercentage;\n\t} else {\n\t\t// When bar thickness is enforced, category and bar percentages are ignored.\n\t\t// Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n\t\t// and deprecate barPercentage since this value is ignored when thickness is absolute.\n\t\tsize = thickness * count;\n\t\tratio = 1;\n\t}\n\n\treturn {\n\t\tchunk: size / count,\n\t\tratio: ratio,\n\t\tstart: curr - (size / 2)\n\t};\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options) {\n\tvar pixels = ruler.pixels;\n\tvar curr = pixels[index];\n\tvar prev = index > 0 ? pixels[index - 1] : null;\n\tvar next = index < pixels.length - 1 ? pixels[index + 1] : null;\n\tvar percent = options.categoryPercentage;\n\tvar start, size;\n\n\tif (prev === null) {\n\t\t// first data: its size is double based on the next point or,\n\t\t// if it's also the last data, we use the scale size.\n\t\tprev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n\t}\n\n\tif (next === null) {\n\t\t// last data: its size is also double based on the previous point.\n\t\tnext = curr + curr - prev;\n\t}\n\n\tstart = curr - (curr - Math.min(prev, next)) / 2 * percent;\n\tsize = Math.abs(next - prev) / 2 * percent;\n\n\treturn {\n\t\tchunk: size / ruler.stackCount,\n\t\tratio: options.barPercentage,\n\t\tstart: start\n\t};\n}\n\nvar controller_bar = core_datasetController.extend({\n\n\tdataElementType: elements.Rectangle,\n\n\tinitialize: function() {\n\t\tvar me = this;\n\t\tvar meta;\n\n\t\tcore_datasetController.prototype.initialize.apply(me, arguments);\n\n\t\tmeta = me.getMeta();\n\t\tmeta.stack = me.getDataset().stack;\n\t\tmeta.bar = true;\n\t},\n\n\tupdate: function(reset) {\n\t\tvar me = this;\n\t\tvar rects = me.getMeta().data;\n\t\tvar i, ilen;\n\n\t\tme._ruler = me.getRuler();\n\n\t\tfor (i = 0, ilen = rects.length; i < ilen; ++i) {\n\t\t\tme.updateElement(rects[i], i, reset);\n\t\t}\n\t},\n\n\tupdateElement: function(rectangle, index, reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar dataset = me.getDataset();\n\t\tvar options = me._resolveElementOptions(rectangle, index);\n\n\t\trectangle._xScale = me.getScaleForId(meta.xAxisID);\n\t\trectangle._yScale = me.getScaleForId(meta.yAxisID);\n\t\trectangle._datasetIndex = me.index;\n\t\trectangle._index = index;\n\t\trectangle._model = {\n\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\tborderColor: options.borderColor,\n\t\t\tborderSkipped: options.borderSkipped,\n\t\t\tborderWidth: options.borderWidth,\n\t\t\tdatasetLabel: dataset.label,\n\t\t\tlabel: me.chart.data.labels[index]\n\t\t};\n\n\t\tme._updateElementGeometry(rectangle, index, reset);\n\n\t\trectangle.pivot();\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_updateElementGeometry: function(rectangle, index, reset) {\n\t\tvar me = this;\n\t\tvar model = rectangle._model;\n\t\tvar vscale = me._getValueScale();\n\t\tvar base = vscale.getBasePixel();\n\t\tvar horizontal = vscale.isHorizontal();\n\t\tvar ruler = me._ruler || me.getRuler();\n\t\tvar vpixels = me.calculateBarValuePixels(me.index, index);\n\t\tvar ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n\n\t\tmodel.horizontal = horizontal;\n\t\tmodel.base = reset ? base : vpixels.base;\n\t\tmodel.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n\t\tmodel.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n\t\tmodel.height = horizontal ? ipixels.size : undefined;\n\t\tmodel.width = horizontal ? undefined : ipixels.size;\n\t},\n\n\t/**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n\t_getStacks: function(last) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar scale = me._getIndexScale();\n\t\tvar stacked = scale.options.stacked;\n\t\tvar ilen = last === undefined ? chart.data.datasets.length : last + 1;\n\t\tvar stacks = [];\n\t\tvar i, meta;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\tif (meta.bar && chart.isDatasetVisible(i) &&\n\t\t\t\t(stacked === false ||\n\t\t\t\t(stacked === true && stacks.indexOf(meta.stack) === -1) ||\n\t\t\t\t(stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1)))) {\n\t\t\t\tstacks.push(meta.stack);\n\t\t\t}\n\t\t}\n\n\t\treturn stacks;\n\t},\n\n\t/**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n\tgetStackCount: function() {\n\t\treturn this._getStacks().length;\n\t},\n\n\t/**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n\t * @returns {number} The stack index\n\t * @private\n\t */\n\tgetStackIndex: function(datasetIndex, name) {\n\t\tvar stacks = this._getStacks(datasetIndex);\n\t\tvar index = (name !== undefined)\n\t\t\t? stacks.indexOf(name)\n\t\t\t: -1; // indexOf returns -1 if element is not present\n\n\t\treturn (index === -1)\n\t\t\t? stacks.length - 1\n\t\t\t: index;\n\t},\n\n\t/**\n\t * @private\n\t */\n\tgetRuler: function() {\n\t\tvar me = this;\n\t\tvar scale = me._getIndexScale();\n\t\tvar stackCount = me.getStackCount();\n\t\tvar datasetIndex = me.index;\n\t\tvar isHorizontal = scale.isHorizontal();\n\t\tvar start = isHorizontal ? scale.left : scale.top;\n\t\tvar end = start + (isHorizontal ? scale.width : scale.height);\n\t\tvar pixels = [];\n\t\tvar i, ilen, min;\n\n\t\tfor (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n\t\t\tpixels.push(scale.getPixelForValue(null, i, datasetIndex));\n\t\t}\n\n\t\tmin = helpers$1.isNullOrUndef(scale.options.barThickness)\n\t\t\t? computeMinSampleSize(scale, pixels)\n\t\t\t: -1;\n\n\t\treturn {\n\t\t\tmin: min,\n\t\t\tpixels: pixels,\n\t\t\tstart: start,\n\t\t\tend: end,\n\t\t\tstackCount: stackCount,\n\t\t\tscale: scale\n\t\t};\n\t},\n\n\t/**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n\tcalculateBarValuePixels: function(datasetIndex, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar meta = me.getMeta();\n\t\tvar scale = me._getValueScale();\n\t\tvar isHorizontal = scale.isHorizontal();\n\t\tvar datasets = chart.data.datasets;\n\t\tvar value = +scale.getRightValue(datasets[datasetIndex].data[index]);\n\t\tvar minBarLength = scale.options.minBarLength;\n\t\tvar stacked = scale.options.stacked;\n\t\tvar stack = meta.stack;\n\t\tvar start = 0;\n\t\tvar i, imeta, ivalue, base, head, size;\n\n\t\tif (stacked || (stacked === undefined && stack !== undefined)) {\n\t\t\tfor (i = 0; i < datasetIndex; ++i) {\n\t\t\t\timeta = chart.getDatasetMeta(i);\n\n\t\t\t\tif (imeta.bar &&\n\t\t\t\t\timeta.stack === stack &&\n\t\t\t\t\timeta.controller._getValueScaleId() === scale.id &&\n\t\t\t\t\tchart.isDatasetVisible(i)) {\n\n\t\t\t\t\tivalue = +scale.getRightValue(datasets[i].data[index]);\n\t\t\t\t\tif ((value < 0 && ivalue < 0) || (value >= 0 && ivalue > 0)) {\n\t\t\t\t\t\tstart += ivalue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tbase = scale.getPixelForValue(start);\n\t\thead = scale.getPixelForValue(start + value);\n\t\tsize = head - base;\n\n\t\tif (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n\t\t\tsize = minBarLength;\n\t\t\tif (value >= 0 && !isHorizontal || value < 0 && isHorizontal) {\n\t\t\t\thead = base - minBarLength;\n\t\t\t} else {\n\t\t\t\thead = base + minBarLength;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tsize: size,\n\t\t\tbase: base,\n\t\t\thead: head,\n\t\t\tcenter: head + size / 2\n\t\t};\n\t},\n\n\t/**\n\t * @private\n\t */\n\tcalculateBarIndexPixels: function(datasetIndex, index, ruler) {\n\t\tvar me = this;\n\t\tvar options = ruler.scale.options;\n\t\tvar range = options.barThickness === 'flex'\n\t\t\t? computeFlexCategoryTraits(index, ruler, options)\n\t\t\t: computeFitCategoryTraits(index, ruler, options);\n\n\t\tvar stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n\t\tvar center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n\t\tvar size = Math.min(\n\t\t\thelpers$1.valueOrDefault(options.maxBarThickness, Infinity),\n\t\t\trange.chunk * range.ratio);\n\n\t\treturn {\n\t\t\tbase: center - size / 2,\n\t\t\thead: center + size / 2,\n\t\t\tcenter: center,\n\t\t\tsize: size\n\t\t};\n\t},\n\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar scale = me._getValueScale();\n\t\tvar rects = me.getMeta().data;\n\t\tvar dataset = me.getDataset();\n\t\tvar ilen = rects.length;\n\t\tvar i = 0;\n\n\t\thelpers$1.canvas.clipArea(chart.ctx, chart.chartArea);\n\n\t\tfor (; i < ilen; ++i) {\n\t\t\tif (!isNaN(scale.getRightValue(dataset.data[i]))) {\n\t\t\t\trects[i].draw();\n\t\t\t}\n\t\t}\n\n\t\thelpers$1.canvas.unclipArea(chart.ctx);\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolveElementOptions: function(rectangle, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar datasets = chart.data.datasets;\n\t\tvar dataset = datasets[me.index];\n\t\tvar custom = rectangle.custom || {};\n\t\tvar options = chart.options.elements.rectangle;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar keys = [\n\t\t\t'backgroundColor',\n\t\t\t'borderColor',\n\t\t\t'borderSkipped',\n\t\t\t'borderWidth'\n\t\t];\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$1([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\treturn values;\n\t}\n});\n\nvar valueOrDefault$3 = helpers$1.valueOrDefault;\nvar resolve$2 = helpers$1.options.resolve;\n\ncore_defaults._set('bubble', {\n\thover: {\n\t\tmode: 'single'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'linear', // bubble should probably use a linear scale by default\n\t\t\tposition: 'bottom',\n\t\t\tid: 'x-axis-0' // need an ID so datasets can reference the scale\n\t\t}],\n\t\tyAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tposition: 'left',\n\t\t\tid: 'y-axis-0'\n\t\t}]\n\t},\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\t// Title doesn't make sense for scatter since we format the data as a point\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(item, data) {\n\t\t\t\tvar datasetLabel = data.datasets[item.datasetIndex].label || '';\n\t\t\t\tvar dataPoint = data.datasets[item.datasetIndex].data[item.index];\n\t\t\t\treturn datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n\t\t\t}\n\t\t}\n\t}\n});\n\nvar controller_bubble = core_datasetController.extend({\n\t/**\n\t * @protected\n\t */\n\tdataElementType: elements.Point,\n\n\t/**\n\t * @protected\n\t */\n\tupdate: function(reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar points = meta.data;\n\n\t\t// Update Points\n\t\thelpers$1.each(points, function(point, index) {\n\t\t\tme.updateElement(point, index, reset);\n\t\t});\n\t},\n\n\t/**\n\t * @protected\n\t */\n\tupdateElement: function(point, index, reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar custom = point.custom || {};\n\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\tvar options = me._resolveElementOptions(point, index);\n\t\tvar data = me.getDataset().data[index];\n\t\tvar dsIndex = me.index;\n\n\t\tvar x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n\t\tvar y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n\n\t\tpoint._xScale = xScale;\n\t\tpoint._yScale = yScale;\n\t\tpoint._options = options;\n\t\tpoint._datasetIndex = dsIndex;\n\t\tpoint._index = index;\n\t\tpoint._model = {\n\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\tborderColor: options.borderColor,\n\t\t\tborderWidth: options.borderWidth,\n\t\t\thitRadius: options.hitRadius,\n\t\t\tpointStyle: options.pointStyle,\n\t\t\trotation: options.rotation,\n\t\t\tradius: reset ? 0 : options.radius,\n\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\tx: x,\n\t\t\ty: y,\n\t\t};\n\n\t\tpoint.pivot();\n\t},\n\n\t/**\n\t * @protected\n\t */\n\tsetHoverStyle: function(point) {\n\t\tvar model = point._model;\n\t\tvar options = point._options;\n\t\tvar getHoverColor = helpers$1.getHoverColor;\n\n\t\tpoint.$previousStyle = {\n\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\tborderColor: model.borderColor,\n\t\t\tborderWidth: model.borderWidth,\n\t\t\tradius: model.radius\n\t\t};\n\n\t\tmodel.backgroundColor = valueOrDefault$3(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n\t\tmodel.borderColor = valueOrDefault$3(options.hoverBorderColor, getHoverColor(options.borderColor));\n\t\tmodel.borderWidth = valueOrDefault$3(options.hoverBorderWidth, options.borderWidth);\n\t\tmodel.radius = options.radius + options.hoverRadius;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolveElementOptions: function(point, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar datasets = chart.data.datasets;\n\t\tvar dataset = datasets[me.index];\n\t\tvar custom = point.custom || {};\n\t\tvar options = chart.options.elements.point;\n\t\tvar data = dataset.data[index];\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar keys = [\n\t\t\t'backgroundColor',\n\t\t\t'borderColor',\n\t\t\t'borderWidth',\n\t\t\t'hoverBackgroundColor',\n\t\t\t'hoverBorderColor',\n\t\t\t'hoverBorderWidth',\n\t\t\t'hoverRadius',\n\t\t\t'hitRadius',\n\t\t\t'pointStyle',\n\t\t\t'rotation'\n\t\t];\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$2([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\t// Custom radius resolution\n\t\tvalues.radius = resolve$2([\n\t\t\tcustom.radius,\n\t\t\tdata ? data.r : undefined,\n\t\t\tdataset.radius,\n\t\t\toptions.radius\n\t\t], context, index);\n\n\t\treturn values;\n\t}\n});\n\nvar resolve$3 = helpers$1.options.resolve;\nvar valueOrDefault$4 = helpers$1.valueOrDefault;\n\ncore_defaults._set('doughnut', {\n\tanimation: {\n\t\t// Boolean - Whether we animate the rotation of the Doughnut\n\t\tanimateRotate: true,\n\t\t// Boolean - Whether we animate scaling the Doughnut from the centre\n\t\tanimateScale: false\n\t},\n\thover: {\n\t\tmode: 'single'\n\t},\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar labels = data.labels;\n\n\t\tif (datasets.length) {\n\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\tif (labels[i]) {\n\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t}\n\t\t\t\ttext.push('</li>');\n\t\t\t}\n\t\t}\n\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t},\n\tlegend: {\n\t\tlabels: {\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\tvar custom = arc && arc.custom || {};\n\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\tvar fill = resolve$3([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n\t\t\t\t\t\tvar stroke = resolve$3([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n\t\t\t\t\t\tvar bw = resolve$3([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.index;\n\t\t\tvar chart = this.chart;\n\t\t\tvar i, ilen, meta;\n\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\t// toggle visibility of index if exists\n\t\t\t\tif (meta.data[index]) {\n\t\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tchart.update();\n\t\t}\n\t},\n\n\t// The percentage of the chart that we cut out of the middle.\n\tcutoutPercentage: 50,\n\n\t// The rotation of the chart, where the first data arc begins.\n\trotation: Math.PI * -0.5,\n\n\t// The total circumference of the chart.\n\tcircumference: Math.PI * 2.0,\n\n\t// Need to override these to give a nice default\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar dataLabel = data.labels[tooltipItem.index];\n\t\t\t\tvar value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n\t\t\t\tif (helpers$1.isArray(dataLabel)) {\n\t\t\t\t\t// show value on first line of multiline label\n\t\t\t\t\t// need to clone because we are changing the value\n\t\t\t\t\tdataLabel = dataLabel.slice();\n\t\t\t\t\tdataLabel[0] += value;\n\t\t\t\t} else {\n\t\t\t\t\tdataLabel += value;\n\t\t\t\t}\n\n\t\t\t\treturn dataLabel;\n\t\t\t}\n\t\t}\n\t}\n});\n\nvar controller_doughnut = core_datasetController.extend({\n\n\tdataElementType: elements.Arc,\n\n\tlinkScales: helpers$1.noop,\n\n\t// Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n\tgetRingIndex: function(datasetIndex) {\n\t\tvar ringIndex = 0;\n\n\t\tfor (var j = 0; j < datasetIndex; ++j) {\n\t\t\tif (this.chart.isDatasetVisible(j)) {\n\t\t\t\t++ringIndex;\n\t\t\t}\n\t\t}\n\n\t\treturn ringIndex;\n\t},\n\n\tupdate: function(reset) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar chartArea = chart.chartArea;\n\t\tvar opts = chart.options;\n\t\tvar availableWidth = chartArea.right - chartArea.left;\n\t\tvar availableHeight = chartArea.bottom - chartArea.top;\n\t\tvar minSize = Math.min(availableWidth, availableHeight);\n\t\tvar offset = {x: 0, y: 0};\n\t\tvar meta = me.getMeta();\n\t\tvar arcs = meta.data;\n\t\tvar cutoutPercentage = opts.cutoutPercentage;\n\t\tvar circumference = opts.circumference;\n\t\tvar chartWeight = me._getRingWeight(me.index);\n\t\tvar i, ilen;\n\n\t\t// If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\t\tif (circumference < Math.PI * 2.0) {\n\t\t\tvar startAngle = opts.rotation % (Math.PI * 2.0);\n\t\t\tstartAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n\t\t\tvar endAngle = startAngle + circumference;\n\t\t\tvar start = {x: Math.cos(startAngle), y: Math.sin(startAngle)};\n\t\t\tvar end = {x: Math.cos(endAngle), y: Math.sin(endAngle)};\n\t\t\tvar contains0 = (startAngle <= 0 && endAngle >= 0) || (startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle);\n\t\t\tvar contains90 = (startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle);\n\t\t\tvar contains180 = (startAngle <= -Math.PI && -Math.PI <= endAngle) || (startAngle <= Math.PI && Math.PI <= endAngle);\n\t\t\tvar contains270 = (startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle);\n\t\t\tvar cutout = cutoutPercentage / 100.0;\n\t\t\tvar min = {x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)), y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))};\n\t\t\tvar max = {x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)), y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))};\n\t\t\tvar size = {width: (max.x - min.x) * 0.5, height: (max.y - min.y) * 0.5};\n\t\t\tminSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n\t\t\toffset = {x: (max.x + min.x) * -0.5, y: (max.y + min.y) * -0.5};\n\t\t}\n\n\t\tfor (i = 0, ilen = arcs.length; i < ilen; ++i) {\n\t\t\tarcs[i]._options = me._resolveElementOptions(arcs[i], i);\n\t\t}\n\n\t\tchart.borderWidth = me.getMaxBorderWidth();\n\t\tchart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n\t\tchart.innerRadius = Math.max(cutoutPercentage ? (chart.outerRadius / 100) * (cutoutPercentage) : 0, 0);\n\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / (me._getVisibleDatasetWeightTotal() || 1);\n\t\tchart.offsetX = offset.x * chart.outerRadius;\n\t\tchart.offsetY = offset.y * chart.outerRadius;\n\n\t\tmeta.total = me.calculateTotal();\n\n\t\tme.outerRadius = chart.outerRadius - chart.radiusLength * me._getRingWeightOffset(me.index);\n\t\tme.innerRadius = Math.max(me.outerRadius - chart.radiusLength * chartWeight, 0);\n\n\t\tfor (i = 0, ilen = arcs.length; i < ilen; ++i) {\n\t\t\tme.updateElement(arcs[i], i, reset);\n\t\t}\n\t},\n\n\tupdateElement: function(arc, index, reset) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar chartArea = chart.chartArea;\n\t\tvar opts = chart.options;\n\t\tvar animationOpts = opts.animation;\n\t\tvar centerX = (chartArea.left + chartArea.right) / 2;\n\t\tvar centerY = (chartArea.top + chartArea.bottom) / 2;\n\t\tvar startAngle = opts.rotation; // non reset case handled later\n\t\tvar endAngle = opts.rotation; // non reset case handled later\n\t\tvar dataset = me.getDataset();\n\t\tvar circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n\t\tvar innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n\t\tvar outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n\t\tvar options = arc._options || {};\n\n\t\thelpers$1.extend(arc, {\n\t\t\t// Utility\n\t\t\t_datasetIndex: me.index,\n\t\t\t_index: index,\n\n\t\t\t// Desired view properties\n\t\t\t_model: {\n\t\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\t\tborderColor: options.borderColor,\n\t\t\t\tborderWidth: options.borderWidth,\n\t\t\t\tborderAlign: options.borderAlign,\n\t\t\t\tx: centerX + chart.offsetX,\n\t\t\t\ty: centerY + chart.offsetY,\n\t\t\t\tstartAngle: startAngle,\n\t\t\t\tendAngle: endAngle,\n\t\t\t\tcircumference: circumference,\n\t\t\t\touterRadius: outerRadius,\n\t\t\t\tinnerRadius: innerRadius,\n\t\t\t\tlabel: helpers$1.valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n\t\t\t}\n\t\t});\n\n\t\tvar model = arc._model;\n\n\t\t// Set correct angles if not resetting\n\t\tif (!reset || !animationOpts.animateRotate) {\n\t\t\tif (index === 0) {\n\t\t\t\tmodel.startAngle = opts.rotation;\n\t\t\t} else {\n\t\t\t\tmodel.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n\t\t\t}\n\n\t\t\tmodel.endAngle = model.startAngle + model.circumference;\n\t\t}\n\n\t\tarc.pivot();\n\t},\n\n\tcalculateTotal: function() {\n\t\tvar dataset = this.getDataset();\n\t\tvar meta = this.getMeta();\n\t\tvar total = 0;\n\t\tvar value;\n\n\t\thelpers$1.each(meta.data, function(element, index) {\n\t\t\tvalue = dataset.data[index];\n\t\t\tif (!isNaN(value) && !element.hidden) {\n\t\t\t\ttotal += Math.abs(value);\n\t\t\t}\n\t\t});\n\n\t\t/* if (total === 0) {\n\t\t\ttotal = NaN;\n\t\t}*/\n\n\t\treturn total;\n\t},\n\n\tcalculateCircumference: function(value) {\n\t\tvar total = this.getMeta().total;\n\t\tif (total > 0 && !isNaN(value)) {\n\t\t\treturn (Math.PI * 2.0) * (Math.abs(value) / total);\n\t\t}\n\t\treturn 0;\n\t},\n\n\t// gets the max border or hover width to properly scale pie charts\n\tgetMaxBorderWidth: function(arcs) {\n\t\tvar me = this;\n\t\tvar max = 0;\n\t\tvar chart = me.chart;\n\t\tvar i, ilen, meta, arc, controller, options, borderWidth, hoverWidth;\n\n\t\tif (!arcs) {\n\t\t\t// Find the outmost visible dataset\n\t\t\tfor (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tif (chart.isDatasetVisible(i)) {\n\t\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\t\tarcs = meta.data;\n\t\t\t\t\tif (i !== me.index) {\n\t\t\t\t\t\tcontroller = meta.controller;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!arcs) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tfor (i = 0, ilen = arcs.length; i < ilen; ++i) {\n\t\t\tarc = arcs[i];\n\t\t\toptions = controller ? controller._resolveElementOptions(arc, i) : arc._options;\n\t\t\tif (options.borderAlign !== 'inner') {\n\t\t\t\tborderWidth = options.borderWidth;\n\t\t\t\thoverWidth = options.hoverBorderWidth;\n\n\t\t\t\tmax = borderWidth > max ? borderWidth : max;\n\t\t\t\tmax = hoverWidth > max ? hoverWidth : max;\n\t\t\t}\n\t\t}\n\t\treturn max;\n\t},\n\n\t/**\n\t * @protected\n\t */\n\tsetHoverStyle: function(arc) {\n\t\tvar model = arc._model;\n\t\tvar options = arc._options;\n\t\tvar getHoverColor = helpers$1.getHoverColor;\n\n\t\tarc.$previousStyle = {\n\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\tborderColor: model.borderColor,\n\t\t\tborderWidth: model.borderWidth,\n\t\t};\n\n\t\tmodel.backgroundColor = valueOrDefault$4(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n\t\tmodel.borderColor = valueOrDefault$4(options.hoverBorderColor, getHoverColor(options.borderColor));\n\t\tmodel.borderWidth = valueOrDefault$4(options.hoverBorderWidth, options.borderWidth);\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolveElementOptions: function(arc, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = me.getDataset();\n\t\tvar custom = arc.custom || {};\n\t\tvar options = chart.options.elements.arc;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar keys = [\n\t\t\t'backgroundColor',\n\t\t\t'borderColor',\n\t\t\t'borderWidth',\n\t\t\t'borderAlign',\n\t\t\t'hoverBackgroundColor',\n\t\t\t'hoverBorderColor',\n\t\t\t'hoverBorderWidth',\n\t\t];\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$3([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\treturn values;\n\t},\n\n\t/**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n\t_getRingWeightOffset: function(datasetIndex) {\n\t\tvar ringWeightOffset = 0;\n\n\t\tfor (var i = 0; i < datasetIndex; ++i) {\n\t\t\tif (this.chart.isDatasetVisible(i)) {\n\t\t\t\tringWeightOffset += this._getRingWeight(i);\n\t\t\t}\n\t\t}\n\n\t\treturn ringWeightOffset;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getRingWeight: function(dataSetIndex) {\n\t\treturn Math.max(valueOrDefault$4(this.chart.data.datasets[dataSetIndex].weight, 1), 0);\n\t},\n\n\t/**\n\t * Returns the sum of all visibile data set weights.  This value can be 0.\n\t * @private\n\t */\n\t_getVisibleDatasetWeightTotal: function() {\n\t\treturn this._getRingWeightOffset(this.chart.data.datasets.length);\n\t}\n});\n\ncore_defaults._set('horizontalBar', {\n\thover: {\n\t\tmode: 'index',\n\t\taxis: 'y'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tposition: 'bottom'\n\t\t}],\n\n\t\tyAxes: [{\n\t\t\ttype: 'category',\n\t\t\tposition: 'left',\n\t\t\tcategoryPercentage: 0.8,\n\t\t\tbarPercentage: 0.9,\n\t\t\toffset: true,\n\t\t\tgridLines: {\n\t\t\t\toffsetGridLines: true\n\t\t\t}\n\t\t}]\n\t},\n\n\telements: {\n\t\trectangle: {\n\t\t\tborderSkipped: 'left'\n\t\t}\n\t},\n\n\ttooltips: {\n\t\tmode: 'index',\n\t\taxis: 'y'\n\t}\n});\n\nvar controller_horizontalBar = controller_bar.extend({\n\t/**\n\t * @private\n\t */\n\t_getValueScaleId: function() {\n\t\treturn this.getMeta().xAxisID;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getIndexScaleId: function() {\n\t\treturn this.getMeta().yAxisID;\n\t}\n});\n\nvar valueOrDefault$5 = helpers$1.valueOrDefault;\nvar resolve$4 = helpers$1.options.resolve;\nvar isPointInArea = helpers$1.canvas._isPointInArea;\n\ncore_defaults._set('line', {\n\tshowLines: true,\n\tspanGaps: false,\n\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'category',\n\t\t\tid: 'x-axis-0'\n\t\t}],\n\t\tyAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tid: 'y-axis-0'\n\t\t}]\n\t}\n});\n\nfunction lineEnabled(dataset, options) {\n\treturn valueOrDefault$5(dataset.showLine, options.showLines);\n}\n\nvar controller_line = core_datasetController.extend({\n\n\tdatasetElementType: elements.Line,\n\n\tdataElementType: elements.Point,\n\n\tupdate: function(reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar line = meta.dataset;\n\t\tvar points = meta.data || [];\n\t\tvar scale = me.getScaleForId(meta.yAxisID);\n\t\tvar dataset = me.getDataset();\n\t\tvar showLine = lineEnabled(dataset, me.chart.options);\n\t\tvar i, ilen;\n\n\t\t// Update Line\n\t\tif (showLine) {\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\t\tdataset.lineTension = dataset.tension;\n\t\t\t}\n\n\t\t\t// Utility\n\t\t\tline._scale = scale;\n\t\t\tline._datasetIndex = me.index;\n\t\t\t// Data\n\t\t\tline._children = points;\n\t\t\t// Model\n\t\t\tline._model = me._resolveLineOptions(line);\n\n\t\t\tline.pivot();\n\t\t}\n\n\t\t// Update Points\n\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\tme.updateElement(points[i], i, reset);\n\t\t}\n\n\t\tif (showLine && line._model.tension !== 0) {\n\t\t\tme.updateBezierControlPoints();\n\t\t}\n\n\t\t// Now pivot the point for animation\n\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\tpoints[i].pivot();\n\t\t}\n\t},\n\n\tupdateElement: function(point, index, reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar custom = point.custom || {};\n\t\tvar dataset = me.getDataset();\n\t\tvar datasetIndex = me.index;\n\t\tvar value = dataset.data[index];\n\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\tvar lineModel = meta.dataset._model;\n\t\tvar x, y;\n\n\t\tvar options = me._resolvePointOptions(point, index);\n\n\t\tx = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n\t\ty = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex);\n\n\t\t// Utility\n\t\tpoint._xScale = xScale;\n\t\tpoint._yScale = yScale;\n\t\tpoint._options = options;\n\t\tpoint._datasetIndex = datasetIndex;\n\t\tpoint._index = index;\n\n\t\t// Desired view properties\n\t\tpoint._model = {\n\t\t\tx: x,\n\t\t\ty: y,\n\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t// Appearance\n\t\t\tradius: options.radius,\n\t\t\tpointStyle: options.pointStyle,\n\t\t\trotation: options.rotation,\n\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\tborderColor: options.borderColor,\n\t\t\tborderWidth: options.borderWidth,\n\t\t\ttension: valueOrDefault$5(custom.tension, lineModel ? lineModel.tension : 0),\n\t\t\tsteppedLine: lineModel ? lineModel.steppedLine : false,\n\t\t\t// Tooltip\n\t\t\thitRadius: options.hitRadius\n\t\t};\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolvePointOptions: function(element, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = chart.data.datasets[me.index];\n\t\tvar custom = element.custom || {};\n\t\tvar options = chart.options.elements.point;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar ELEMENT_OPTIONS = {\n\t\t\tbackgroundColor: 'pointBackgroundColor',\n\t\t\tborderColor: 'pointBorderColor',\n\t\t\tborderWidth: 'pointBorderWidth',\n\t\t\thitRadius: 'pointHitRadius',\n\t\t\thoverBackgroundColor: 'pointHoverBackgroundColor',\n\t\t\thoverBorderColor: 'pointHoverBorderColor',\n\t\t\thoverBorderWidth: 'pointHoverBorderWidth',\n\t\t\thoverRadius: 'pointHoverRadius',\n\t\t\tpointStyle: 'pointStyle',\n\t\t\tradius: 'pointRadius',\n\t\t\trotation: 'pointRotation'\n\t\t};\n\t\tvar keys = Object.keys(ELEMENT_OPTIONS);\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$4([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[ELEMENT_OPTIONS[key]],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\treturn values;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolveLineOptions: function(element) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = chart.data.datasets[me.index];\n\t\tvar custom = element.custom || {};\n\t\tvar options = chart.options;\n\t\tvar elementOptions = options.elements.line;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\tvar keys = [\n\t\t\t'backgroundColor',\n\t\t\t'borderWidth',\n\t\t\t'borderColor',\n\t\t\t'borderCapStyle',\n\t\t\t'borderDash',\n\t\t\t'borderDashOffset',\n\t\t\t'borderJoinStyle',\n\t\t\t'fill',\n\t\t\t'cubicInterpolationMode'\n\t\t];\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$4([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[key],\n\t\t\t\telementOptions[key]\n\t\t\t]);\n\t\t}\n\n\t\t// The default behavior of lines is to break at null values, according\n\t\t// to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n\t\t// This option gives lines the ability to span gaps\n\t\tvalues.spanGaps = valueOrDefault$5(dataset.spanGaps, options.spanGaps);\n\t\tvalues.tension = valueOrDefault$5(dataset.lineTension, elementOptions.tension);\n\t\tvalues.steppedLine = resolve$4([custom.steppedLine, dataset.steppedLine, elementOptions.stepped]);\n\n\t\treturn values;\n\t},\n\n\tcalculatePointY: function(value, index, datasetIndex) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar meta = me.getMeta();\n\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\tvar sumPos = 0;\n\t\tvar sumNeg = 0;\n\t\tvar i, ds, dsMeta;\n\n\t\tif (yScale.options.stacked) {\n\t\t\tfor (i = 0; i < datasetIndex; i++) {\n\t\t\t\tds = chart.data.datasets[i];\n\t\t\t\tdsMeta = chart.getDatasetMeta(i);\n\t\t\t\tif (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n\t\t\t\t\tvar stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\t\t\t\t\tif (stackedRightValue < 0) {\n\t\t\t\t\t\tsumNeg += stackedRightValue || 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsumPos += stackedRightValue || 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar rightValue = Number(yScale.getRightValue(value));\n\t\t\tif (rightValue < 0) {\n\t\t\t\treturn yScale.getPixelForValue(sumNeg + rightValue);\n\t\t\t}\n\t\t\treturn yScale.getPixelForValue(sumPos + rightValue);\n\t\t}\n\n\t\treturn yScale.getPixelForValue(value);\n\t},\n\n\tupdateBezierControlPoints: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar meta = me.getMeta();\n\t\tvar lineModel = meta.dataset._model;\n\t\tvar area = chart.chartArea;\n\t\tvar points = meta.data || [];\n\t\tvar i, ilen, model, controlPoints;\n\n\t\t// Only consider points that are drawn in case the spanGaps option is used\n\t\tif (lineModel.spanGaps) {\n\t\t\tpoints = points.filter(function(pt) {\n\t\t\t\treturn !pt._model.skip;\n\t\t\t});\n\t\t}\n\n\t\tfunction capControlPoint(pt, min, max) {\n\t\t\treturn Math.max(Math.min(pt, max), min);\n\t\t}\n\n\t\tif (lineModel.cubicInterpolationMode === 'monotone') {\n\t\t\thelpers$1.splineCurveMonotone(points);\n\t\t} else {\n\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\tmodel = points[i]._model;\n\t\t\t\tcontrolPoints = helpers$1.splineCurve(\n\t\t\t\t\thelpers$1.previousItem(points, i)._model,\n\t\t\t\t\tmodel,\n\t\t\t\t\thelpers$1.nextItem(points, i)._model,\n\t\t\t\t\tlineModel.tension\n\t\t\t\t);\n\t\t\t\tmodel.controlPointPreviousX = controlPoints.previous.x;\n\t\t\t\tmodel.controlPointPreviousY = controlPoints.previous.y;\n\t\t\t\tmodel.controlPointNextX = controlPoints.next.x;\n\t\t\t\tmodel.controlPointNextY = controlPoints.next.y;\n\t\t\t}\n\t\t}\n\n\t\tif (chart.options.elements.line.capBezierPoints) {\n\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\tmodel = points[i]._model;\n\t\t\t\tif (isPointInArea(model, area)) {\n\t\t\t\t\tif (i > 0 && isPointInArea(points[i - 1]._model, area)) {\n\t\t\t\t\t\tmodel.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n\t\t\t\t\t\tmodel.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n\t\t\t\t\t}\n\t\t\t\t\tif (i < points.length - 1 && isPointInArea(points[i + 1]._model, area)) {\n\t\t\t\t\t\tmodel.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n\t\t\t\t\t\tmodel.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar meta = me.getMeta();\n\t\tvar points = meta.data || [];\n\t\tvar area = chart.chartArea;\n\t\tvar ilen = points.length;\n\t\tvar halfBorderWidth;\n\t\tvar i = 0;\n\n\t\tif (lineEnabled(me.getDataset(), chart.options)) {\n\t\t\thalfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n\n\t\t\thelpers$1.canvas.clipArea(chart.ctx, {\n\t\t\t\tleft: area.left,\n\t\t\t\tright: area.right,\n\t\t\t\ttop: area.top - halfBorderWidth,\n\t\t\t\tbottom: area.bottom + halfBorderWidth\n\t\t\t});\n\n\t\t\tmeta.dataset.draw();\n\n\t\t\thelpers$1.canvas.unclipArea(chart.ctx);\n\t\t}\n\n\t\t// Draw the points\n\t\tfor (; i < ilen; ++i) {\n\t\t\tpoints[i].draw(area);\n\t\t}\n\t},\n\n\t/**\n\t * @protected\n\t */\n\tsetHoverStyle: function(point) {\n\t\tvar model = point._model;\n\t\tvar options = point._options;\n\t\tvar getHoverColor = helpers$1.getHoverColor;\n\n\t\tpoint.$previousStyle = {\n\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\tborderColor: model.borderColor,\n\t\t\tborderWidth: model.borderWidth,\n\t\t\tradius: model.radius\n\t\t};\n\n\t\tmodel.backgroundColor = valueOrDefault$5(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n\t\tmodel.borderColor = valueOrDefault$5(options.hoverBorderColor, getHoverColor(options.borderColor));\n\t\tmodel.borderWidth = valueOrDefault$5(options.hoverBorderWidth, options.borderWidth);\n\t\tmodel.radius = valueOrDefault$5(options.hoverRadius, options.radius);\n\t},\n});\n\nvar resolve$5 = helpers$1.options.resolve;\n\ncore_defaults._set('polarArea', {\n\tscale: {\n\t\ttype: 'radialLinear',\n\t\tangleLines: {\n\t\t\tdisplay: false\n\t\t},\n\t\tgridLines: {\n\t\t\tcircular: true\n\t\t},\n\t\tpointLabels: {\n\t\t\tdisplay: false\n\t\t},\n\t\tticks: {\n\t\t\tbeginAtZero: true\n\t\t}\n\t},\n\n\t// Boolean - Whether to animate the rotation of the chart\n\tanimation: {\n\t\tanimateRotate: true,\n\t\tanimateScale: true\n\t},\n\n\tstartAngle: -0.5 * Math.PI,\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar labels = data.labels;\n\n\t\tif (datasets.length) {\n\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\tif (labels[i]) {\n\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t}\n\t\t\t\ttext.push('</li>');\n\t\t\t}\n\t\t}\n\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t},\n\tlegend: {\n\t\tlabels: {\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\tvar custom = arc.custom || {};\n\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\tvar fill = resolve$5([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n\t\t\t\t\t\tvar stroke = resolve$5([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n\t\t\t\t\t\tvar bw = resolve$5([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.index;\n\t\t\tvar chart = this.chart;\n\t\t\tvar i, ilen, meta;\n\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t}\n\n\t\t\tchart.update();\n\t\t}\n\t},\n\n\t// Need to override these to give a nice default\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(item, data) {\n\t\t\t\treturn data.labels[item.index] + ': ' + item.yLabel;\n\t\t\t}\n\t\t}\n\t}\n});\n\nvar controller_polarArea = core_datasetController.extend({\n\n\tdataElementType: elements.Arc,\n\n\tlinkScales: helpers$1.noop,\n\n\tupdate: function(reset) {\n\t\tvar me = this;\n\t\tvar dataset = me.getDataset();\n\t\tvar meta = me.getMeta();\n\t\tvar start = me.chart.options.startAngle || 0;\n\t\tvar starts = me._starts = [];\n\t\tvar angles = me._angles = [];\n\t\tvar arcs = meta.data;\n\t\tvar i, ilen, angle;\n\n\t\tme._updateRadius();\n\n\t\tmeta.count = me.countVisibleElements();\n\n\t\tfor (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n\t\t\tstarts[i] = start;\n\t\t\tangle = me._computeAngle(i);\n\t\t\tangles[i] = angle;\n\t\t\tstart += angle;\n\t\t}\n\n\t\tfor (i = 0, ilen = arcs.length; i < ilen; ++i) {\n\t\t\tarcs[i]._options = me._resolveElementOptions(arcs[i], i);\n\t\t\tme.updateElement(arcs[i], i, reset);\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_updateRadius: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar chartArea = chart.chartArea;\n\t\tvar opts = chart.options;\n\t\tvar minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n\t\tchart.outerRadius = Math.max(minSize / 2, 0);\n\t\tchart.innerRadius = Math.max(opts.cutoutPercentage ? (chart.outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n\n\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.index);\n\t\tme.innerRadius = me.outerRadius - chart.radiusLength;\n\t},\n\n\tupdateElement: function(arc, index, reset) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = me.getDataset();\n\t\tvar opts = chart.options;\n\t\tvar animationOpts = opts.animation;\n\t\tvar scale = chart.scale;\n\t\tvar labels = chart.data.labels;\n\n\t\tvar centerX = scale.xCenter;\n\t\tvar centerY = scale.yCenter;\n\n\t\t// var negHalfPI = -0.5 * Math.PI;\n\t\tvar datasetStartAngle = opts.startAngle;\n\t\tvar distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\t\tvar startAngle = me._starts[index];\n\t\tvar endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n\n\t\tvar resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\t\tvar options = arc._options || {};\n\n\t\thelpers$1.extend(arc, {\n\t\t\t// Utility\n\t\t\t_datasetIndex: me.index,\n\t\t\t_index: index,\n\t\t\t_scale: scale,\n\n\t\t\t// Desired view properties\n\t\t\t_model: {\n\t\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\t\tborderColor: options.borderColor,\n\t\t\t\tborderWidth: options.borderWidth,\n\t\t\t\tborderAlign: options.borderAlign,\n\t\t\t\tx: centerX,\n\t\t\t\ty: centerY,\n\t\t\t\tinnerRadius: 0,\n\t\t\t\touterRadius: reset ? resetRadius : distance,\n\t\t\t\tstartAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n\t\t\t\tendAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n\t\t\t\tlabel: helpers$1.valueAtIndexOrDefault(labels, index, labels[index])\n\t\t\t}\n\t\t});\n\n\t\tarc.pivot();\n\t},\n\n\tcountVisibleElements: function() {\n\t\tvar dataset = this.getDataset();\n\t\tvar meta = this.getMeta();\n\t\tvar count = 0;\n\n\t\thelpers$1.each(meta.data, function(element, index) {\n\t\t\tif (!isNaN(dataset.data[index]) && !element.hidden) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t});\n\n\t\treturn count;\n\t},\n\n\t/**\n\t * @protected\n\t */\n\tsetHoverStyle: function(arc) {\n\t\tvar model = arc._model;\n\t\tvar options = arc._options;\n\t\tvar getHoverColor = helpers$1.getHoverColor;\n\t\tvar valueOrDefault = helpers$1.valueOrDefault;\n\n\t\tarc.$previousStyle = {\n\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\tborderColor: model.borderColor,\n\t\t\tborderWidth: model.borderWidth,\n\t\t};\n\n\t\tmodel.backgroundColor = valueOrDefault(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n\t\tmodel.borderColor = valueOrDefault(options.hoverBorderColor, getHoverColor(options.borderColor));\n\t\tmodel.borderWidth = valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolveElementOptions: function(arc, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = me.getDataset();\n\t\tvar custom = arc.custom || {};\n\t\tvar options = chart.options.elements.arc;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar keys = [\n\t\t\t'backgroundColor',\n\t\t\t'borderColor',\n\t\t\t'borderWidth',\n\t\t\t'borderAlign',\n\t\t\t'hoverBackgroundColor',\n\t\t\t'hoverBorderColor',\n\t\t\t'hoverBorderWidth',\n\t\t];\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$5([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\treturn values;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_computeAngle: function(index) {\n\t\tvar me = this;\n\t\tvar count = this.getMeta().count;\n\t\tvar dataset = me.getDataset();\n\t\tvar meta = me.getMeta();\n\n\t\tif (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n\t\t\treturn 0;\n\t\t}\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: me.chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\treturn resolve$5([\n\t\t\tme.chart.options.elements.arc.angle,\n\t\t\t(2 * Math.PI) / count\n\t\t], context, index);\n\t}\n});\n\ncore_defaults._set('pie', helpers$1.clone(core_defaults.doughnut));\ncore_defaults._set('pie', {\n\tcutoutPercentage: 0\n});\n\n// Pie charts are Doughnut chart with different defaults\nvar controller_pie = controller_doughnut;\n\nvar valueOrDefault$6 = helpers$1.valueOrDefault;\nvar resolve$6 = helpers$1.options.resolve;\n\ncore_defaults._set('radar', {\n\tscale: {\n\t\ttype: 'radialLinear'\n\t},\n\telements: {\n\t\tline: {\n\t\t\ttension: 0 // no bezier in radar\n\t\t}\n\t}\n});\n\nvar controller_radar = core_datasetController.extend({\n\n\tdatasetElementType: elements.Line,\n\n\tdataElementType: elements.Point,\n\n\tlinkScales: helpers$1.noop,\n\n\tupdate: function(reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar line = meta.dataset;\n\t\tvar points = meta.data || [];\n\t\tvar scale = me.chart.scale;\n\t\tvar dataset = me.getDataset();\n\t\tvar i, ilen;\n\n\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\tdataset.lineTension = dataset.tension;\n\t\t}\n\n\t\t// Utility\n\t\tline._scale = scale;\n\t\tline._datasetIndex = me.index;\n\t\t// Data\n\t\tline._children = points;\n\t\tline._loop = true;\n\t\t// Model\n\t\tline._model = me._resolveLineOptions(line);\n\n\t\tline.pivot();\n\n\t\t// Update Points\n\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\tme.updateElement(points[i], i, reset);\n\t\t}\n\n\t\t// Update bezier control points\n\t\tme.updateBezierControlPoints();\n\n\t\t// Now pivot the point for animation\n\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\tpoints[i].pivot();\n\t\t}\n\t},\n\n\tupdateElement: function(point, index, reset) {\n\t\tvar me = this;\n\t\tvar custom = point.custom || {};\n\t\tvar dataset = me.getDataset();\n\t\tvar scale = me.chart.scale;\n\t\tvar pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\t\tvar options = me._resolvePointOptions(point, index);\n\t\tvar lineModel = me.getMeta().dataset._model;\n\t\tvar x = reset ? scale.xCenter : pointPosition.x;\n\t\tvar y = reset ? scale.yCenter : pointPosition.y;\n\n\t\t// Utility\n\t\tpoint._scale = scale;\n\t\tpoint._options = options;\n\t\tpoint._datasetIndex = me.index;\n\t\tpoint._index = index;\n\n\t\t// Desired view properties\n\t\tpoint._model = {\n\t\t\tx: x, // value not used in dataset scale, but we want a consistent API between scales\n\t\t\ty: y,\n\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t// Appearance\n\t\t\tradius: options.radius,\n\t\t\tpointStyle: options.pointStyle,\n\t\t\trotation: options.rotation,\n\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\tborderColor: options.borderColor,\n\t\t\tborderWidth: options.borderWidth,\n\t\t\ttension: valueOrDefault$6(custom.tension, lineModel ? lineModel.tension : 0),\n\n\t\t\t// Tooltip\n\t\t\thitRadius: options.hitRadius\n\t\t};\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolvePointOptions: function(element, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = chart.data.datasets[me.index];\n\t\tvar custom = element.custom || {};\n\t\tvar options = chart.options.elements.point;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar ELEMENT_OPTIONS = {\n\t\t\tbackgroundColor: 'pointBackgroundColor',\n\t\t\tborderColor: 'pointBorderColor',\n\t\t\tborderWidth: 'pointBorderWidth',\n\t\t\thitRadius: 'pointHitRadius',\n\t\t\thoverBackgroundColor: 'pointHoverBackgroundColor',\n\t\t\thoverBorderColor: 'pointHoverBorderColor',\n\t\t\thoverBorderWidth: 'pointHoverBorderWidth',\n\t\t\thoverRadius: 'pointHoverRadius',\n\t\t\tpointStyle: 'pointStyle',\n\t\t\tradius: 'pointRadius',\n\t\t\trotation: 'pointRotation'\n\t\t};\n\t\tvar keys = Object.keys(ELEMENT_OPTIONS);\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$6([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[ELEMENT_OPTIONS[key]],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\treturn values;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolveLineOptions: function(element) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = chart.data.datasets[me.index];\n\t\tvar custom = element.custom || {};\n\t\tvar options = chart.options.elements.line;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\tvar keys = [\n\t\t\t'backgroundColor',\n\t\t\t'borderWidth',\n\t\t\t'borderColor',\n\t\t\t'borderCapStyle',\n\t\t\t'borderDash',\n\t\t\t'borderDashOffset',\n\t\t\t'borderJoinStyle',\n\t\t\t'fill'\n\t\t];\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$6([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t]);\n\t\t}\n\n\t\tvalues.tension = valueOrDefault$6(dataset.lineTension, options.tension);\n\n\t\treturn values;\n\t},\n\n\tupdateBezierControlPoints: function() {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar area = me.chart.chartArea;\n\t\tvar points = meta.data || [];\n\t\tvar i, ilen, model, controlPoints;\n\n\t\tfunction capControlPoint(pt, min, max) {\n\t\t\treturn Math.max(Math.min(pt, max), min);\n\t\t}\n\n\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\tmodel = points[i]._model;\n\t\t\tcontrolPoints = helpers$1.splineCurve(\n\t\t\t\thelpers$1.previousItem(points, i, true)._model,\n\t\t\t\tmodel,\n\t\t\t\thelpers$1.nextItem(points, i, true)._model,\n\t\t\t\tmodel.tension\n\t\t\t);\n\n\t\t\t// Prevent the bezier going outside of the bounds of the graph\n\t\t\tmodel.controlPointPreviousX = capControlPoint(controlPoints.previous.x, area.left, area.right);\n\t\t\tmodel.controlPointPreviousY = capControlPoint(controlPoints.previous.y, area.top, area.bottom);\n\t\t\tmodel.controlPointNextX = capControlPoint(controlPoints.next.x, area.left, area.right);\n\t\t\tmodel.controlPointNextY = capControlPoint(controlPoints.next.y, area.top, area.bottom);\n\t\t}\n\t},\n\n\tsetHoverStyle: function(point) {\n\t\tvar model = point._model;\n\t\tvar options = point._options;\n\t\tvar getHoverColor = helpers$1.getHoverColor;\n\n\t\tpoint.$previousStyle = {\n\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\tborderColor: model.borderColor,\n\t\t\tborderWidth: model.borderWidth,\n\t\t\tradius: model.radius\n\t\t};\n\n\t\tmodel.backgroundColor = valueOrDefault$6(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n\t\tmodel.borderColor = valueOrDefault$6(options.hoverBorderColor, getHoverColor(options.borderColor));\n\t\tmodel.borderWidth = valueOrDefault$6(options.hoverBorderWidth, options.borderWidth);\n\t\tmodel.radius = valueOrDefault$6(options.hoverRadius, options.radius);\n\t}\n});\n\ncore_defaults._set('scatter', {\n\thover: {\n\t\tmode: 'single'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\tid: 'x-axis-1',    // need an ID so datasets can reference the scale\n\t\t\ttype: 'linear',    // scatter should not use a category axis\n\t\t\tposition: 'bottom'\n\t\t}],\n\t\tyAxes: [{\n\t\t\tid: 'y-axis-1',\n\t\t\ttype: 'linear',\n\t\t\tposition: 'left'\n\t\t}]\n\t},\n\n\tshowLines: false,\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';     // doesn't make sense for scatter since data are formatted as a point\n\t\t\t},\n\t\t\tlabel: function(item) {\n\t\t\t\treturn '(' + item.xLabel + ', ' + item.yLabel + ')';\n\t\t\t}\n\t\t}\n\t}\n});\n\n// Scatter charts use line controllers\nvar controller_scatter = controller_line;\n\n// NOTE export a map in which the key represents the controller type, not\n// the class, and so must be CamelCase in order to be correctly retrieved\n// by the controller in core.controller.js (`controllers[meta.type]`).\n\nvar controllers = {\n\tbar: controller_bar,\n\tbubble: controller_bubble,\n\tdoughnut: controller_doughnut,\n\thorizontalBar: controller_horizontalBar,\n\tline: controller_line,\n\tpolarArea: controller_polarArea,\n\tpie: controller_pie,\n\tradar: controller_radar,\n\tscatter: controller_scatter\n};\n\n/**\n * Helper function to get relative position for an event\n * @param {Event|IEvent} event - The event to get the position for\n * @param {Chart} chart - The chart\n * @returns {object} the event position\n */\nfunction getRelativePosition(e, chart) {\n\tif (e.native) {\n\t\treturn {\n\t\t\tx: e.x,\n\t\t\ty: e.y\n\t\t};\n\t}\n\n\treturn helpers$1.getRelativePosition(e, chart);\n}\n\n/**\n * Helper function to traverse all of the visible elements in the chart\n * @param {Chart} chart - the chart\n * @param {function} handler - the callback to execute for each visible item\n */\nfunction parseVisibleItems(chart, handler) {\n\tvar datasets = chart.data.datasets;\n\tvar meta, i, j, ilen, jlen;\n\n\tfor (i = 0, ilen = datasets.length; i < ilen; ++i) {\n\t\tif (!chart.isDatasetVisible(i)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tmeta = chart.getDatasetMeta(i);\n\t\tfor (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n\t\t\tvar element = meta.data[j];\n\t\t\tif (!element._view.skip) {\n\t\t\t\thandler(element);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {ChartElement[]} items - elements to filter\n * @param {object} position - the point to be nearest to\n * @return {ChartElement[]} the nearest items\n */\nfunction getIntersectItems(chart, position) {\n\tvar elements = [];\n\n\tparseVisibleItems(chart, function(element) {\n\t\tif (element.inRange(position.x, position.y)) {\n\t\t\telements.push(element);\n\t\t}\n\t});\n\n\treturn elements;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in teh chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {object} position - the point to be nearest to\n * @param {boolean} intersect - if true, only consider items that intersect the position\n * @param {function} distanceMetric - function to provide the distance between points\n * @return {ChartElement[]} the nearest items\n */\nfunction getNearestItems(chart, position, intersect, distanceMetric) {\n\tvar minDistance = Number.POSITIVE_INFINITY;\n\tvar nearestItems = [];\n\n\tparseVisibleItems(chart, function(element) {\n\t\tif (intersect && !element.inRange(position.x, position.y)) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar center = element.getCenterPoint();\n\t\tvar distance = distanceMetric(position, center);\n\t\tif (distance < minDistance) {\n\t\t\tnearestItems = [element];\n\t\t\tminDistance = distance;\n\t\t} else if (distance === minDistance) {\n\t\t\t// Can have multiple items at the same distance in which case we sort by size\n\t\t\tnearestItems.push(element);\n\t\t}\n\t});\n\n\treturn nearestItems;\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy\n */\nfunction getDistanceMetricForAxis(axis) {\n\tvar useX = axis.indexOf('x') !== -1;\n\tvar useY = axis.indexOf('y') !== -1;\n\n\treturn function(pt1, pt2) {\n\t\tvar deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n\t\tvar deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n\t\treturn Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n\t};\n}\n\nfunction indexMode(chart, e, options) {\n\tvar position = getRelativePosition(e, chart);\n\t// Default axis for index mode is 'x' to match old behaviour\n\toptions.axis = options.axis || 'x';\n\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\tvar elements = [];\n\n\tif (!items.length) {\n\t\treturn [];\n\t}\n\n\tchart.data.datasets.forEach(function(dataset, datasetIndex) {\n\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\tvar element = meta.data[items[0]._index];\n\n\t\t\t// don't count items that are skipped (null data)\n\t\t\tif (element && !element._view.skip) {\n\t\t\t\telements.push(element);\n\t\t\t}\n\t\t}\n\t});\n\n\treturn elements;\n}\n\n/**\n * @interface IInteractionOptions\n */\n/**\n * If true, only consider items that intersect the point\n * @name IInterfaceOptions#boolean\n * @type Boolean\n */\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nvar core_interaction = {\n\t// Helper function for different modes\n\tmodes: {\n\t\tsingle: function(chart, e) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar elements = [];\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\telements.push(element);\n\t\t\t\t\treturn elements;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn elements.slice(0, 1);\n\t\t},\n\n\t\t/**\n\t\t * @function Chart.Interaction.modes.label\n\t\t * @deprecated since version 2.4.0\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\tlabel: indexMode,\n\n\t\t/**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {IInteractionOptions} options - options to use during interaction\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tindex: indexMode,\n\n\t\t/**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {IInteractionOptions} options - options to use during interaction\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tdataset: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\toptions.axis = options.axis || 'xy';\n\t\t\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\t\t\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n\t\t\tif (items.length > 0) {\n\t\t\t\titems = chart.getDatasetMeta(items[0]._datasetIndex).data;\n\t\t\t}\n\n\t\t\treturn items;\n\t\t},\n\n\t\t/**\n\t\t * @function Chart.Interaction.modes.x-axis\n\t\t * @deprecated since version 2.4.0. Use index mode and intersect == true\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\t'x-axis': function(chart, e) {\n\t\t\treturn indexMode(chart, e, {intersect: false});\n\t\t},\n\n\t\t/**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tpoint: function(chart, e) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\treturn getIntersectItems(chart, position);\n\t\t},\n\n\t\t/**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {IInteractionOptions} options - options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tnearest: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\toptions.axis = options.axis || 'xy';\n\t\t\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\t\t\treturn getNearestItems(chart, position, options.intersect, distanceMetric);\n\t\t},\n\n\t\t/**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {IInteractionOptions} options - options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tx: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar items = [];\n\t\t\tvar intersectsItem = false;\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inXRange(position.x)) {\n\t\t\t\t\titems.push(element);\n\t\t\t\t}\n\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\tintersectsItem = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t// that intersect the position, return nothing\n\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\titems = [];\n\t\t\t}\n\t\t\treturn items;\n\t\t},\n\n\t\t/**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {IInteractionOptions} options - options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\ty: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar items = [];\n\t\t\tvar intersectsItem = false;\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inYRange(position.y)) {\n\t\t\t\t\titems.push(element);\n\t\t\t\t}\n\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\tintersectsItem = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t// that intersect the position, return nothing\n\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\titems = [];\n\t\t\t}\n\t\t\treturn items;\n\t\t}\n\t}\n};\n\nfunction filterByPosition(array, position) {\n\treturn helpers$1.where(array, function(v) {\n\t\treturn v.position === position;\n\t});\n}\n\nfunction sortByWeight(array, reverse) {\n\tarray.forEach(function(v, i) {\n\t\tv._tmpIndex_ = i;\n\t\treturn v;\n\t});\n\tarray.sort(function(a, b) {\n\t\tvar v0 = reverse ? b : a;\n\t\tvar v1 = reverse ? a : b;\n\t\treturn v0.weight === v1.weight ?\n\t\t\tv0._tmpIndex_ - v1._tmpIndex_ :\n\t\t\tv0.weight - v1.weight;\n\t});\n\tarray.forEach(function(v) {\n\t\tdelete v._tmpIndex_;\n\t});\n}\n\nfunction findMaxPadding(boxes) {\n\tvar top = 0;\n\tvar left = 0;\n\tvar bottom = 0;\n\tvar right = 0;\n\thelpers$1.each(boxes, function(box) {\n\t\tif (box.getPadding) {\n\t\t\tvar boxPadding = box.getPadding();\n\t\t\ttop = Math.max(top, boxPadding.top);\n\t\t\tleft = Math.max(left, boxPadding.left);\n\t\t\tbottom = Math.max(bottom, boxPadding.bottom);\n\t\t\tright = Math.max(right, boxPadding.right);\n\t\t}\n\t});\n\treturn {\n\t\ttop: top,\n\t\tleft: left,\n\t\tbottom: bottom,\n\t\tright: right\n\t};\n}\n\nfunction addSizeByPosition(boxes, size) {\n\thelpers$1.each(boxes, function(box) {\n\t\tsize[box.position] += box.isHorizontal() ? box.height : box.width;\n\t});\n}\n\ncore_defaults._set('global', {\n\tlayout: {\n\t\tpadding: {\n\t\t\ttop: 0,\n\t\t\tright: 0,\n\t\t\tbottom: 0,\n\t\t\tleft: 0\n\t\t}\n\t}\n});\n\n/**\n * @interface ILayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} getPadding -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nvar core_layouts = {\n\tdefaults: {},\n\n\t/**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {ILayoutItem} item - the item to add to be layed out\n\t */\n\taddBox: function(chart, item) {\n\t\tif (!chart.boxes) {\n\t\t\tchart.boxes = [];\n\t\t}\n\n\t\t// initialize item with default values\n\t\titem.fullWidth = item.fullWidth || false;\n\t\titem.position = item.position || 'top';\n\t\titem.weight = item.weight || 0;\n\n\t\tchart.boxes.push(item);\n\t},\n\n\t/**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {ILayoutItem} layoutItem - the item to remove from the layout\n\t */\n\tremoveBox: function(chart, layoutItem) {\n\t\tvar index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\t\tif (index !== -1) {\n\t\t\tchart.boxes.splice(index, 1);\n\t\t}\n\t},\n\n\t/**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {ILayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n\tconfigure: function(chart, item, options) {\n\t\tvar props = ['fullWidth', 'position', 'weight'];\n\t\tvar ilen = props.length;\n\t\tvar i = 0;\n\t\tvar prop;\n\n\t\tfor (; i < ilen; ++i) {\n\t\t\tprop = props[i];\n\t\t\tif (options.hasOwnProperty(prop)) {\n\t\t\t\titem[prop] = options[prop];\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n\t */\n\tupdate: function(chart, width, height) {\n\t\tif (!chart) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar layoutOptions = chart.options.layout || {};\n\t\tvar padding = helpers$1.options.toPadding(layoutOptions.padding);\n\t\tvar leftPadding = padding.left;\n\t\tvar rightPadding = padding.right;\n\t\tvar topPadding = padding.top;\n\t\tvar bottomPadding = padding.bottom;\n\n\t\tvar leftBoxes = filterByPosition(chart.boxes, 'left');\n\t\tvar rightBoxes = filterByPosition(chart.boxes, 'right');\n\t\tvar topBoxes = filterByPosition(chart.boxes, 'top');\n\t\tvar bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n\t\tvar chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea');\n\n\t\t// Sort boxes by weight. A higher weight is further away from the chart area\n\t\tsortByWeight(leftBoxes, true);\n\t\tsortByWeight(rightBoxes, false);\n\t\tsortByWeight(topBoxes, true);\n\t\tsortByWeight(bottomBoxes, false);\n\n\t\tvar verticalBoxes = leftBoxes.concat(rightBoxes);\n\t\tvar horizontalBoxes = topBoxes.concat(bottomBoxes);\n\t\tvar outerBoxes = verticalBoxes.concat(horizontalBoxes);\n\n\t\t// Essentially we now have any number of boxes on each of the 4 sides.\n\t\t// Our canvas looks like the following.\n\t\t// The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n\t\t// B1 is the bottom axis\n\t\t// There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n\t\t// These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n\t\t// an error will be thrown.\n\t\t//\n\t\t// |----------------------------------------------------|\n\t\t// |                  T1 (Full Width)                   |\n\t\t// |----------------------------------------------------|\n\t\t// |    |    |                 T2                  |    |\n\t\t// |    |----|-------------------------------------|----|\n\t\t// |    |    | C1 |                           | C2 |    |\n\t\t// |    |    |----|                           |----|    |\n\t\t// |    |    |                                     |    |\n\t\t// | L1 | L2 |           ChartArea (C0)            | R1 |\n\t\t// |    |    |                                     |    |\n\t\t// |    |    |----|                           |----|    |\n\t\t// |    |    | C3 |                           | C4 |    |\n\t\t// |    |----|-------------------------------------|----|\n\t\t// |    |    |                 B1                  |    |\n\t\t// |----------------------------------------------------|\n\t\t// |                  B2 (Full Width)                   |\n\t\t// |----------------------------------------------------|\n\t\t//\n\t\t// What we do to find the best sizing, we do the following\n\t\t// 1. Determine the minimum size of the chart area.\n\t\t// 2. Split the remaining width equally between each vertical axis\n\t\t// 3. Split the remaining height equally between each horizontal axis\n\t\t// 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n\t\t// 5. Adjust the sizes of each axis based on it's minimum reported size.\n\t\t// 6. Refit each axis\n\t\t// 7. Position each axis in the final location\n\t\t// 8. Tell the chart the final location of the chart area\n\t\t// 9. Tell any axes that overlay the chart area the positions of the chart area\n\n\t\t// Step 1\n\t\tvar chartWidth = width - leftPadding - rightPadding;\n\t\tvar chartHeight = height - topPadding - bottomPadding;\n\t\tvar chartAreaWidth = chartWidth / 2; // min 50%\n\n\t\t// Step 2\n\t\tvar verticalBoxWidth = (width - chartAreaWidth) / verticalBoxes.length;\n\n\t\t// Step 3\n\t\t// TODO re-limit horizontal axis height (this limit has affected only padding calculation since PR 1837)\n\t\t// var horizontalBoxHeight = (height - chartAreaHeight) / horizontalBoxes.length;\n\n\t\t// Step 4\n\t\tvar maxChartAreaWidth = chartWidth;\n\t\tvar maxChartAreaHeight = chartHeight;\n\t\tvar outerBoxSizes = {top: topPadding, left: leftPadding, bottom: bottomPadding, right: rightPadding};\n\t\tvar minBoxSizes = [];\n\t\tvar maxPadding;\n\n\t\tfunction getMinimumBoxSize(box) {\n\t\t\tvar minSize;\n\t\t\tvar isHorizontal = box.isHorizontal();\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2);\n\t\t\t\tmaxChartAreaHeight -= minSize.height;\n\t\t\t} else {\n\t\t\t\tminSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n\t\t\t\tmaxChartAreaWidth -= minSize.width;\n\t\t\t}\n\n\t\t\tminBoxSizes.push({\n\t\t\t\thorizontal: isHorizontal,\n\t\t\t\twidth: minSize.width,\n\t\t\t\tbox: box,\n\t\t\t});\n\t\t}\n\n\t\thelpers$1.each(outerBoxes, getMinimumBoxSize);\n\n\t\t// If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\t\tmaxPadding = findMaxPadding(outerBoxes);\n\n\t\t// At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n\t\t// be if the axes are drawn at their minimum sizes.\n\t\t// Steps 5 & 6\n\n\t\t// Function to fit a box\n\t\tfunction fitBox(box) {\n\t\t\tvar minBoxSize = helpers$1.findNextWhere(minBoxSizes, function(minBox) {\n\t\t\t\treturn minBox.box === box;\n\t\t\t});\n\n\t\t\tif (minBoxSize) {\n\t\t\t\tif (minBoxSize.horizontal) {\n\t\t\t\t\tvar scaleMargin = {\n\t\t\t\t\t\tleft: Math.max(outerBoxSizes.left, maxPadding.left),\n\t\t\t\t\t\tright: Math.max(outerBoxSizes.right, maxPadding.right),\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tbottom: 0\n\t\t\t\t\t};\n\n\t\t\t\t\t// Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n\t\t\t\t\t// on the margin. Sometimes they need to increase in size slightly\n\t\t\t\t\tbox.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n\t\t\t\t} else {\n\t\t\t\t\tbox.update(minBoxSize.width, maxChartAreaHeight);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Update, and calculate the left and right margins for the horizontal boxes\n\t\thelpers$1.each(verticalBoxes, fitBox);\n\t\taddSizeByPosition(verticalBoxes, outerBoxSizes);\n\n\t\t// Set the Left and Right margins for the horizontal boxes\n\t\thelpers$1.each(horizontalBoxes, fitBox);\n\t\taddSizeByPosition(horizontalBoxes, outerBoxSizes);\n\n\t\tfunction finalFitVerticalBox(box) {\n\t\t\tvar minBoxSize = helpers$1.findNextWhere(minBoxSizes, function(minSize) {\n\t\t\t\treturn minSize.box === box;\n\t\t\t});\n\n\t\t\tvar scaleMargin = {\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: outerBoxSizes.top,\n\t\t\t\tbottom: outerBoxSizes.bottom\n\t\t\t};\n\n\t\t\tif (minBoxSize) {\n\t\t\t\tbox.update(minBoxSize.width, maxChartAreaHeight, scaleMargin);\n\t\t\t}\n\t\t}\n\n\t\t// Let the left layout know the final margin\n\t\thelpers$1.each(verticalBoxes, finalFitVerticalBox);\n\n\t\t// Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\t\touterBoxSizes = {top: topPadding, left: leftPadding, bottom: bottomPadding, right: rightPadding};\n\t\taddSizeByPosition(outerBoxes, outerBoxSizes);\n\n\t\t// We may be adding some padding to account for rotated x axis labels\n\t\tvar leftPaddingAddition = Math.max(maxPadding.left - outerBoxSizes.left, 0);\n\t\touterBoxSizes.left += leftPaddingAddition;\n\t\touterBoxSizes.right += Math.max(maxPadding.right - outerBoxSizes.right, 0);\n\n\t\tvar topPaddingAddition = Math.max(maxPadding.top - outerBoxSizes.top, 0);\n\t\touterBoxSizes.top += topPaddingAddition;\n\t\touterBoxSizes.bottom += Math.max(maxPadding.bottom - outerBoxSizes.bottom, 0);\n\n\t\t// Figure out if our chart area changed. This would occur if the dataset layout label rotation\n\t\t// changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n\t\t// without calling `fit` again\n\t\tvar newMaxChartAreaHeight = height - outerBoxSizes.top - outerBoxSizes.bottom;\n\t\tvar newMaxChartAreaWidth = width - outerBoxSizes.left - outerBoxSizes.right;\n\n\t\tif (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n\t\t\thelpers$1.each(verticalBoxes, function(box) {\n\t\t\t\tbox.height = newMaxChartAreaHeight;\n\t\t\t});\n\n\t\t\thelpers$1.each(horizontalBoxes, function(box) {\n\t\t\t\tif (!box.fullWidth) {\n\t\t\t\t\tbox.width = newMaxChartAreaWidth;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmaxChartAreaHeight = newMaxChartAreaHeight;\n\t\t\tmaxChartAreaWidth = newMaxChartAreaWidth;\n\t\t}\n\n\t\t// Step 7 - Position the boxes\n\t\tvar left = leftPadding + leftPaddingAddition;\n\t\tvar top = topPadding + topPaddingAddition;\n\n\t\tfunction placeBox(box) {\n\t\t\tif (box.isHorizontal()) {\n\t\t\t\tbox.left = box.fullWidth ? leftPadding : outerBoxSizes.left;\n\t\t\t\tbox.right = box.fullWidth ? width - rightPadding : outerBoxSizes.left + maxChartAreaWidth;\n\t\t\t\tbox.top = top;\n\t\t\t\tbox.bottom = top + box.height;\n\n\t\t\t\t// Move to next point\n\t\t\t\ttop = box.bottom;\n\n\t\t\t} else {\n\n\t\t\t\tbox.left = left;\n\t\t\t\tbox.right = left + box.width;\n\t\t\t\tbox.top = outerBoxSizes.top;\n\t\t\t\tbox.bottom = outerBoxSizes.top + maxChartAreaHeight;\n\n\t\t\t\t// Move to next point\n\t\t\t\tleft = box.right;\n\t\t\t}\n\t\t}\n\n\t\thelpers$1.each(leftBoxes.concat(topBoxes), placeBox);\n\n\t\t// Account for chart width and height\n\t\tleft += maxChartAreaWidth;\n\t\ttop += maxChartAreaHeight;\n\n\t\thelpers$1.each(rightBoxes, placeBox);\n\t\thelpers$1.each(bottomBoxes, placeBox);\n\n\t\t// Step 8\n\t\tchart.chartArea = {\n\t\t\tleft: outerBoxSizes.left,\n\t\t\ttop: outerBoxSizes.top,\n\t\t\tright: outerBoxSizes.left + maxChartAreaWidth,\n\t\t\tbottom: outerBoxSizes.top + maxChartAreaHeight\n\t\t};\n\n\t\t// Step 9\n\t\thelpers$1.each(chartAreaBoxes, function(box) {\n\t\t\tbox.left = chart.chartArea.left;\n\t\t\tbox.top = chart.chartArea.top;\n\t\t\tbox.right = chart.chartArea.right;\n\t\t\tbox.bottom = chart.chartArea.bottom;\n\n\t\t\tbox.update(maxChartAreaWidth, maxChartAreaHeight);\n\t\t});\n\t}\n};\n\n/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nvar platform_basic = {\n\tacquireContext: function(item) {\n\t\tif (item && item.canvas) {\n\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\titem = item.canvas;\n\t\t}\n\n\t\treturn item && item.getContext('2d') || null;\n\t}\n};\n\nvar platform_dom = \"/*\\n * DOM element rendering detection\\n * https://davidwalsh.name/detect-node-insertion\\n */\\n@keyframes chartjs-render-animation {\\n\\tfrom { opacity: 0.99; }\\n\\tto { opacity: 1; }\\n}\\n\\n.chartjs-render-monitor {\\n\\tanimation: chartjs-render-animation 0.001s;\\n}\\n\\n/*\\n * DOM element resizing detection\\n * https://github.com/marcj/css-element-queries\\n */\\n.chartjs-size-monitor,\\n.chartjs-size-monitor-expand,\\n.chartjs-size-monitor-shrink {\\n\\tposition: absolute;\\n\\tdirection: ltr;\\n\\tleft: 0;\\n\\ttop: 0;\\n\\tright: 0;\\n\\tbottom: 0;\\n\\toverflow: hidden;\\n\\tpointer-events: none;\\n\\tvisibility: hidden;\\n\\tz-index: -1;\\n}\\n\\n.chartjs-size-monitor-expand > div {\\n\\tposition: absolute;\\n\\twidth: 1000000px;\\n\\theight: 1000000px;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\\n.chartjs-size-monitor-shrink > div {\\n\\tposition: absolute;\\n\\twidth: 200%;\\n\\theight: 200%;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\";\n\nvar platform_dom$1 = /*#__PURE__*/Object.freeze({\ndefault: platform_dom\n});\n\nvar commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction commonjsRequire () {\n\tthrow new Error('Dynamic requires are not currently supported by rollup-plugin-commonjs');\n}\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nfunction getCjsExportFromNamespace (n) {\n\treturn n && n.default || n;\n}\n\nvar stylesheet = getCjsExportFromNamespace(platform_dom$1);\n\nvar EXPANDO_KEY = '$chartjs';\nvar CSS_PREFIX = 'chartjs-';\nvar CSS_SIZE_MONITOR = CSS_PREFIX + 'size-monitor';\nvar CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\nvar CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\nvar ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nvar EVENT_TYPES = {\n\ttouchstart: 'mousedown',\n\ttouchmove: 'mousemove',\n\ttouchend: 'mouseup',\n\tpointerenter: 'mouseenter',\n\tpointerdown: 'mousedown',\n\tpointermove: 'mousemove',\n\tpointerup: 'mouseup',\n\tpointerleave: 'mouseout',\n\tpointerout: 'mouseout'\n};\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns {number} Size in pixels or undefined if unknown.\n */\nfunction readUsedSize(element, property) {\n\tvar value = helpers$1.getStyle(element, property);\n\tvar matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n\treturn matches ? Number(matches[1]) : undefined;\n}\n\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n */\nfunction initCanvas(canvas, config) {\n\tvar style = canvas.style;\n\n\t// NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n\t// returns null or '' if no explicit value has been set to the canvas attribute.\n\tvar renderHeight = canvas.getAttribute('height');\n\tvar renderWidth = canvas.getAttribute('width');\n\n\t// Chart.js modifies some canvas values that we want to restore on destroy\n\tcanvas[EXPANDO_KEY] = {\n\t\tinitial: {\n\t\t\theight: renderHeight,\n\t\t\twidth: renderWidth,\n\t\t\tstyle: {\n\t\t\t\tdisplay: style.display,\n\t\t\t\theight: style.height,\n\t\t\t\twidth: style.width\n\t\t\t}\n\t\t}\n\t};\n\n\t// Force canvas to display as block to avoid extra space caused by inline\n\t// elements, which would interfere with the responsive resize process.\n\t// https://github.com/chartjs/Chart.js/issues/2538\n\tstyle.display = style.display || 'block';\n\n\tif (renderWidth === null || renderWidth === '') {\n\t\tvar displayWidth = readUsedSize(canvas, 'width');\n\t\tif (displayWidth !== undefined) {\n\t\t\tcanvas.width = displayWidth;\n\t\t}\n\t}\n\n\tif (renderHeight === null || renderHeight === '') {\n\t\tif (canvas.style.height === '') {\n\t\t\t// If no explicit render height and style height, let's apply the aspect ratio,\n\t\t\t// which one can be specified by the user but also by charts as default option\n\t\t\t// (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n\t\t\tcanvas.height = canvas.width / (config.options.aspectRatio || 2);\n\t\t} else {\n\t\t\tvar displayHeight = readUsedSize(canvas, 'height');\n\t\t\tif (displayWidth !== undefined) {\n\t\t\t\tcanvas.height = displayHeight;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn canvas;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nvar supportsEventListenerOptions = (function() {\n\tvar supports = false;\n\ttry {\n\t\tvar options = Object.defineProperty({}, 'passive', {\n\t\t\t// eslint-disable-next-line getter-return\n\t\t\tget: function() {\n\t\t\t\tsupports = true;\n\t\t\t}\n\t\t});\n\t\twindow.addEventListener('e', null, options);\n\t} catch (e) {\n\t\t// continue regardless of error\n\t}\n\treturn supports;\n}());\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nvar eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n\tnode.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(node, type, listener) {\n\tnode.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction createEvent(type, chart, x, y, nativeEvent) {\n\treturn {\n\t\ttype: type,\n\t\tchart: chart,\n\t\tnative: nativeEvent || null,\n\t\tx: x !== undefined ? x : null,\n\t\ty: y !== undefined ? y : null,\n\t};\n}\n\nfunction fromNativeEvent(event, chart) {\n\tvar type = EVENT_TYPES[event.type] || event.type;\n\tvar pos = helpers$1.getRelativePosition(event, chart);\n\treturn createEvent(type, chart, pos.x, pos.y, event);\n}\n\nfunction throttled(fn, thisArg) {\n\tvar ticking = false;\n\tvar args = [];\n\n\treturn function() {\n\t\targs = Array.prototype.slice.call(arguments);\n\t\tthisArg = thisArg || this;\n\n\t\tif (!ticking) {\n\t\t\tticking = true;\n\t\t\thelpers$1.requestAnimFrame.call(window, function() {\n\t\t\t\tticking = false;\n\t\t\t\tfn.apply(thisArg, args);\n\t\t\t});\n\t\t}\n\t};\n}\n\nfunction createDiv(cls) {\n\tvar el = document.createElement('div');\n\tel.className = cls || '';\n\treturn el;\n}\n\n// Implementation based on https://github.com/marcj/css-element-queries\nfunction createResizer(handler) {\n\tvar maxSize = 1000000;\n\n\t// NOTE(SB) Don't use innerHTML because it could be considered unsafe.\n\t// https://github.com/chartjs/Chart.js/issues/5902\n\tvar resizer = createDiv(CSS_SIZE_MONITOR);\n\tvar expand = createDiv(CSS_SIZE_MONITOR + '-expand');\n\tvar shrink = createDiv(CSS_SIZE_MONITOR + '-shrink');\n\n\texpand.appendChild(createDiv());\n\tshrink.appendChild(createDiv());\n\n\tresizer.appendChild(expand);\n\tresizer.appendChild(shrink);\n\tresizer._reset = function() {\n\t\texpand.scrollLeft = maxSize;\n\t\texpand.scrollTop = maxSize;\n\t\tshrink.scrollLeft = maxSize;\n\t\tshrink.scrollTop = maxSize;\n\t};\n\n\tvar onScroll = function() {\n\t\tresizer._reset();\n\t\thandler();\n\t};\n\n\taddListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n\taddListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n\n\treturn resizer;\n}\n\n// https://davidwalsh.name/detect-node-insertion\nfunction watchForRender(node, handler) {\n\tvar expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\tvar proxy = expando.renderProxy = function(e) {\n\t\tif (e.animationName === CSS_RENDER_ANIMATION) {\n\t\t\thandler();\n\t\t}\n\t};\n\n\thelpers$1.each(ANIMATION_START_EVENTS, function(type) {\n\t\taddListener(node, type, proxy);\n\t});\n\n\t// #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n\t// is removed then added back immediately (same animation frame?). Accessing the\n\t// `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n\t// https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n\t// https://github.com/chartjs/Chart.js/issues/4737\n\texpando.reflow = !!node.offsetParent;\n\n\tnode.classList.add(CSS_RENDER_MONITOR);\n}\n\nfunction unwatchForRender(node) {\n\tvar expando = node[EXPANDO_KEY] || {};\n\tvar proxy = expando.renderProxy;\n\n\tif (proxy) {\n\t\thelpers$1.each(ANIMATION_START_EVENTS, function(type) {\n\t\t\tremoveListener(node, type, proxy);\n\t\t});\n\n\t\tdelete expando.renderProxy;\n\t}\n\n\tnode.classList.remove(CSS_RENDER_MONITOR);\n}\n\nfunction addResizeListener(node, listener, chart) {\n\tvar expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n\t// Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\tvar resizer = expando.resizer = createResizer(throttled(function() {\n\t\tif (expando.resizer) {\n\t\t\tvar container = chart.options.maintainAspectRatio && node.parentNode;\n\t\t\tvar w = container ? container.clientWidth : 0;\n\t\t\tlistener(createEvent('resize', chart));\n\t\t\tif (container && container.clientWidth < w && chart.canvas) {\n\t\t\t\t// If the container size shrank during chart resize, let's assume\n\t\t\t\t// scrollbar appeared. So we resize again with the scrollbar visible -\n\t\t\t\t// effectively making chart smaller and the scrollbar hidden again.\n\t\t\t\t// Because we are inside `throttled`, and currently `ticking`, scroll\n\t\t\t\t// events are ignored during this whole 2 resize process.\n\t\t\t\t// If we assumed wrong and something else happened, we are resizing\n\t\t\t\t// twice in a frame (potential performance issue)\n\t\t\t\tlistener(createEvent('resize', chart));\n\t\t\t}\n\t\t}\n\t}));\n\n\t// The resizer needs to be attached to the node parent, so we first need to be\n\t// sure that `node` is attached to the DOM before injecting the resizer element.\n\twatchForRender(node, function() {\n\t\tif (expando.resizer) {\n\t\t\tvar container = node.parentNode;\n\t\t\tif (container && container !== resizer.parentNode) {\n\t\t\t\tcontainer.insertBefore(resizer, container.firstChild);\n\t\t\t}\n\n\t\t\t// The container size might have changed, let's reset the resizer state.\n\t\t\tresizer._reset();\n\t\t}\n\t});\n}\n\nfunction removeResizeListener(node) {\n\tvar expando = node[EXPANDO_KEY] || {};\n\tvar resizer = expando.resizer;\n\n\tdelete expando.resizer;\n\tunwatchForRender(node);\n\n\tif (resizer && resizer.parentNode) {\n\t\tresizer.parentNode.removeChild(resizer);\n\t}\n}\n\nfunction injectCSS(platform, css) {\n\t// https://stackoverflow.com/q/3922139\n\tvar style = platform._style || document.createElement('style');\n\tif (!platform._style) {\n\t\tplatform._style = style;\n\t\tcss = '/* Chart.js */\\n' + css;\n\t\tstyle.setAttribute('type', 'text/css');\n\t\tdocument.getElementsByTagName('head')[0].appendChild(style);\n\t}\n\n\tstyle.appendChild(document.createTextNode(css));\n}\n\nvar platform_dom$2 = {\n\t/**\n\t * When `true`, prevents the automatic injection of the stylesheet required to\n\t * correctly detect when the chart is added to the DOM and then resized. This\n\t * switch has been added to allow external stylesheet (`dist/Chart(.min)?.js`)\n\t * to be manually imported to make this library compatible with any CSP.\n\t * See https://github.com/chartjs/Chart.js/issues/5208\n\t */\n\tdisableCSSInjection: false,\n\n\t/**\n\t * This property holds whether this platform is enabled for the current environment.\n\t * Currently used by platform.js to select the proper implementation.\n\t * @private\n\t */\n\t_enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n\t/**\n\t * @private\n\t */\n\t_ensureLoaded: function() {\n\t\tif (this._loaded) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._loaded = true;\n\n\t\t// https://github.com/chartjs/Chart.js/issues/5208\n\t\tif (!this.disableCSSInjection) {\n\t\t\tinjectCSS(this, stylesheet);\n\t\t}\n\t},\n\n\tacquireContext: function(item, config) {\n\t\tif (typeof item === 'string') {\n\t\t\titem = document.getElementById(item);\n\t\t} else if (item.length) {\n\t\t\t// Support for array based queries (such as jQuery)\n\t\t\titem = item[0];\n\t\t}\n\n\t\tif (item && item.canvas) {\n\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\titem = item.canvas;\n\t\t}\n\n\t\t// To prevent canvas fingerprinting, some add-ons undefine the getContext\n\t\t// method, for example: https://github.com/kkapsner/CanvasBlocker\n\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\tvar context = item && item.getContext && item.getContext('2d');\n\n\t\t// Load platform resources on first chart creation, to make possible to change\n\t\t// platform options after importing the library (e.g. `disableCSSInjection`).\n\t\tthis._ensureLoaded();\n\n\t\t// `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n\t\t// inside an iframe or when running in a protected environment. We could guess the\n\t\t// types from their toString() value but let's keep things flexible and assume it's\n\t\t// a sufficient condition if the item has a context2D which has item as `canvas`.\n\t\t// https://github.com/chartjs/Chart.js/issues/3887\n\t\t// https://github.com/chartjs/Chart.js/issues/4102\n\t\t// https://github.com/chartjs/Chart.js/issues/4152\n\t\tif (context && context.canvas === item) {\n\t\t\tinitCanvas(item, config);\n\t\t\treturn context;\n\t\t}\n\n\t\treturn null;\n\t},\n\n\treleaseContext: function(context) {\n\t\tvar canvas = context.canvas;\n\t\tif (!canvas[EXPANDO_KEY]) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar initial = canvas[EXPANDO_KEY].initial;\n\t\t['height', 'width'].forEach(function(prop) {\n\t\t\tvar value = initial[prop];\n\t\t\tif (helpers$1.isNullOrUndef(value)) {\n\t\t\t\tcanvas.removeAttribute(prop);\n\t\t\t} else {\n\t\t\t\tcanvas.setAttribute(prop, value);\n\t\t\t}\n\t\t});\n\n\t\thelpers$1.each(initial.style || {}, function(value, key) {\n\t\t\tcanvas.style[key] = value;\n\t\t});\n\n\t\t// The canvas render size might have been changed (and thus the state stack discarded),\n\t\t// we can't use save() and restore() to restore the initial state. So make sure that at\n\t\t// least the canvas context is reset to the default state by setting the canvas width.\n\t\t// https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n\t\t// eslint-disable-next-line no-self-assign\n\t\tcanvas.width = canvas.width;\n\n\t\tdelete canvas[EXPANDO_KEY];\n\t},\n\n\taddEventListener: function(chart, type, listener) {\n\t\tvar canvas = chart.canvas;\n\t\tif (type === 'resize') {\n\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\taddResizeListener(canvas, listener, chart);\n\t\t\treturn;\n\t\t}\n\n\t\tvar expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n\t\tvar proxies = expando.proxies || (expando.proxies = {});\n\t\tvar proxy = proxies[chart.id + '_' + type] = function(event) {\n\t\t\tlistener(fromNativeEvent(event, chart));\n\t\t};\n\n\t\taddListener(canvas, type, proxy);\n\t},\n\n\tremoveEventListener: function(chart, type, listener) {\n\t\tvar canvas = chart.canvas;\n\t\tif (type === 'resize') {\n\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\tremoveResizeListener(canvas);\n\t\t\treturn;\n\t\t}\n\n\t\tvar expando = listener[EXPANDO_KEY] || {};\n\t\tvar proxies = expando.proxies || {};\n\t\tvar proxy = proxies[chart.id + '_' + type];\n\t\tif (!proxy) {\n\t\t\treturn;\n\t\t}\n\n\t\tremoveListener(canvas, type, proxy);\n\t}\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use EventTarget.addEventListener instead.\n * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n * @function Chart.helpers.addEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers$1.addEvent = addListener;\n\n/**\n * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n * @function Chart.helpers.removeEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers$1.removeEvent = removeListener;\n\n// @TODO Make possible to select another platform at build time.\nvar implementation = platform_dom$2._enabled ? platform_dom$2 : platform_basic;\n\n/**\n * @namespace Chart.platform\n * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n * @since 2.4.0\n */\nvar platform = helpers$1.extend({\n\t/**\n\t * @since 2.7.0\n\t */\n\tinitialize: function() {},\n\n\t/**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {*} item - The native item from which to acquire context (platform specific)\n\t * @param {object} options - The chart options\n\t * @returns {CanvasRenderingContext2D} context2d instance\n\t */\n\tacquireContext: function() {},\n\n\t/**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n\treleaseContext: function() {},\n\n\t/**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link IEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link IEvent} interface) when an event of the specified type occurs.\n\t */\n\taddEventListener: function() {},\n\n\t/**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link IEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n\tremoveEventListener: function() {}\n\n}, implementation);\n\ncore_defaults._set('global', {\n\tplugins: {}\n});\n\n/**\n * The plugin service singleton\n * @namespace Chart.plugins\n * @since 2.1.0\n */\nvar core_plugins = {\n\t/**\n\t * Globally registered plugins.\n\t * @private\n\t */\n\t_plugins: [],\n\n\t/**\n\t * This identifier is used to invalidate the descriptors cache attached to each chart\n\t * when a global plugin is registered or unregistered. In this case, the cache ID is\n\t * incremented and descriptors are regenerated during following API calls.\n\t * @private\n\t */\n\t_cacheId: 0,\n\n\t/**\n\t * Registers the given plugin(s) if not already registered.\n\t * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n\t */\n\tregister: function(plugins) {\n\t\tvar p = this._plugins;\n\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\tif (p.indexOf(plugin) === -1) {\n\t\t\t\tp.push(plugin);\n\t\t\t}\n\t\t});\n\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Unregisters the given plugin(s) only if registered.\n\t * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n\t */\n\tunregister: function(plugins) {\n\t\tvar p = this._plugins;\n\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\tvar idx = p.indexOf(plugin);\n\t\t\tif (idx !== -1) {\n\t\t\t\tp.splice(idx, 1);\n\t\t\t}\n\t\t});\n\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Remove all registered plugins.\n\t * @since 2.1.5\n\t */\n\tclear: function() {\n\t\tthis._plugins = [];\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Returns the number of registered plugins?\n\t * @returns {number}\n\t * @since 2.1.5\n\t */\n\tcount: function() {\n\t\treturn this._plugins.length;\n\t},\n\n\t/**\n\t * Returns all registered plugin instances.\n\t * @returns {IPlugin[]} array of plugin objects.\n\t * @since 2.1.5\n\t */\n\tgetAll: function() {\n\t\treturn this._plugins;\n\t},\n\n\t/**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Array} [args] - Extra arguments to apply to the hook call.\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n\tnotify: function(chart, hook, args) {\n\t\tvar descriptors = this.descriptors(chart);\n\t\tvar ilen = descriptors.length;\n\t\tvar i, descriptor, plugin, params, method;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tdescriptor = descriptors[i];\n\t\t\tplugin = descriptor.plugin;\n\t\t\tmethod = plugin[hook];\n\t\t\tif (typeof method === 'function') {\n\t\t\t\tparams = [chart].concat(args || []);\n\t\t\t\tparams.push(descriptor.options);\n\t\t\t\tif (method.apply(plugin, params) === false) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns descriptors of enabled plugins for the given chart.\n\t * @returns {object[]} [{ plugin, options }]\n\t * @private\n\t */\n\tdescriptors: function(chart) {\n\t\tvar cache = chart.$plugins || (chart.$plugins = {});\n\t\tif (cache.id === this._cacheId) {\n\t\t\treturn cache.descriptors;\n\t\t}\n\n\t\tvar plugins = [];\n\t\tvar descriptors = [];\n\t\tvar config = (chart && chart.config) || {};\n\t\tvar options = (config.options && config.options.plugins) || {};\n\n\t\tthis._plugins.concat(config.plugins || []).forEach(function(plugin) {\n\t\t\tvar idx = plugins.indexOf(plugin);\n\t\t\tif (idx !== -1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar id = plugin.id;\n\t\t\tvar opts = options[id];\n\t\t\tif (opts === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (opts === true) {\n\t\t\t\topts = helpers$1.clone(core_defaults.global.plugins[id]);\n\t\t\t}\n\n\t\t\tplugins.push(plugin);\n\t\t\tdescriptors.push({\n\t\t\t\tplugin: plugin,\n\t\t\t\toptions: opts || {}\n\t\t\t});\n\t\t});\n\n\t\tcache.descriptors = descriptors;\n\t\tcache.id = this._cacheId;\n\t\treturn descriptors;\n\t},\n\n\t/**\n\t * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n\t * but in some cases, this reference can be changed by the user when updating options.\n\t * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\t * @private\n\t */\n\t_invalidate: function(chart) {\n\t\tdelete chart.$plugins;\n\t}\n};\n\nvar core_scaleService = {\n\t// Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n\t// use the new chart options to grab the correct scale\n\tconstructors: {},\n\t// Use a registration function so that we can move to an ES6 map when we no longer need to support\n\t// old browsers\n\n\t// Scale config defaults\n\tdefaults: {},\n\tregisterScaleType: function(type, scaleConstructor, scaleDefaults) {\n\t\tthis.constructors[type] = scaleConstructor;\n\t\tthis.defaults[type] = helpers$1.clone(scaleDefaults);\n\t},\n\tgetScaleConstructor: function(type) {\n\t\treturn this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n\t},\n\tgetScaleDefaults: function(type) {\n\t\t// Return the scale defaults merged with the global settings so that we always use the latest ones\n\t\treturn this.defaults.hasOwnProperty(type) ? helpers$1.merge({}, [core_defaults.scale, this.defaults[type]]) : {};\n\t},\n\tupdateScaleDefaults: function(type, additions) {\n\t\tvar me = this;\n\t\tif (me.defaults.hasOwnProperty(type)) {\n\t\t\tme.defaults[type] = helpers$1.extend(me.defaults[type], additions);\n\t\t}\n\t},\n\taddScalesToLayout: function(chart) {\n\t\t// Adds each scale to the chart.boxes array to be sized accordingly\n\t\thelpers$1.each(chart.scales, function(scale) {\n\t\t\t// Set ILayoutItem parameters for backwards compatibility\n\t\t\tscale.fullWidth = scale.options.fullWidth;\n\t\t\tscale.position = scale.options.position;\n\t\t\tscale.weight = scale.options.weight;\n\t\t\tcore_layouts.addBox(chart, scale);\n\t\t});\n\t}\n};\n\nvar valueOrDefault$7 = helpers$1.valueOrDefault;\n\ncore_defaults._set('global', {\n\ttooltips: {\n\t\tenabled: true,\n\t\tcustom: null,\n\t\tmode: 'nearest',\n\t\tposition: 'average',\n\t\tintersect: true,\n\t\tbackgroundColor: 'rgba(0,0,0,0.8)',\n\t\ttitleFontStyle: 'bold',\n\t\ttitleSpacing: 2,\n\t\ttitleMarginBottom: 6,\n\t\ttitleFontColor: '#fff',\n\t\ttitleAlign: 'left',\n\t\tbodySpacing: 2,\n\t\tbodyFontColor: '#fff',\n\t\tbodyAlign: 'left',\n\t\tfooterFontStyle: 'bold',\n\t\tfooterSpacing: 2,\n\t\tfooterMarginTop: 6,\n\t\tfooterFontColor: '#fff',\n\t\tfooterAlign: 'left',\n\t\tyPadding: 6,\n\t\txPadding: 6,\n\t\tcaretPadding: 2,\n\t\tcaretSize: 5,\n\t\tcornerRadius: 6,\n\t\tmultiKeyBackground: '#fff',\n\t\tdisplayColors: true,\n\t\tborderColor: 'rgba(0,0,0,0)',\n\t\tborderWidth: 0,\n\t\tcallbacks: {\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeTitle: helpers$1.noop,\n\t\t\ttitle: function(tooltipItems, data) {\n\t\t\t\tvar title = '';\n\t\t\t\tvar labels = data.labels;\n\t\t\t\tvar labelCount = labels ? labels.length : 0;\n\n\t\t\t\tif (tooltipItems.length > 0) {\n\t\t\t\t\tvar item = tooltipItems[0];\n\t\t\t\t\tif (item.label) {\n\t\t\t\t\t\ttitle = item.label;\n\t\t\t\t\t} else if (item.xLabel) {\n\t\t\t\t\t\ttitle = item.xLabel;\n\t\t\t\t\t} else if (labelCount > 0 && item.index < labelCount) {\n\t\t\t\t\t\ttitle = labels[item.index];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn title;\n\t\t\t},\n\t\t\tafterTitle: helpers$1.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeBody: helpers$1.noop,\n\n\t\t\t// Args are: (tooltipItem, data)\n\t\t\tbeforeLabel: helpers$1.noop,\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel += ': ';\n\t\t\t\t}\n\t\t\t\tif (!helpers$1.isNullOrUndef(tooltipItem.value)) {\n\t\t\t\t\tlabel += tooltipItem.value;\n\t\t\t\t} else {\n\t\t\t\t\tlabel += tooltipItem.yLabel;\n\t\t\t\t}\n\t\t\t\treturn label;\n\t\t\t},\n\t\t\tlabelColor: function(tooltipItem, chart) {\n\t\t\t\tvar meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n\t\t\t\tvar activeElement = meta.data[tooltipItem.index];\n\t\t\t\tvar view = activeElement._view;\n\t\t\t\treturn {\n\t\t\t\t\tborderColor: view.borderColor,\n\t\t\t\t\tbackgroundColor: view.backgroundColor\n\t\t\t\t};\n\t\t\t},\n\t\t\tlabelTextColor: function() {\n\t\t\t\treturn this._options.bodyFontColor;\n\t\t\t},\n\t\t\tafterLabel: helpers$1.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tafterBody: helpers$1.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeFooter: helpers$1.noop,\n\t\t\tfooter: helpers$1.noop,\n\t\t\tafterFooter: helpers$1.noop\n\t\t}\n\t}\n});\n\nvar positioners = {\n\t/**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t * @function Chart.Tooltip.positioners.average\n\t * @param elements {ChartElement[]} the elements being displayed in the tooltip\n\t * @returns {object} tooltip position\n\t */\n\taverage: function(elements) {\n\t\tif (!elements.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar i, len;\n\t\tvar x = 0;\n\t\tvar y = 0;\n\t\tvar count = 0;\n\n\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\tvar el = elements[i];\n\t\t\tif (el && el.hasValue()) {\n\t\t\t\tvar pos = el.tooltipPosition();\n\t\t\t\tx += pos.x;\n\t\t\t\ty += pos.y;\n\t\t\t\t++count;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tx: x / count,\n\t\t\ty: y / count\n\t\t};\n\t},\n\n\t/**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t * @function Chart.Tooltip.positioners.nearest\n\t * @param elements {Chart.Element[]} the tooltip elements\n\t * @param eventPosition {object} the position of the event in canvas coordinates\n\t * @returns {object} the tooltip position\n\t */\n\tnearest: function(elements, eventPosition) {\n\t\tvar x = eventPosition.x;\n\t\tvar y = eventPosition.y;\n\t\tvar minDistance = Number.POSITIVE_INFINITY;\n\t\tvar i, len, nearestElement;\n\n\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\tvar el = elements[i];\n\t\t\tif (el && el.hasValue()) {\n\t\t\t\tvar center = el.getCenterPoint();\n\t\t\t\tvar d = helpers$1.distanceBetweenPoints(eventPosition, center);\n\n\t\t\t\tif (d < minDistance) {\n\t\t\t\t\tminDistance = d;\n\t\t\t\t\tnearestElement = el;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (nearestElement) {\n\t\t\tvar tp = nearestElement.tooltipPosition();\n\t\t\tx = tp.x;\n\t\t\ty = tp.y;\n\t\t}\n\n\t\treturn {\n\t\t\tx: x,\n\t\t\ty: y\n\t\t};\n\t}\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n\tif (toPush) {\n\t\tif (helpers$1.isArray(toPush)) {\n\t\t\t// base = base.concat(toPush);\n\t\t\tArray.prototype.push.apply(base, toPush);\n\t\t} else {\n\t\t\tbase.push(toPush);\n\t\t}\n\t}\n\n\treturn base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {string} value - The value to split by newline.\n * @returns {string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n\tif ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n\t\treturn str.split('\\n');\n\t}\n\treturn str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param element - the chart element (point, arc, bar) to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(element) {\n\tvar xScale = element._xScale;\n\tvar yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\tvar index = element._index;\n\tvar datasetIndex = element._datasetIndex;\n\tvar controller = element._chart.getDatasetMeta(datasetIndex).controller;\n\tvar indexScale = controller._getIndexScale();\n\tvar valueScale = controller._getValueScale();\n\n\treturn {\n\t\txLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n\t\tyLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n\t\tlabel: indexScale ? '' + indexScale.getLabelForIndex(index, datasetIndex) : '',\n\t\tvalue: valueScale ? '' + valueScale.getLabelForIndex(index, datasetIndex) : '',\n\t\tindex: index,\n\t\tdatasetIndex: datasetIndex,\n\t\tx: element._model.x,\n\t\ty: element._model.y\n\t};\n}\n\n/**\n * Helper to get the reset model for the tooltip\n * @param tooltipOpts {object} the tooltip options\n */\nfunction getBaseModel(tooltipOpts) {\n\tvar globalDefaults = core_defaults.global;\n\n\treturn {\n\t\t// Positioning\n\t\txPadding: tooltipOpts.xPadding,\n\t\tyPadding: tooltipOpts.yPadding,\n\t\txAlign: tooltipOpts.xAlign,\n\t\tyAlign: tooltipOpts.yAlign,\n\n\t\t// Body\n\t\tbodyFontColor: tooltipOpts.bodyFontColor,\n\t\t_bodyFontFamily: valueOrDefault$7(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n\t\t_bodyFontStyle: valueOrDefault$7(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n\t\t_bodyAlign: tooltipOpts.bodyAlign,\n\t\tbodyFontSize: valueOrDefault$7(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n\t\tbodySpacing: tooltipOpts.bodySpacing,\n\n\t\t// Title\n\t\ttitleFontColor: tooltipOpts.titleFontColor,\n\t\t_titleFontFamily: valueOrDefault$7(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n\t\t_titleFontStyle: valueOrDefault$7(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n\t\ttitleFontSize: valueOrDefault$7(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n\t\t_titleAlign: tooltipOpts.titleAlign,\n\t\ttitleSpacing: tooltipOpts.titleSpacing,\n\t\ttitleMarginBottom: tooltipOpts.titleMarginBottom,\n\n\t\t// Footer\n\t\tfooterFontColor: tooltipOpts.footerFontColor,\n\t\t_footerFontFamily: valueOrDefault$7(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n\t\t_footerFontStyle: valueOrDefault$7(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n\t\tfooterFontSize: valueOrDefault$7(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n\t\t_footerAlign: tooltipOpts.footerAlign,\n\t\tfooterSpacing: tooltipOpts.footerSpacing,\n\t\tfooterMarginTop: tooltipOpts.footerMarginTop,\n\n\t\t// Appearance\n\t\tcaretSize: tooltipOpts.caretSize,\n\t\tcornerRadius: tooltipOpts.cornerRadius,\n\t\tbackgroundColor: tooltipOpts.backgroundColor,\n\t\topacity: 0,\n\t\tlegendColorBackground: tooltipOpts.multiKeyBackground,\n\t\tdisplayColors: tooltipOpts.displayColors,\n\t\tborderColor: tooltipOpts.borderColor,\n\t\tborderWidth: tooltipOpts.borderWidth\n\t};\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, model) {\n\tvar ctx = tooltip._chart.ctx;\n\n\tvar height = model.yPadding * 2; // Tooltip Padding\n\tvar width = 0;\n\n\t// Count of all lines in the body\n\tvar body = model.body;\n\tvar combinedBodyLength = body.reduce(function(count, bodyItem) {\n\t\treturn count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n\t}, 0);\n\tcombinedBodyLength += model.beforeBody.length + model.afterBody.length;\n\n\tvar titleLineCount = model.title.length;\n\tvar footerLineCount = model.footer.length;\n\tvar titleFontSize = model.titleFontSize;\n\tvar bodyFontSize = model.bodyFontSize;\n\tvar footerFontSize = model.footerFontSize;\n\n\theight += titleLineCount * titleFontSize; // Title Lines\n\theight += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\theight += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\theight += combinedBodyLength * bodyFontSize; // Body Lines\n\theight += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\theight += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\theight += footerLineCount * (footerFontSize); // Footer Lines\n\theight += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n\n\t// Title width\n\tvar widthPadding = 0;\n\tvar maxLineWidth = function(line) {\n\t\twidth = Math.max(width, ctx.measureText(line).width + widthPadding);\n\t};\n\n\tctx.font = helpers$1.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n\thelpers$1.each(model.title, maxLineWidth);\n\n\t// Body width\n\tctx.font = helpers$1.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n\thelpers$1.each(model.beforeBody.concat(model.afterBody), maxLineWidth);\n\n\t// Body lines may include some extra width due to the color box\n\twidthPadding = model.displayColors ? (bodyFontSize + 2) : 0;\n\thelpers$1.each(body, function(bodyItem) {\n\t\thelpers$1.each(bodyItem.before, maxLineWidth);\n\t\thelpers$1.each(bodyItem.lines, maxLineWidth);\n\t\thelpers$1.each(bodyItem.after, maxLineWidth);\n\t});\n\n\t// Reset back to 0\n\twidthPadding = 0;\n\n\t// Footer width\n\tctx.font = helpers$1.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n\thelpers$1.each(model.footer, maxLineWidth);\n\n\t// Add padding\n\twidth += 2 * model.xPadding;\n\n\treturn {\n\t\twidth: width,\n\t\theight: height\n\t};\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(tooltip, size) {\n\tvar model = tooltip._model;\n\tvar chart = tooltip._chart;\n\tvar chartArea = tooltip._chart.chartArea;\n\tvar xAlign = 'center';\n\tvar yAlign = 'center';\n\n\tif (model.y < size.height) {\n\t\tyAlign = 'top';\n\t} else if (model.y > (chart.height - size.height)) {\n\t\tyAlign = 'bottom';\n\t}\n\n\tvar lf, rf; // functions to determine left, right alignment\n\tvar olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\tvar yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\tvar midX = (chartArea.left + chartArea.right) / 2;\n\tvar midY = (chartArea.top + chartArea.bottom) / 2;\n\n\tif (yAlign === 'center') {\n\t\tlf = function(x) {\n\t\t\treturn x <= midX;\n\t\t};\n\t\trf = function(x) {\n\t\t\treturn x > midX;\n\t\t};\n\t} else {\n\t\tlf = function(x) {\n\t\t\treturn x <= (size.width / 2);\n\t\t};\n\t\trf = function(x) {\n\t\t\treturn x >= (chart.width - (size.width / 2));\n\t\t};\n\t}\n\n\tolf = function(x) {\n\t\treturn x + size.width + model.caretSize + model.caretPadding > chart.width;\n\t};\n\torf = function(x) {\n\t\treturn x - size.width - model.caretSize - model.caretPadding < 0;\n\t};\n\tyf = function(y) {\n\t\treturn y <= midY ? 'top' : 'bottom';\n\t};\n\n\tif (lf(model.x)) {\n\t\txAlign = 'left';\n\n\t\t// Is tooltip too wide and goes over the right side of the chart.?\n\t\tif (olf(model.x)) {\n\t\t\txAlign = 'center';\n\t\t\tyAlign = yf(model.y);\n\t\t}\n\t} else if (rf(model.x)) {\n\t\txAlign = 'right';\n\n\t\t// Is tooltip too wide and goes outside left edge of canvas?\n\t\tif (orf(model.x)) {\n\t\t\txAlign = 'center';\n\t\t\tyAlign = yf(model.y);\n\t\t}\n\t}\n\n\tvar opts = tooltip._options;\n\treturn {\n\t\txAlign: opts.xAlign ? opts.xAlign : xAlign,\n\t\tyAlign: opts.yAlign ? opts.yAlign : yAlign\n\t};\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(vm, size, alignment, chart) {\n\t// Background Position\n\tvar x = vm.x;\n\tvar y = vm.y;\n\n\tvar caretSize = vm.caretSize;\n\tvar caretPadding = vm.caretPadding;\n\tvar cornerRadius = vm.cornerRadius;\n\tvar xAlign = alignment.xAlign;\n\tvar yAlign = alignment.yAlign;\n\tvar paddingAndSize = caretSize + caretPadding;\n\tvar radiusAndPadding = cornerRadius + caretPadding;\n\n\tif (xAlign === 'right') {\n\t\tx -= size.width;\n\t} else if (xAlign === 'center') {\n\t\tx -= (size.width / 2);\n\t\tif (x + size.width > chart.width) {\n\t\t\tx = chart.width - size.width;\n\t\t}\n\t\tif (x < 0) {\n\t\t\tx = 0;\n\t\t}\n\t}\n\n\tif (yAlign === 'top') {\n\t\ty += paddingAndSize;\n\t} else if (yAlign === 'bottom') {\n\t\ty -= size.height + paddingAndSize;\n\t} else {\n\t\ty -= (size.height / 2);\n\t}\n\n\tif (yAlign === 'center') {\n\t\tif (xAlign === 'left') {\n\t\t\tx += paddingAndSize;\n\t\t} else if (xAlign === 'right') {\n\t\t\tx -= paddingAndSize;\n\t\t}\n\t} else if (xAlign === 'left') {\n\t\tx -= radiusAndPadding;\n\t} else if (xAlign === 'right') {\n\t\tx += radiusAndPadding;\n\t}\n\n\treturn {\n\t\tx: x,\n\t\ty: y\n\t};\n}\n\nfunction getAlignedX(vm, align) {\n\treturn align === 'center'\n\t\t? vm.x + vm.width / 2\n\t\t: align === 'right'\n\t\t\t? vm.x + vm.width - vm.xPadding\n\t\t\t: vm.x + vm.xPadding;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n\treturn pushOrConcat([], splitNewlines(callback));\n}\n\nvar exports$3 = core_element.extend({\n\tinitialize: function() {\n\t\tthis._model = getBaseModel(this._options);\n\t\tthis._lastActive = [];\n\t},\n\n\t// Get the title\n\t// Args are: (tooltipItem, data)\n\tgetTitle: function() {\n\t\tvar me = this;\n\t\tvar opts = me._options;\n\t\tvar callbacks = opts.callbacks;\n\n\t\tvar beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n\t\tvar title = callbacks.title.apply(me, arguments);\n\t\tvar afterTitle = callbacks.afterTitle.apply(me, arguments);\n\n\t\tvar lines = [];\n\t\tlines = pushOrConcat(lines, splitNewlines(beforeTitle));\n\t\tlines = pushOrConcat(lines, splitNewlines(title));\n\t\tlines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n\t\treturn lines;\n\t},\n\n\t// Args are: (tooltipItem, data)\n\tgetBeforeBody: function() {\n\t\treturn getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n\t},\n\n\t// Args are: (tooltipItem, data)\n\tgetBody: function(tooltipItems, data) {\n\t\tvar me = this;\n\t\tvar callbacks = me._options.callbacks;\n\t\tvar bodyItems = [];\n\n\t\thelpers$1.each(tooltipItems, function(tooltipItem) {\n\t\t\tvar bodyItem = {\n\t\t\t\tbefore: [],\n\t\t\t\tlines: [],\n\t\t\t\tafter: []\n\t\t\t};\n\t\t\tpushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n\t\t\tpushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n\t\t\tpushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n\n\t\t\tbodyItems.push(bodyItem);\n\t\t});\n\n\t\treturn bodyItems;\n\t},\n\n\t// Args are: (tooltipItem, data)\n\tgetAfterBody: function() {\n\t\treturn getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n\t},\n\n\t// Get the footer and beforeFooter and afterFooter lines\n\t// Args are: (tooltipItem, data)\n\tgetFooter: function() {\n\t\tvar me = this;\n\t\tvar callbacks = me._options.callbacks;\n\n\t\tvar beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n\t\tvar footer = callbacks.footer.apply(me, arguments);\n\t\tvar afterFooter = callbacks.afterFooter.apply(me, arguments);\n\n\t\tvar lines = [];\n\t\tlines = pushOrConcat(lines, splitNewlines(beforeFooter));\n\t\tlines = pushOrConcat(lines, splitNewlines(footer));\n\t\tlines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n\t\treturn lines;\n\t},\n\n\tupdate: function(changed) {\n\t\tvar me = this;\n\t\tvar opts = me._options;\n\n\t\t// Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n\t\t// that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n\t\t// which breaks any animations.\n\t\tvar existingModel = me._model;\n\t\tvar model = me._model = getBaseModel(opts);\n\t\tvar active = me._active;\n\n\t\tvar data = me._data;\n\n\t\t// In the case where active.length === 0 we need to keep these at existing values for good animations\n\t\tvar alignment = {\n\t\t\txAlign: existingModel.xAlign,\n\t\t\tyAlign: existingModel.yAlign\n\t\t};\n\t\tvar backgroundPoint = {\n\t\t\tx: existingModel.x,\n\t\t\ty: existingModel.y\n\t\t};\n\t\tvar tooltipSize = {\n\t\t\twidth: existingModel.width,\n\t\t\theight: existingModel.height\n\t\t};\n\t\tvar tooltipPosition = {\n\t\t\tx: existingModel.caretX,\n\t\t\ty: existingModel.caretY\n\t\t};\n\n\t\tvar i, len;\n\n\t\tif (active.length) {\n\t\t\tmodel.opacity = 1;\n\n\t\t\tvar labelColors = [];\n\t\t\tvar labelTextColors = [];\n\t\t\ttooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n\n\t\t\tvar tooltipItems = [];\n\t\t\tfor (i = 0, len = active.length; i < len; ++i) {\n\t\t\t\ttooltipItems.push(createTooltipItem(active[i]));\n\t\t\t}\n\n\t\t\t// If the user provided a filter function, use it to modify the tooltip items\n\t\t\tif (opts.filter) {\n\t\t\t\ttooltipItems = tooltipItems.filter(function(a) {\n\t\t\t\t\treturn opts.filter(a, data);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// If the user provided a sorting function, use it to modify the tooltip items\n\t\t\tif (opts.itemSort) {\n\t\t\t\ttooltipItems = tooltipItems.sort(function(a, b) {\n\t\t\t\t\treturn opts.itemSort(a, b, data);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Determine colors for boxes\n\t\t\thelpers$1.each(tooltipItems, function(tooltipItem) {\n\t\t\t\tlabelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n\t\t\t\tlabelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n\t\t\t});\n\n\n\t\t\t// Build the Text Lines\n\t\t\tmodel.title = me.getTitle(tooltipItems, data);\n\t\t\tmodel.beforeBody = me.getBeforeBody(tooltipItems, data);\n\t\t\tmodel.body = me.getBody(tooltipItems, data);\n\t\t\tmodel.afterBody = me.getAfterBody(tooltipItems, data);\n\t\t\tmodel.footer = me.getFooter(tooltipItems, data);\n\n\t\t\t// Initial positioning and colors\n\t\t\tmodel.x = tooltipPosition.x;\n\t\t\tmodel.y = tooltipPosition.y;\n\t\t\tmodel.caretPadding = opts.caretPadding;\n\t\t\tmodel.labelColors = labelColors;\n\t\t\tmodel.labelTextColors = labelTextColors;\n\n\t\t\t// data points\n\t\t\tmodel.dataPoints = tooltipItems;\n\n\t\t\t// We need to determine alignment of the tooltip\n\t\t\ttooltipSize = getTooltipSize(this, model);\n\t\t\talignment = determineAlignment(this, tooltipSize);\n\t\t\t// Final Size and Position\n\t\t\tbackgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n\t\t} else {\n\t\t\tmodel.opacity = 0;\n\t\t}\n\n\t\tmodel.xAlign = alignment.xAlign;\n\t\tmodel.yAlign = alignment.yAlign;\n\t\tmodel.x = backgroundPoint.x;\n\t\tmodel.y = backgroundPoint.y;\n\t\tmodel.width = tooltipSize.width;\n\t\tmodel.height = tooltipSize.height;\n\n\t\t// Point where the caret on the tooltip points to\n\t\tmodel.caretX = tooltipPosition.x;\n\t\tmodel.caretY = tooltipPosition.y;\n\n\t\tme._model = model;\n\n\t\tif (changed && opts.custom) {\n\t\t\topts.custom.call(me, model);\n\t\t}\n\n\t\treturn me;\n\t},\n\n\tdrawCaret: function(tooltipPoint, size) {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n\n\t\tctx.lineTo(caretPosition.x1, caretPosition.y1);\n\t\tctx.lineTo(caretPosition.x2, caretPosition.y2);\n\t\tctx.lineTo(caretPosition.x3, caretPosition.y3);\n\t},\n\tgetCaretPosition: function(tooltipPoint, size, vm) {\n\t\tvar x1, x2, x3, y1, y2, y3;\n\t\tvar caretSize = vm.caretSize;\n\t\tvar cornerRadius = vm.cornerRadius;\n\t\tvar xAlign = vm.xAlign;\n\t\tvar yAlign = vm.yAlign;\n\t\tvar ptX = tooltipPoint.x;\n\t\tvar ptY = tooltipPoint.y;\n\t\tvar width = size.width;\n\t\tvar height = size.height;\n\n\t\tif (yAlign === 'center') {\n\t\t\ty2 = ptY + (height / 2);\n\n\t\t\tif (xAlign === 'left') {\n\t\t\t\tx1 = ptX;\n\t\t\t\tx2 = x1 - caretSize;\n\t\t\t\tx3 = x1;\n\n\t\t\t\ty1 = y2 + caretSize;\n\t\t\t\ty3 = y2 - caretSize;\n\t\t\t} else {\n\t\t\t\tx1 = ptX + width;\n\t\t\t\tx2 = x1 + caretSize;\n\t\t\t\tx3 = x1;\n\n\t\t\t\ty1 = y2 - caretSize;\n\t\t\t\ty3 = y2 + caretSize;\n\t\t\t}\n\t\t} else {\n\t\t\tif (xAlign === 'left') {\n\t\t\t\tx2 = ptX + cornerRadius + (caretSize);\n\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\tx3 = x2 + caretSize;\n\t\t\t} else if (xAlign === 'right') {\n\t\t\t\tx2 = ptX + width - cornerRadius - caretSize;\n\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\tx3 = x2 + caretSize;\n\t\t\t} else {\n\t\t\t\tx2 = vm.caretX;\n\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\tx3 = x2 + caretSize;\n\t\t\t}\n\t\t\tif (yAlign === 'top') {\n\t\t\t\ty1 = ptY;\n\t\t\t\ty2 = y1 - caretSize;\n\t\t\t\ty3 = y1;\n\t\t\t} else {\n\t\t\t\ty1 = ptY + height;\n\t\t\t\ty2 = y1 + caretSize;\n\t\t\t\ty3 = y1;\n\t\t\t\t// invert drawing order\n\t\t\t\tvar tmp = x3;\n\t\t\t\tx3 = x1;\n\t\t\t\tx1 = tmp;\n\t\t\t}\n\t\t}\n\t\treturn {x1: x1, x2: x2, x3: x3, y1: y1, y2: y2, y3: y3};\n\t},\n\n\tdrawTitle: function(pt, vm, ctx) {\n\t\tvar title = vm.title;\n\n\t\tif (title.length) {\n\t\t\tpt.x = getAlignedX(vm, vm._titleAlign);\n\n\t\t\tctx.textAlign = vm._titleAlign;\n\t\t\tctx.textBaseline = 'top';\n\n\t\t\tvar titleFontSize = vm.titleFontSize;\n\t\t\tvar titleSpacing = vm.titleSpacing;\n\n\t\t\tctx.fillStyle = vm.titleFontColor;\n\t\t\tctx.font = helpers$1.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n\n\t\t\tvar i, len;\n\t\t\tfor (i = 0, len = title.length; i < len; ++i) {\n\t\t\t\tctx.fillText(title[i], pt.x, pt.y);\n\t\t\t\tpt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n\t\t\t\tif (i + 1 === title.length) {\n\t\t\t\t\tpt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tdrawBody: function(pt, vm, ctx) {\n\t\tvar bodyFontSize = vm.bodyFontSize;\n\t\tvar bodySpacing = vm.bodySpacing;\n\t\tvar bodyAlign = vm._bodyAlign;\n\t\tvar body = vm.body;\n\t\tvar drawColorBoxes = vm.displayColors;\n\t\tvar labelColors = vm.labelColors;\n\t\tvar xLinePadding = 0;\n\t\tvar colorX = drawColorBoxes ? getAlignedX(vm, 'left') : 0;\n\t\tvar textColor;\n\n\t\tctx.textAlign = bodyAlign;\n\t\tctx.textBaseline = 'top';\n\t\tctx.font = helpers$1.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n\n\t\tpt.x = getAlignedX(vm, bodyAlign);\n\n\t\t// Before Body\n\t\tvar fillLineOfText = function(line) {\n\t\t\tctx.fillText(line, pt.x + xLinePadding, pt.y);\n\t\t\tpt.y += bodyFontSize + bodySpacing;\n\t\t};\n\n\t\t// Before body lines\n\t\tctx.fillStyle = vm.bodyFontColor;\n\t\thelpers$1.each(vm.beforeBody, fillLineOfText);\n\n\t\txLinePadding = drawColorBoxes && bodyAlign !== 'right'\n\t\t\t? bodyAlign === 'center' ? (bodyFontSize / 2 + 1) : (bodyFontSize + 2)\n\t\t\t: 0;\n\n\t\t// Draw body lines now\n\t\thelpers$1.each(body, function(bodyItem, i) {\n\t\t\ttextColor = vm.labelTextColors[i];\n\t\t\tctx.fillStyle = textColor;\n\t\t\thelpers$1.each(bodyItem.before, fillLineOfText);\n\n\t\t\thelpers$1.each(bodyItem.lines, function(line) {\n\t\t\t\t// Draw Legend-like boxes if needed\n\t\t\t\tif (drawColorBoxes) {\n\t\t\t\t\t// Fill a white rect so that colours merge nicely if the opacity is < 1\n\t\t\t\t\tctx.fillStyle = vm.legendColorBackground;\n\t\t\t\t\tctx.fillRect(colorX, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t// Border\n\t\t\t\t\tctx.lineWidth = 1;\n\t\t\t\t\tctx.strokeStyle = labelColors[i].borderColor;\n\t\t\t\t\tctx.strokeRect(colorX, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t// Inner square\n\t\t\t\t\tctx.fillStyle = labelColors[i].backgroundColor;\n\t\t\t\t\tctx.fillRect(colorX + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n\t\t\t\t\tctx.fillStyle = textColor;\n\t\t\t\t}\n\n\t\t\t\tfillLineOfText(line);\n\t\t\t});\n\n\t\t\thelpers$1.each(bodyItem.after, fillLineOfText);\n\t\t});\n\n\t\t// Reset back to 0 for after body\n\t\txLinePadding = 0;\n\n\t\t// After body lines\n\t\thelpers$1.each(vm.afterBody, fillLineOfText);\n\t\tpt.y -= bodySpacing; // Remove last body spacing\n\t},\n\n\tdrawFooter: function(pt, vm, ctx) {\n\t\tvar footer = vm.footer;\n\n\t\tif (footer.length) {\n\t\t\tpt.x = getAlignedX(vm, vm._footerAlign);\n\t\t\tpt.y += vm.footerMarginTop;\n\n\t\t\tctx.textAlign = vm._footerAlign;\n\t\t\tctx.textBaseline = 'top';\n\n\t\t\tctx.fillStyle = vm.footerFontColor;\n\t\t\tctx.font = helpers$1.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n\n\t\t\thelpers$1.each(footer, function(line) {\n\t\t\t\tctx.fillText(line, pt.x, pt.y);\n\t\t\t\tpt.y += vm.footerFontSize + vm.footerSpacing;\n\t\t\t});\n\t\t}\n\t},\n\n\tdrawBackground: function(pt, vm, ctx, tooltipSize) {\n\t\tctx.fillStyle = vm.backgroundColor;\n\t\tctx.strokeStyle = vm.borderColor;\n\t\tctx.lineWidth = vm.borderWidth;\n\t\tvar xAlign = vm.xAlign;\n\t\tvar yAlign = vm.yAlign;\n\t\tvar x = pt.x;\n\t\tvar y = pt.y;\n\t\tvar width = tooltipSize.width;\n\t\tvar height = tooltipSize.height;\n\t\tvar radius = vm.cornerRadius;\n\n\t\tctx.beginPath();\n\t\tctx.moveTo(x + radius, y);\n\t\tif (yAlign === 'top') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x + width - radius, y);\n\t\tctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\t\tif (yAlign === 'center' && xAlign === 'right') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x + width, y + height - radius);\n\t\tctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\t\tif (yAlign === 'bottom') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x + radius, y + height);\n\t\tctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\t\tif (yAlign === 'center' && xAlign === 'left') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x, y + radius);\n\t\tctx.quadraticCurveTo(x, y, x + radius, y);\n\t\tctx.closePath();\n\n\t\tctx.fill();\n\n\t\tif (vm.borderWidth > 0) {\n\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\n\t\tif (vm.opacity === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar tooltipSize = {\n\t\t\twidth: vm.width,\n\t\t\theight: vm.height\n\t\t};\n\t\tvar pt = {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\n\t\t// IE11/Edge does not like very small opacities, so snap to 0\n\t\tvar opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity;\n\n\t\t// Truthy/falsey value for empty tooltip\n\t\tvar hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n\t\tif (this._options.enabled && hasTooltipContent) {\n\t\t\tctx.save();\n\t\t\tctx.globalAlpha = opacity;\n\n\t\t\t// Draw Background\n\t\t\tthis.drawBackground(pt, vm, ctx, tooltipSize);\n\n\t\t\t// Draw Title, Body, and Footer\n\t\t\tpt.y += vm.yPadding;\n\n\t\t\t// Titles\n\t\t\tthis.drawTitle(pt, vm, ctx);\n\n\t\t\t// Body\n\t\t\tthis.drawBody(pt, vm, ctx);\n\n\t\t\t// Footer\n\t\t\tthis.drawFooter(pt, vm, ctx);\n\n\t\t\tctx.restore();\n\t\t}\n\t},\n\n\t/**\n\t * Handle an event\n\t * @private\n\t * @param {IEvent} event - The event to handle\n\t * @returns {boolean} true if the tooltip changed\n\t */\n\thandleEvent: function(e) {\n\t\tvar me = this;\n\t\tvar options = me._options;\n\t\tvar changed = false;\n\n\t\tme._lastActive = me._lastActive || [];\n\n\t\t// Find Active Elements for tooltips\n\t\tif (e.type === 'mouseout') {\n\t\t\tme._active = [];\n\t\t} else {\n\t\t\tme._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n\t\t}\n\n\t\t// Remember Last Actives\n\t\tchanged = !helpers$1.arrayEquals(me._active, me._lastActive);\n\n\t\t// Only handle target event on tooltip change\n\t\tif (changed) {\n\t\t\tme._lastActive = me._active;\n\n\t\t\tif (options.enabled || options.custom) {\n\t\t\t\tme._eventPosition = {\n\t\t\t\t\tx: e.x,\n\t\t\t\t\ty: e.y\n\t\t\t\t};\n\n\t\t\t\tme.update(true);\n\t\t\t\tme.pivot();\n\t\t\t}\n\t\t}\n\n\t\treturn changed;\n\t}\n});\n\n/**\n * @namespace Chart.Tooltip.positioners\n */\nvar positioners_1 = positioners;\n\nvar core_tooltip = exports$3;\ncore_tooltip.positioners = positioners_1;\n\nvar valueOrDefault$8 = helpers$1.valueOrDefault;\n\ncore_defaults._set('global', {\n\telements: {},\n\tevents: [\n\t\t'mousemove',\n\t\t'mouseout',\n\t\t'click',\n\t\t'touchstart',\n\t\t'touchmove'\n\t],\n\thover: {\n\t\tonHover: null,\n\t\tmode: 'nearest',\n\t\tintersect: true,\n\t\tanimationDuration: 400\n\t},\n\tonClick: null,\n\tmaintainAspectRatio: true,\n\tresponsive: true,\n\tresponsiveAnimationDuration: 0\n});\n\n/**\n * Recursively merge the given config objects representing the `scales` option\n * by incorporating scale defaults in `xAxes` and `yAxes` array items, then\n * returns a deep copy of the result, thus doesn't alter inputs.\n */\nfunction mergeScaleConfig(/* config objects ... */) {\n\treturn helpers$1.merge({}, [].slice.call(arguments), {\n\t\tmerger: function(key, target, source, options) {\n\t\t\tif (key === 'xAxes' || key === 'yAxes') {\n\t\t\t\tvar slen = source[key].length;\n\t\t\t\tvar i, type, scale;\n\n\t\t\t\tif (!target[key]) {\n\t\t\t\t\ttarget[key] = [];\n\t\t\t\t}\n\n\t\t\t\tfor (i = 0; i < slen; ++i) {\n\t\t\t\t\tscale = source[key][i];\n\t\t\t\t\ttype = valueOrDefault$8(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n\t\t\t\t\tif (i >= target[key].length) {\n\t\t\t\t\t\ttarget[key].push({});\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!target[key][i].type || (scale.type && scale.type !== target[key][i].type)) {\n\t\t\t\t\t\t// new/untyped scale or type changed: let's apply the new defaults\n\t\t\t\t\t\t// then merge source scale to correctly overwrite the defaults.\n\t\t\t\t\t\thelpers$1.merge(target[key][i], [core_scaleService.getScaleDefaults(type), scale]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// scales type are the same\n\t\t\t\t\t\thelpers$1.merge(target[key][i], scale);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\thelpers$1._merger(key, target, source, options);\n\t\t\t}\n\t\t}\n\t});\n}\n\n/**\n * Recursively merge the given config objects as the root options by handling\n * default scale options for the `scales` and `scale` properties, then returns\n * a deep copy of the result, thus doesn't alter inputs.\n */\nfunction mergeConfig(/* config objects ... */) {\n\treturn helpers$1.merge({}, [].slice.call(arguments), {\n\t\tmerger: function(key, target, source, options) {\n\t\t\tvar tval = target[key] || {};\n\t\t\tvar sval = source[key];\n\n\t\t\tif (key === 'scales') {\n\t\t\t\t// scale config merging is complex. Add our own function here for that\n\t\t\t\ttarget[key] = mergeScaleConfig(tval, sval);\n\t\t\t} else if (key === 'scale') {\n\t\t\t\t// used in polar area & radar charts since there is only one scale\n\t\t\t\ttarget[key] = helpers$1.merge(tval, [core_scaleService.getScaleDefaults(sval.type), sval]);\n\t\t\t} else {\n\t\t\t\thelpers$1._merger(key, target, source, options);\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction initConfig(config) {\n\tconfig = config || {};\n\n\t// Do NOT use mergeConfig for the data object because this method merges arrays\n\t// and so would change references to labels and datasets, preventing data updates.\n\tvar data = config.data = config.data || {};\n\tdata.datasets = data.datasets || [];\n\tdata.labels = data.labels || [];\n\n\tconfig.options = mergeConfig(\n\t\tcore_defaults.global,\n\t\tcore_defaults[config.type],\n\t\tconfig.options || {});\n\n\treturn config;\n}\n\nfunction updateConfig(chart) {\n\tvar newOptions = chart.options;\n\n\thelpers$1.each(chart.scales, function(scale) {\n\t\tcore_layouts.removeBox(chart, scale);\n\t});\n\n\tnewOptions = mergeConfig(\n\t\tcore_defaults.global,\n\t\tcore_defaults[chart.config.type],\n\t\tnewOptions);\n\n\tchart.options = chart.config.options = newOptions;\n\tchart.ensureScalesHaveIDs();\n\tchart.buildOrUpdateScales();\n\n\t// Tooltip\n\tchart.tooltip._options = newOptions.tooltips;\n\tchart.tooltip.initialize();\n}\n\nfunction positionIsHorizontal(position) {\n\treturn position === 'top' || position === 'bottom';\n}\n\nvar Chart = function(item, config) {\n\tthis.construct(item, config);\n\treturn this;\n};\n\nhelpers$1.extend(Chart.prototype, /** @lends Chart */ {\n\t/**\n\t * @private\n\t */\n\tconstruct: function(item, config) {\n\t\tvar me = this;\n\n\t\tconfig = initConfig(config);\n\n\t\tvar context = platform.acquireContext(item, config);\n\t\tvar canvas = context && context.canvas;\n\t\tvar height = canvas && canvas.height;\n\t\tvar width = canvas && canvas.width;\n\n\t\tme.id = helpers$1.uid();\n\t\tme.ctx = context;\n\t\tme.canvas = canvas;\n\t\tme.config = config;\n\t\tme.width = width;\n\t\tme.height = height;\n\t\tme.aspectRatio = height ? width / height : null;\n\t\tme.options = config.options;\n\t\tme._bufferedRender = false;\n\n\t\t/**\n\t\t * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n\t\t * the \"instance\" still need to be defined since it might be called from plugins.\n\t\t * @prop Chart#chart\n\t\t * @deprecated since version 2.6.0\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\tme.chart = me;\n\t\tme.controller = me; // chart.chart.controller #inception\n\n\t\t// Add the chart instance to the global namespace\n\t\tChart.instances[me.id] = me;\n\n\t\t// Define alias to the config data: `chart.data === chart.config.data`\n\t\tObject.defineProperty(me, 'data', {\n\t\t\tget: function() {\n\t\t\t\treturn me.config.data;\n\t\t\t},\n\t\t\tset: function(value) {\n\t\t\t\tme.config.data = value;\n\t\t\t}\n\t\t});\n\n\t\tif (!context || !canvas) {\n\t\t\t// The given item is not a compatible context2d element, let's return before finalizing\n\t\t\t// the chart initialization but after setting basic chart / controller properties that\n\t\t\t// can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n\t\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\t\tconsole.error(\"Failed to create chart: can't acquire context from the given item\");\n\t\t\treturn;\n\t\t}\n\n\t\tme.initialize();\n\t\tme.update();\n\t},\n\n\t/**\n\t * @private\n\t */\n\tinitialize: function() {\n\t\tvar me = this;\n\n\t\t// Before init plugin notification\n\t\tcore_plugins.notify(me, 'beforeInit');\n\n\t\thelpers$1.retinaScale(me, me.options.devicePixelRatio);\n\n\t\tme.bindEvents();\n\n\t\tif (me.options.responsive) {\n\t\t\t// Initial resize before chart draws (must be silent to preserve initial animations).\n\t\t\tme.resize(true);\n\t\t}\n\n\t\t// Make sure scales have IDs and are built before we build any controllers.\n\t\tme.ensureScalesHaveIDs();\n\t\tme.buildOrUpdateScales();\n\t\tme.initToolTip();\n\n\t\t// After init plugin notification\n\t\tcore_plugins.notify(me, 'afterInit');\n\n\t\treturn me;\n\t},\n\n\tclear: function() {\n\t\thelpers$1.canvas.clear(this);\n\t\treturn this;\n\t},\n\n\tstop: function() {\n\t\t// Stops any current animation loop occurring\n\t\tcore_animations.cancelAnimation(this);\n\t\treturn this;\n\t},\n\n\tresize: function(silent) {\n\t\tvar me = this;\n\t\tvar options = me.options;\n\t\tvar canvas = me.canvas;\n\t\tvar aspectRatio = (options.maintainAspectRatio && me.aspectRatio) || null;\n\n\t\t// the canvas render width and height will be casted to integers so make sure that\n\t\t// the canvas display style uses the same integer values to avoid blurring effect.\n\n\t\t// Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\t\tvar newWidth = Math.max(0, Math.floor(helpers$1.getMaximumWidth(canvas)));\n\t\tvar newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers$1.getMaximumHeight(canvas)));\n\n\t\tif (me.width === newWidth && me.height === newHeight) {\n\t\t\treturn;\n\t\t}\n\n\t\tcanvas.width = me.width = newWidth;\n\t\tcanvas.height = me.height = newHeight;\n\t\tcanvas.style.width = newWidth + 'px';\n\t\tcanvas.style.height = newHeight + 'px';\n\n\t\thelpers$1.retinaScale(me, options.devicePixelRatio);\n\n\t\tif (!silent) {\n\t\t\t// Notify any plugins about the resize\n\t\t\tvar newSize = {width: newWidth, height: newHeight};\n\t\t\tcore_plugins.notify(me, 'resize', [newSize]);\n\n\t\t\t// Notify of resize\n\t\t\tif (options.onResize) {\n\t\t\t\toptions.onResize(me, newSize);\n\t\t\t}\n\n\t\t\tme.stop();\n\t\t\tme.update({\n\t\t\t\tduration: options.responsiveAnimationDuration\n\t\t\t});\n\t\t}\n\t},\n\n\tensureScalesHaveIDs: function() {\n\t\tvar options = this.options;\n\t\tvar scalesOptions = options.scales || {};\n\t\tvar scaleOptions = options.scale;\n\n\t\thelpers$1.each(scalesOptions.xAxes, function(xAxisOptions, index) {\n\t\t\txAxisOptions.id = xAxisOptions.id || ('x-axis-' + index);\n\t\t});\n\n\t\thelpers$1.each(scalesOptions.yAxes, function(yAxisOptions, index) {\n\t\t\tyAxisOptions.id = yAxisOptions.id || ('y-axis-' + index);\n\t\t});\n\n\t\tif (scaleOptions) {\n\t\t\tscaleOptions.id = scaleOptions.id || 'scale';\n\t\t}\n\t},\n\n\t/**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n\tbuildOrUpdateScales: function() {\n\t\tvar me = this;\n\t\tvar options = me.options;\n\t\tvar scales = me.scales || {};\n\t\tvar items = [];\n\t\tvar updated = Object.keys(scales).reduce(function(obj, id) {\n\t\t\tobj[id] = false;\n\t\t\treturn obj;\n\t\t}, {});\n\n\t\tif (options.scales) {\n\t\t\titems = items.concat(\n\t\t\t\t(options.scales.xAxes || []).map(function(xAxisOptions) {\n\t\t\t\t\treturn {options: xAxisOptions, dtype: 'category', dposition: 'bottom'};\n\t\t\t\t}),\n\t\t\t\t(options.scales.yAxes || []).map(function(yAxisOptions) {\n\t\t\t\t\treturn {options: yAxisOptions, dtype: 'linear', dposition: 'left'};\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\n\t\tif (options.scale) {\n\t\t\titems.push({\n\t\t\t\toptions: options.scale,\n\t\t\t\tdtype: 'radialLinear',\n\t\t\t\tisDefault: true,\n\t\t\t\tdposition: 'chartArea'\n\t\t\t});\n\t\t}\n\n\t\thelpers$1.each(items, function(item) {\n\t\t\tvar scaleOptions = item.options;\n\t\t\tvar id = scaleOptions.id;\n\t\t\tvar scaleType = valueOrDefault$8(scaleOptions.type, item.dtype);\n\n\t\t\tif (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n\t\t\t\tscaleOptions.position = item.dposition;\n\t\t\t}\n\n\t\t\tupdated[id] = true;\n\t\t\tvar scale = null;\n\t\t\tif (id in scales && scales[id].type === scaleType) {\n\t\t\t\tscale = scales[id];\n\t\t\t\tscale.options = scaleOptions;\n\t\t\t\tscale.ctx = me.ctx;\n\t\t\t\tscale.chart = me;\n\t\t\t} else {\n\t\t\t\tvar scaleClass = core_scaleService.getScaleConstructor(scaleType);\n\t\t\t\tif (!scaleClass) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tscale = new scaleClass({\n\t\t\t\t\tid: id,\n\t\t\t\t\ttype: scaleType,\n\t\t\t\t\toptions: scaleOptions,\n\t\t\t\t\tctx: me.ctx,\n\t\t\t\t\tchart: me\n\t\t\t\t});\n\t\t\t\tscales[scale.id] = scale;\n\t\t\t}\n\n\t\t\tscale.mergeTicksOptions();\n\n\t\t\t// TODO(SB): I think we should be able to remove this custom case (options.scale)\n\t\t\t// and consider it as a regular scale part of the \"scales\"\" map only! This would\n\t\t\t// make the logic easier and remove some useless? custom code.\n\t\t\tif (item.isDefault) {\n\t\t\t\tme.scale = scale;\n\t\t\t}\n\t\t});\n\t\t// clear up discarded scales\n\t\thelpers$1.each(updated, function(hasUpdated, id) {\n\t\t\tif (!hasUpdated) {\n\t\t\t\tdelete scales[id];\n\t\t\t}\n\t\t});\n\n\t\tme.scales = scales;\n\n\t\tcore_scaleService.addScalesToLayout(this);\n\t},\n\n\tbuildOrUpdateControllers: function() {\n\t\tvar me = this;\n\t\tvar newControllers = [];\n\n\t\thelpers$1.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\tvar meta = me.getDatasetMeta(datasetIndex);\n\t\t\tvar type = dataset.type || me.config.type;\n\n\t\t\tif (meta.type && meta.type !== type) {\n\t\t\t\tme.destroyDatasetMeta(datasetIndex);\n\t\t\t\tmeta = me.getDatasetMeta(datasetIndex);\n\t\t\t}\n\t\t\tmeta.type = type;\n\n\t\t\tif (meta.controller) {\n\t\t\t\tmeta.controller.updateIndex(datasetIndex);\n\t\t\t\tmeta.controller.linkScales();\n\t\t\t} else {\n\t\t\t\tvar ControllerClass = controllers[meta.type];\n\t\t\t\tif (ControllerClass === undefined) {\n\t\t\t\t\tthrow new Error('\"' + meta.type + '\" is not a chart type.');\n\t\t\t\t}\n\n\t\t\t\tmeta.controller = new ControllerClass(me, datasetIndex);\n\t\t\t\tnewControllers.push(meta.controller);\n\t\t\t}\n\t\t}, me);\n\n\t\treturn newControllers;\n\t},\n\n\t/**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n\tresetElements: function() {\n\t\tvar me = this;\n\t\thelpers$1.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\tme.getDatasetMeta(datasetIndex).controller.reset();\n\t\t}, me);\n\t},\n\n\t/**\n\t* Resets the chart back to it's state before the initial animation\n\t*/\n\treset: function() {\n\t\tthis.resetElements();\n\t\tthis.tooltip.initialize();\n\t},\n\n\tupdate: function(config) {\n\t\tvar me = this;\n\n\t\tif (!config || typeof config !== 'object') {\n\t\t\t// backwards compatibility\n\t\t\tconfig = {\n\t\t\t\tduration: config,\n\t\t\t\tlazy: arguments[1]\n\t\t\t};\n\t\t}\n\n\t\tupdateConfig(me);\n\n\t\t// plugins options references might have change, let's invalidate the cache\n\t\t// https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\t\tcore_plugins._invalidate(me);\n\n\t\tif (core_plugins.notify(me, 'beforeUpdate') === false) {\n\t\t\treturn;\n\t\t}\n\n\t\t// In case the entire data object changed\n\t\tme.tooltip._data = me.data;\n\n\t\t// Make sure dataset controllers are updated and new controllers are reset\n\t\tvar newControllers = me.buildOrUpdateControllers();\n\n\t\t// Make sure all dataset controllers have correct meta data counts\n\t\thelpers$1.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\tme.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n\t\t}, me);\n\n\t\tme.updateLayout();\n\n\t\t// Can only reset the new controllers after the scales have been updated\n\t\tif (me.options.animation && me.options.animation.duration) {\n\t\t\thelpers$1.each(newControllers, function(controller) {\n\t\t\t\tcontroller.reset();\n\t\t\t});\n\t\t}\n\n\t\tme.updateDatasets();\n\n\t\t// Need to reset tooltip in case it is displayed with elements that are removed\n\t\t// after update.\n\t\tme.tooltip.initialize();\n\n\t\t// Last active contains items that were previously in the tooltip.\n\t\t// When we reset the tooltip, we need to clear it\n\t\tme.lastActive = [];\n\n\t\t// Do this before render so that any plugins that need final scale updates can use it\n\t\tcore_plugins.notify(me, 'afterUpdate');\n\n\t\tif (me._bufferedRender) {\n\t\t\tme._bufferedRequest = {\n\t\t\t\tduration: config.duration,\n\t\t\t\teasing: config.easing,\n\t\t\t\tlazy: config.lazy\n\t\t\t};\n\t\t} else {\n\t\t\tme.render(config);\n\t\t}\n\t},\n\n\t/**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n\tupdateLayout: function() {\n\t\tvar me = this;\n\n\t\tif (core_plugins.notify(me, 'beforeLayout') === false) {\n\t\t\treturn;\n\t\t}\n\n\t\tcore_layouts.update(this, this.width, this.height);\n\n\t\t/**\n\t\t * Provided for backward compatibility, use `afterLayout` instead.\n\t\t * @method IPlugin#afterScaleUpdate\n\t\t * @deprecated since version 2.5.0\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\tcore_plugins.notify(me, 'afterScaleUpdate');\n\t\tcore_plugins.notify(me, 'afterLayout');\n\t},\n\n\t/**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n\tupdateDatasets: function() {\n\t\tvar me = this;\n\n\t\tif (core_plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\tme.updateDataset(i);\n\t\t}\n\n\t\tcore_plugins.notify(me, 'afterDatasetsUpdate');\n\t},\n\n\t/**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n\tupdateDataset: function(index) {\n\t\tvar me = this;\n\t\tvar meta = me.getDatasetMeta(index);\n\t\tvar args = {\n\t\t\tmeta: meta,\n\t\t\tindex: index\n\t\t};\n\n\t\tif (core_plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\tmeta.controller.update();\n\n\t\tcore_plugins.notify(me, 'afterDatasetUpdate', [args]);\n\t},\n\n\trender: function(config) {\n\t\tvar me = this;\n\n\t\tif (!config || typeof config !== 'object') {\n\t\t\t// backwards compatibility\n\t\t\tconfig = {\n\t\t\t\tduration: config,\n\t\t\t\tlazy: arguments[1]\n\t\t\t};\n\t\t}\n\n\t\tvar animationOptions = me.options.animation;\n\t\tvar duration = valueOrDefault$8(config.duration, animationOptions && animationOptions.duration);\n\t\tvar lazy = config.lazy;\n\n\t\tif (core_plugins.notify(me, 'beforeRender') === false) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar onComplete = function(animation) {\n\t\t\tcore_plugins.notify(me, 'afterRender');\n\t\t\thelpers$1.callback(animationOptions && animationOptions.onComplete, [animation], me);\n\t\t};\n\n\t\tif (animationOptions && duration) {\n\t\t\tvar animation = new core_animation({\n\t\t\t\tnumSteps: duration / 16.66, // 60 fps\n\t\t\t\teasing: config.easing || animationOptions.easing,\n\n\t\t\t\trender: function(chart, animationObject) {\n\t\t\t\t\tvar easingFunction = helpers$1.easing.effects[animationObject.easing];\n\t\t\t\t\tvar currentStep = animationObject.currentStep;\n\t\t\t\t\tvar stepDecimal = currentStep / animationObject.numSteps;\n\n\t\t\t\t\tchart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n\t\t\t\t},\n\n\t\t\t\tonAnimationProgress: animationOptions.onProgress,\n\t\t\t\tonAnimationComplete: onComplete\n\t\t\t});\n\n\t\t\tcore_animations.addAnimation(me, animation, duration, lazy);\n\t\t} else {\n\t\t\tme.draw();\n\n\t\t\t// See https://github.com/chartjs/Chart.js/issues/3781\n\t\t\tonComplete(new core_animation({numSteps: 0, chart: me}));\n\t\t}\n\n\t\treturn me;\n\t},\n\n\tdraw: function(easingValue) {\n\t\tvar me = this;\n\n\t\tme.clear();\n\n\t\tif (helpers$1.isNullOrUndef(easingValue)) {\n\t\t\teasingValue = 1;\n\t\t}\n\n\t\tme.transition(easingValue);\n\n\t\tif (me.width <= 0 || me.height <= 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (core_plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Draw all the scales\n\t\thelpers$1.each(me.boxes, function(box) {\n\t\t\tbox.draw(me.chartArea);\n\t\t}, me);\n\n\t\tme.drawDatasets(easingValue);\n\t\tme._drawTooltip(easingValue);\n\n\t\tcore_plugins.notify(me, 'afterDraw', [easingValue]);\n\t},\n\n\t/**\n\t * @private\n\t */\n\ttransition: function(easingValue) {\n\t\tvar me = this;\n\n\t\tfor (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\tme.getDatasetMeta(i).controller.transition(easingValue);\n\t\t\t}\n\t\t}\n\n\t\tme.tooltip.transition(easingValue);\n\t},\n\n\t/**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n\tdrawDatasets: function(easingValue) {\n\t\tvar me = this;\n\n\t\tif (core_plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Draw datasets reversed to support proper line stacking\n\t\tfor (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\tme.drawDataset(i, easingValue);\n\t\t\t}\n\t\t}\n\n\t\tcore_plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n\t},\n\n\t/**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n\tdrawDataset: function(index, easingValue) {\n\t\tvar me = this;\n\t\tvar meta = me.getDatasetMeta(index);\n\t\tvar args = {\n\t\t\tmeta: meta,\n\t\t\tindex: index,\n\t\t\teasingValue: easingValue\n\t\t};\n\n\t\tif (core_plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\tmeta.controller.draw(easingValue);\n\n\t\tcore_plugins.notify(me, 'afterDatasetDraw', [args]);\n\t},\n\n\t/**\n\t * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n\t * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n\t * @private\n\t */\n\t_drawTooltip: function(easingValue) {\n\t\tvar me = this;\n\t\tvar tooltip = me.tooltip;\n\t\tvar args = {\n\t\t\ttooltip: tooltip,\n\t\t\teasingValue: easingValue\n\t\t};\n\n\t\tif (core_plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\ttooltip.draw();\n\n\t\tcore_plugins.notify(me, 'afterTooltipDraw', [args]);\n\t},\n\n\t/**\n\t * Get the single element that was clicked on\n\t * @return An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n\t */\n\tgetElementAtEvent: function(e) {\n\t\treturn core_interaction.modes.single(this, e);\n\t},\n\n\tgetElementsAtEvent: function(e) {\n\t\treturn core_interaction.modes.label(this, e, {intersect: true});\n\t},\n\n\tgetElementsAtXAxis: function(e) {\n\t\treturn core_interaction.modes['x-axis'](this, e, {intersect: true});\n\t},\n\n\tgetElementsAtEventForMode: function(e, mode, options) {\n\t\tvar method = core_interaction.modes[mode];\n\t\tif (typeof method === 'function') {\n\t\t\treturn method(this, e, options);\n\t\t}\n\n\t\treturn [];\n\t},\n\n\tgetDatasetAtEvent: function(e) {\n\t\treturn core_interaction.modes.dataset(this, e, {intersect: true});\n\t},\n\n\tgetDatasetMeta: function(datasetIndex) {\n\t\tvar me = this;\n\t\tvar dataset = me.data.datasets[datasetIndex];\n\t\tif (!dataset._meta) {\n\t\t\tdataset._meta = {};\n\t\t}\n\n\t\tvar meta = dataset._meta[me.id];\n\t\tif (!meta) {\n\t\t\tmeta = dataset._meta[me.id] = {\n\t\t\t\ttype: null,\n\t\t\t\tdata: [],\n\t\t\t\tdataset: null,\n\t\t\t\tcontroller: null,\n\t\t\t\thidden: null,\t\t\t// See isDatasetVisible() comment\n\t\t\t\txAxisID: null,\n\t\t\t\tyAxisID: null\n\t\t\t};\n\t\t}\n\n\t\treturn meta;\n\t},\n\n\tgetVisibleDatasetCount: function() {\n\t\tvar count = 0;\n\t\tfor (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n\t\t\tif (this.isDatasetVisible(i)) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\treturn count;\n\t},\n\n\tisDatasetVisible: function(datasetIndex) {\n\t\tvar meta = this.getDatasetMeta(datasetIndex);\n\n\t\t// meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n\t\t// the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\t\treturn typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n\t},\n\n\tgenerateLegend: function() {\n\t\treturn this.options.legendCallback(this);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tdestroyDatasetMeta: function(datasetIndex) {\n\t\tvar id = this.id;\n\t\tvar dataset = this.data.datasets[datasetIndex];\n\t\tvar meta = dataset._meta && dataset._meta[id];\n\n\t\tif (meta) {\n\t\t\tmeta.controller.destroy();\n\t\t\tdelete dataset._meta[id];\n\t\t}\n\t},\n\n\tdestroy: function() {\n\t\tvar me = this;\n\t\tvar canvas = me.canvas;\n\t\tvar i, ilen;\n\n\t\tme.stop();\n\n\t\t// dataset controllers need to cleanup associated data\n\t\tfor (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\tme.destroyDatasetMeta(i);\n\t\t}\n\n\t\tif (canvas) {\n\t\t\tme.unbindEvents();\n\t\t\thelpers$1.canvas.clear(me);\n\t\t\tplatform.releaseContext(me.ctx);\n\t\t\tme.canvas = null;\n\t\t\tme.ctx = null;\n\t\t}\n\n\t\tcore_plugins.notify(me, 'destroy');\n\n\t\tdelete Chart.instances[me.id];\n\t},\n\n\ttoBase64Image: function() {\n\t\treturn this.canvas.toDataURL.apply(this.canvas, arguments);\n\t},\n\n\tinitToolTip: function() {\n\t\tvar me = this;\n\t\tme.tooltip = new core_tooltip({\n\t\t\t_chart: me,\n\t\t\t_chartInstance: me, // deprecated, backward compatibility\n\t\t\t_data: me.data,\n\t\t\t_options: me.options.tooltips\n\t\t}, me);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tbindEvents: function() {\n\t\tvar me = this;\n\t\tvar listeners = me._listeners = {};\n\t\tvar listener = function() {\n\t\t\tme.eventHandler.apply(me, arguments);\n\t\t};\n\n\t\thelpers$1.each(me.options.events, function(type) {\n\t\t\tplatform.addEventListener(me, type, listener);\n\t\t\tlisteners[type] = listener;\n\t\t});\n\n\t\t// Elements used to detect size change should not be injected for non responsive charts.\n\t\t// See https://github.com/chartjs/Chart.js/issues/2210\n\t\tif (me.options.responsive) {\n\t\t\tlistener = function() {\n\t\t\t\tme.resize();\n\t\t\t};\n\n\t\t\tplatform.addEventListener(me, 'resize', listener);\n\t\t\tlisteners.resize = listener;\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tunbindEvents: function() {\n\t\tvar me = this;\n\t\tvar listeners = me._listeners;\n\t\tif (!listeners) {\n\t\t\treturn;\n\t\t}\n\n\t\tdelete me._listeners;\n\t\thelpers$1.each(listeners, function(listener, type) {\n\t\t\tplatform.removeEventListener(me, type, listener);\n\t\t});\n\t},\n\n\tupdateHoverStyle: function(elements, mode, enabled) {\n\t\tvar method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n\t\tvar element, i, ilen;\n\n\t\tfor (i = 0, ilen = elements.length; i < ilen; ++i) {\n\t\t\telement = elements[i];\n\t\t\tif (element) {\n\t\t\t\tthis.getDatasetMeta(element._datasetIndex).controller[method](element);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\teventHandler: function(e) {\n\t\tvar me = this;\n\t\tvar tooltip = me.tooltip;\n\n\t\tif (core_plugins.notify(me, 'beforeEvent', [e]) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Buffer any update calls so that renders do not occur\n\t\tme._bufferedRender = true;\n\t\tme._bufferedRequest = null;\n\n\t\tvar changed = me.handleEvent(e);\n\t\t// for smooth tooltip animations issue #4989\n\t\t// the tooltip should be the source of change\n\t\t// Animation check workaround:\n\t\t// tooltip._start will be null when tooltip isn't animating\n\t\tif (tooltip) {\n\t\t\tchanged = tooltip._start\n\t\t\t\t? tooltip.handleEvent(e)\n\t\t\t\t: changed | tooltip.handleEvent(e);\n\t\t}\n\n\t\tcore_plugins.notify(me, 'afterEvent', [e]);\n\n\t\tvar bufferedRequest = me._bufferedRequest;\n\t\tif (bufferedRequest) {\n\t\t\t// If we have an update that was triggered, we need to do a normal render\n\t\t\tme.render(bufferedRequest);\n\t\t} else if (changed && !me.animating) {\n\t\t\t// If entering, leaving, or changing elements, animate the change via pivot\n\t\t\tme.stop();\n\n\t\t\t// We only need to render at this point. Updating will cause scales to be\n\t\t\t// recomputed generating flicker & using more memory than necessary.\n\t\t\tme.render({\n\t\t\t\tduration: me.options.hover.animationDuration,\n\t\t\t\tlazy: true\n\t\t\t});\n\t\t}\n\n\t\tme._bufferedRender = false;\n\t\tme._bufferedRequest = null;\n\n\t\treturn me;\n\t},\n\n\t/**\n\t * Handle an event\n\t * @private\n\t * @param {IEvent} event the event to handle\n\t * @return {boolean} true if the chart needs to re-render\n\t */\n\thandleEvent: function(e) {\n\t\tvar me = this;\n\t\tvar options = me.options || {};\n\t\tvar hoverOptions = options.hover;\n\t\tvar changed = false;\n\n\t\tme.lastActive = me.lastActive || [];\n\n\t\t// Find Active Elements for hover and tooltips\n\t\tif (e.type === 'mouseout') {\n\t\t\tme.active = [];\n\t\t} else {\n\t\t\tme.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n\t\t}\n\n\t\t// Invoke onHover hook\n\t\t// Need to call with native event here to not break backwards compatibility\n\t\thelpers$1.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n\t\tif (e.type === 'mouseup' || e.type === 'click') {\n\t\t\tif (options.onClick) {\n\t\t\t\t// Use e.native here for backwards compatibility\n\t\t\t\toptions.onClick.call(me, e.native, me.active);\n\t\t\t}\n\t\t}\n\n\t\t// Remove styling for last active (even if it may still be active)\n\t\tif (me.lastActive.length) {\n\t\t\tme.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n\t\t}\n\n\t\t// Built in hover styling\n\t\tif (me.active.length && hoverOptions.mode) {\n\t\t\tme.updateHoverStyle(me.active, hoverOptions.mode, true);\n\t\t}\n\n\t\tchanged = !helpers$1.arrayEquals(me.active, me.lastActive);\n\n\t\t// Remember Last Actives\n\t\tme.lastActive = me.active;\n\n\t\treturn changed;\n\t}\n});\n\n/**\n * NOTE(SB) We actually don't use this container anymore but we need to keep it\n * for backward compatibility. Though, it can still be useful for plugins that\n * would need to work on multiple charts?!\n */\nChart.instances = {};\n\nvar core_controller = Chart;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart instead.\n * @class Chart.Controller\n * @deprecated since version 2.6\n * @todo remove at version 3\n * @private\n */\nChart.Controller = Chart;\n\n/**\n * Provided for backward compatibility, not available anymore.\n * @namespace Chart\n * @deprecated since version 2.8\n * @todo remove at version 3\n * @private\n */\nChart.types = {};\n\n/**\n * Provided for backward compatibility, not available anymore.\n * @namespace Chart.helpers.configMerge\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\nhelpers$1.configMerge = mergeConfig;\n\n/**\n * Provided for backward compatibility, not available anymore.\n * @namespace Chart.helpers.scaleMerge\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\nhelpers$1.scaleMerge = mergeScaleConfig;\n\nvar core_helpers = function() {\n\n\t// -- Basic js utility methods\n\n\thelpers$1.where = function(collection, filterCallback) {\n\t\tif (helpers$1.isArray(collection) && Array.prototype.filter) {\n\t\t\treturn collection.filter(filterCallback);\n\t\t}\n\t\tvar filtered = [];\n\n\t\thelpers$1.each(collection, function(item) {\n\t\t\tif (filterCallback(item)) {\n\t\t\t\tfiltered.push(item);\n\t\t\t}\n\t\t});\n\n\t\treturn filtered;\n\t};\n\thelpers$1.findIndex = Array.prototype.findIndex ?\n\t\tfunction(array, callback, scope) {\n\t\t\treturn array.findIndex(callback, scope);\n\t\t} :\n\t\tfunction(array, callback, scope) {\n\t\t\tscope = scope === undefined ? array : scope;\n\t\t\tfor (var i = 0, ilen = array.length; i < ilen; ++i) {\n\t\t\t\tif (callback.call(scope, array[i], i, array)) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t};\n\thelpers$1.findNextWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to start of the array\n\t\tif (helpers$1.isNullOrUndef(startIndex)) {\n\t\t\tstartIndex = -1;\n\t\t}\n\t\tfor (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\thelpers$1.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to end of the array\n\t\tif (helpers$1.isNullOrUndef(startIndex)) {\n\t\t\tstartIndex = arrayToSearch.length;\n\t\t}\n\t\tfor (var i = startIndex - 1; i >= 0; i--) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\n\t// -- Math methods\n\thelpers$1.isNumber = function(n) {\n\t\treturn !isNaN(parseFloat(n)) && isFinite(n);\n\t};\n\thelpers$1.almostEquals = function(x, y, epsilon) {\n\t\treturn Math.abs(x - y) < epsilon;\n\t};\n\thelpers$1.almostWhole = function(x, epsilon) {\n\t\tvar rounded = Math.round(x);\n\t\treturn (((rounded - epsilon) < x) && ((rounded + epsilon) > x));\n\t};\n\thelpers$1.max = function(array) {\n\t\treturn array.reduce(function(max, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.max(max, value);\n\t\t\t}\n\t\t\treturn max;\n\t\t}, Number.NEGATIVE_INFINITY);\n\t};\n\thelpers$1.min = function(array) {\n\t\treturn array.reduce(function(min, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.min(min, value);\n\t\t\t}\n\t\t\treturn min;\n\t\t}, Number.POSITIVE_INFINITY);\n\t};\n\thelpers$1.sign = Math.sign ?\n\t\tfunction(x) {\n\t\t\treturn Math.sign(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tx = +x; // convert to a number\n\t\t\tif (x === 0 || isNaN(x)) {\n\t\t\t\treturn x;\n\t\t\t}\n\t\t\treturn x > 0 ? 1 : -1;\n\t\t};\n\thelpers$1.log10 = Math.log10 ?\n\t\tfunction(x) {\n\t\t\treturn Math.log10(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tvar exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n\t\t\t// Check for whole powers of 10,\n\t\t\t// which due to floating point rounding error should be corrected.\n\t\t\tvar powerOf10 = Math.round(exponent);\n\t\t\tvar isPowerOf10 = x === Math.pow(10, powerOf10);\n\n\t\t\treturn isPowerOf10 ? powerOf10 : exponent;\n\t\t};\n\thelpers$1.toRadians = function(degrees) {\n\t\treturn degrees * (Math.PI / 180);\n\t};\n\thelpers$1.toDegrees = function(radians) {\n\t\treturn radians * (180 / Math.PI);\n\t};\n\n\t/**\n\t * Returns the number of decimal places\n\t * i.e. the number of digits after the decimal point, of the value of this Number.\n\t * @param {number} x - A number.\n\t * @returns {number} The number of decimal places.\n\t * @private\n\t */\n\thelpers$1._decimalPlaces = function(x) {\n\t\tif (!helpers$1.isFinite(x)) {\n\t\t\treturn;\n\t\t}\n\t\tvar e = 1;\n\t\tvar p = 0;\n\t\twhile (Math.round(x * e) / e !== x) {\n\t\t\te *= 10;\n\t\t\tp++;\n\t\t}\n\t\treturn p;\n\t};\n\n\t// Gets the angle from vertical upright to the point about a centre.\n\thelpers$1.getAngleFromPoint = function(centrePoint, anglePoint) {\n\t\tvar distanceFromXCenter = anglePoint.x - centrePoint.x;\n\t\tvar distanceFromYCenter = anglePoint.y - centrePoint.y;\n\t\tvar radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n\t\tvar angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n\t\tif (angle < (-0.5 * Math.PI)) {\n\t\t\tangle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n\t\t}\n\n\t\treturn {\n\t\t\tangle: angle,\n\t\t\tdistance: radialDistanceFromCenter\n\t\t};\n\t};\n\thelpers$1.distanceBetweenPoints = function(pt1, pt2) {\n\t\treturn Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n\t};\n\n\t/**\n\t * Provided for backward compatibility, not available anymore\n\t * @function Chart.helpers.aliasPixel\n\t * @deprecated since version 2.8.0\n\t * @todo remove at version 3\n\t */\n\thelpers$1.aliasPixel = function(pixelWidth) {\n\t\treturn (pixelWidth % 2 === 0) ? 0 : 0.5;\n\t};\n\n\t/**\n\t * Returns the aligned pixel value to avoid anti-aliasing blur\n\t * @param {Chart} chart - The chart instance.\n\t * @param {number} pixel - A pixel value.\n\t * @param {number} width - The width of the element.\n\t * @returns {number} The aligned pixel value.\n\t * @private\n\t */\n\thelpers$1._alignPixel = function(chart, pixel, width) {\n\t\tvar devicePixelRatio = chart.currentDevicePixelRatio;\n\t\tvar halfWidth = width / 2;\n\t\treturn Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n\t};\n\n\thelpers$1.splineCurve = function(firstPoint, middlePoint, afterPoint, t) {\n\t\t// Props to Rob Spencer at scaled innovation for his post on splining between points\n\t\t// http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n\t\t// This function must also respect \"skipped\" points\n\n\t\tvar previous = firstPoint.skip ? middlePoint : firstPoint;\n\t\tvar current = middlePoint;\n\t\tvar next = afterPoint.skip ? middlePoint : afterPoint;\n\n\t\tvar d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n\t\tvar d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n\n\t\tvar s01 = d01 / (d01 + d12);\n\t\tvar s12 = d12 / (d01 + d12);\n\n\t\t// If all points are the same, s01 & s02 will be inf\n\t\ts01 = isNaN(s01) ? 0 : s01;\n\t\ts12 = isNaN(s12) ? 0 : s12;\n\n\t\tvar fa = t * s01; // scaling factor for triangle Ta\n\t\tvar fb = t * s12;\n\n\t\treturn {\n\t\t\tprevious: {\n\t\t\t\tx: current.x - fa * (next.x - previous.x),\n\t\t\t\ty: current.y - fa * (next.y - previous.y)\n\t\t\t},\n\t\t\tnext: {\n\t\t\t\tx: current.x + fb * (next.x - previous.x),\n\t\t\t\ty: current.y + fb * (next.y - previous.y)\n\t\t\t}\n\t\t};\n\t};\n\thelpers$1.EPSILON = Number.EPSILON || 1e-14;\n\thelpers$1.splineCurveMonotone = function(points) {\n\t\t// This function calculates Bézier control points in a similar way than |splineCurve|,\n\t\t// but preserves monotonicity of the provided data and ensures no local extremums are added\n\t\t// between the dataset discrete points due to the interpolation.\n\t\t// See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n\n\t\tvar pointsWithTangents = (points || []).map(function(point) {\n\t\t\treturn {\n\t\t\t\tmodel: point._model,\n\t\t\t\tdeltaK: 0,\n\t\t\t\tmK: 0\n\t\t\t};\n\t\t});\n\n\t\t// Calculate slopes (deltaK) and initialize tangents (mK)\n\t\tvar pointsLen = pointsWithTangents.length;\n\t\tvar i, pointBefore, pointCurrent, pointAfter;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tvar slopeDeltaX = (pointAfter.model.x - pointCurrent.model.x);\n\n\t\t\t\t// In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\t\t\t\tpointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n\t\t\t}\n\n\t\t\tif (!pointBefore || pointBefore.model.skip) {\n\t\t\t\tpointCurrent.mK = pointCurrent.deltaK;\n\t\t\t} else if (!pointAfter || pointAfter.model.skip) {\n\t\t\t\tpointCurrent.mK = pointBefore.deltaK;\n\t\t\t} else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n\t\t\t\tpointCurrent.mK = 0;\n\t\t\t} else {\n\t\t\t\tpointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n\t\t\t}\n\t\t}\n\n\t\t// Adjust tangents to ensure monotonic properties\n\t\tvar alphaK, betaK, tauK, squaredMagnitude;\n\t\tfor (i = 0; i < pointsLen - 1; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tpointAfter = pointsWithTangents[i + 1];\n\t\t\tif (pointCurrent.model.skip || pointAfter.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (helpers$1.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n\t\t\t\tpointCurrent.mK = pointAfter.mK = 0;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\talphaK = pointCurrent.mK / pointCurrent.deltaK;\n\t\t\tbetaK = pointAfter.mK / pointCurrent.deltaK;\n\t\t\tsquaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\t\t\tif (squaredMagnitude <= 9) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\ttauK = 3 / Math.sqrt(squaredMagnitude);\n\t\t\tpointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n\t\t\tpointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n\t\t}\n\n\t\t// Compute control points\n\t\tvar deltaX;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointBefore && !pointBefore.model.skip) {\n\t\t\t\tdeltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n\t\t\t\tpointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tdeltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n\t\t\t\tpointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t}\n\t};\n\thelpers$1.nextItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index >= collection.length - 1 ? collection[0] : collection[index + 1];\n\t\t}\n\t\treturn index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n\t};\n\thelpers$1.previousItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n\t\t}\n\t\treturn index <= 0 ? collection[0] : collection[index - 1];\n\t};\n\t// Implementation of the nice number algorithm used in determining where axis labels will go\n\thelpers$1.niceNum = function(range, round) {\n\t\tvar exponent = Math.floor(helpers$1.log10(range));\n\t\tvar fraction = range / Math.pow(10, exponent);\n\t\tvar niceFraction;\n\n\t\tif (round) {\n\t\t\tif (fraction < 1.5) {\n\t\t\t\tniceFraction = 1;\n\t\t\t} else if (fraction < 3) {\n\t\t\t\tniceFraction = 2;\n\t\t\t} else if (fraction < 7) {\n\t\t\t\tniceFraction = 5;\n\t\t\t} else {\n\t\t\t\tniceFraction = 10;\n\t\t\t}\n\t\t} else if (fraction <= 1.0) {\n\t\t\tniceFraction = 1;\n\t\t} else if (fraction <= 2) {\n\t\t\tniceFraction = 2;\n\t\t} else if (fraction <= 5) {\n\t\t\tniceFraction = 5;\n\t\t} else {\n\t\t\tniceFraction = 10;\n\t\t}\n\n\t\treturn niceFraction * Math.pow(10, exponent);\n\t};\n\t// Request animation polyfill - https://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\thelpers$1.requestAnimFrame = (function() {\n\t\tif (typeof window === 'undefined') {\n\t\t\treturn function(callback) {\n\t\t\t\tcallback();\n\t\t\t};\n\t\t}\n\t\treturn window.requestAnimationFrame ||\n\t\t\twindow.webkitRequestAnimationFrame ||\n\t\t\twindow.mozRequestAnimationFrame ||\n\t\t\twindow.oRequestAnimationFrame ||\n\t\t\twindow.msRequestAnimationFrame ||\n\t\t\tfunction(callback) {\n\t\t\t\treturn window.setTimeout(callback, 1000 / 60);\n\t\t\t};\n\t}());\n\t// -- DOM methods\n\thelpers$1.getRelativePosition = function(evt, chart) {\n\t\tvar mouseX, mouseY;\n\t\tvar e = evt.originalEvent || evt;\n\t\tvar canvas = evt.target || evt.srcElement;\n\t\tvar boundingRect = canvas.getBoundingClientRect();\n\n\t\tvar touches = e.touches;\n\t\tif (touches && touches.length > 0) {\n\t\t\tmouseX = touches[0].clientX;\n\t\t\tmouseY = touches[0].clientY;\n\n\t\t} else {\n\t\t\tmouseX = e.clientX;\n\t\t\tmouseY = e.clientY;\n\t\t}\n\n\t\t// Scale mouse coordinates into canvas coordinates\n\t\t// by following the pattern laid out by 'jerryj' in the comments of\n\t\t// https://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\t\tvar paddingLeft = parseFloat(helpers$1.getStyle(canvas, 'padding-left'));\n\t\tvar paddingTop = parseFloat(helpers$1.getStyle(canvas, 'padding-top'));\n\t\tvar paddingRight = parseFloat(helpers$1.getStyle(canvas, 'padding-right'));\n\t\tvar paddingBottom = parseFloat(helpers$1.getStyle(canvas, 'padding-bottom'));\n\t\tvar width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n\t\tvar height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom;\n\n\t\t// We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n\t\t// the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\t\tmouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / (width) * canvas.width / chart.currentDevicePixelRatio);\n\t\tmouseY = Math.round((mouseY - boundingRect.top - paddingTop) / (height) * canvas.height / chart.currentDevicePixelRatio);\n\n\t\treturn {\n\t\t\tx: mouseX,\n\t\t\ty: mouseY\n\t\t};\n\n\t};\n\n\t// Private helper function to convert max-width/max-height values that may be percentages into a number\n\tfunction parseMaxStyle(styleValue, node, parentProperty) {\n\t\tvar valueInPixels;\n\t\tif (typeof styleValue === 'string') {\n\t\t\tvalueInPixels = parseInt(styleValue, 10);\n\n\t\t\tif (styleValue.indexOf('%') !== -1) {\n\t\t\t\t// percentage * size in dimension\n\t\t\t\tvalueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n\t\t\t}\n\t\t} else {\n\t\t\tvalueInPixels = styleValue;\n\t\t}\n\n\t\treturn valueInPixels;\n\t}\n\n\t/**\n\t * Returns if the given value contains an effective constraint.\n\t * @private\n\t */\n\tfunction isConstrainedValue(value) {\n\t\treturn value !== undefined && value !== null && value !== 'none';\n\t}\n\n\t/**\n\t * Returns the max width or height of the given DOM node in a cross-browser compatible fashion\n\t * @param {HTMLElement} domNode - the node to check the constraint on\n\t * @param {string} maxStyle - the style that defines the maximum for the direction we are using ('max-width' / 'max-height')\n\t * @param {string} percentageProperty - property of parent to use when calculating width as a percentage\n\t * @see {@link https://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser}\n\t */\n\tfunction getConstraintDimension(domNode, maxStyle, percentageProperty) {\n\t\tvar view = document.defaultView;\n\t\tvar parentNode = helpers$1._getParentNode(domNode);\n\t\tvar constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n\t\tvar constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n\t\tvar hasCNode = isConstrainedValue(constrainedNode);\n\t\tvar hasCContainer = isConstrainedValue(constrainedContainer);\n\t\tvar infinity = Number.POSITIVE_INFINITY;\n\n\t\tif (hasCNode || hasCContainer) {\n\t\t\treturn Math.min(\n\t\t\t\thasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity,\n\t\t\t\thasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n\t\t}\n\n\t\treturn 'none';\n\t}\n\t// returns Number or undefined if no constraint\n\thelpers$1.getConstraintWidth = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-width', 'clientWidth');\n\t};\n\t// returns Number or undefined if no constraint\n\thelpers$1.getConstraintHeight = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-height', 'clientHeight');\n\t};\n\t/**\n\t * @private\n \t */\n\thelpers$1._calculatePadding = function(container, padding, parentDimension) {\n\t\tpadding = helpers$1.getStyle(container, padding);\n\n\t\treturn padding.indexOf('%') > -1 ? parentDimension * parseInt(padding, 10) / 100 : parseInt(padding, 10);\n\t};\n\t/**\n\t * @private\n\t */\n\thelpers$1._getParentNode = function(domNode) {\n\t\tvar parent = domNode.parentNode;\n\t\tif (parent && parent.toString() === '[object ShadowRoot]') {\n\t\t\tparent = parent.host;\n\t\t}\n\t\treturn parent;\n\t};\n\thelpers$1.getMaximumWidth = function(domNode) {\n\t\tvar container = helpers$1._getParentNode(domNode);\n\t\tif (!container) {\n\t\t\treturn domNode.clientWidth;\n\t\t}\n\n\t\tvar clientWidth = container.clientWidth;\n\t\tvar paddingLeft = helpers$1._calculatePadding(container, 'padding-left', clientWidth);\n\t\tvar paddingRight = helpers$1._calculatePadding(container, 'padding-right', clientWidth);\n\n\t\tvar w = clientWidth - paddingLeft - paddingRight;\n\t\tvar cw = helpers$1.getConstraintWidth(domNode);\n\t\treturn isNaN(cw) ? w : Math.min(w, cw);\n\t};\n\thelpers$1.getMaximumHeight = function(domNode) {\n\t\tvar container = helpers$1._getParentNode(domNode);\n\t\tif (!container) {\n\t\t\treturn domNode.clientHeight;\n\t\t}\n\n\t\tvar clientHeight = container.clientHeight;\n\t\tvar paddingTop = helpers$1._calculatePadding(container, 'padding-top', clientHeight);\n\t\tvar paddingBottom = helpers$1._calculatePadding(container, 'padding-bottom', clientHeight);\n\n\t\tvar h = clientHeight - paddingTop - paddingBottom;\n\t\tvar ch = helpers$1.getConstraintHeight(domNode);\n\t\treturn isNaN(ch) ? h : Math.min(h, ch);\n\t};\n\thelpers$1.getStyle = function(el, property) {\n\t\treturn el.currentStyle ?\n\t\t\tel.currentStyle[property] :\n\t\t\tdocument.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n\t};\n\thelpers$1.retinaScale = function(chart, forceRatio) {\n\t\tvar pixelRatio = chart.currentDevicePixelRatio = forceRatio || (typeof window !== 'undefined' && window.devicePixelRatio) || 1;\n\t\tif (pixelRatio === 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar canvas = chart.canvas;\n\t\tvar height = chart.height;\n\t\tvar width = chart.width;\n\n\t\tcanvas.height = height * pixelRatio;\n\t\tcanvas.width = width * pixelRatio;\n\t\tchart.ctx.scale(pixelRatio, pixelRatio);\n\n\t\t// If no style has been set on the canvas, the render size is used as display size,\n\t\t// making the chart visually bigger, so let's enforce it to the \"correct\" values.\n\t\t// See https://github.com/chartjs/Chart.js/issues/3575\n\t\tif (!canvas.style.height && !canvas.style.width) {\n\t\t\tcanvas.style.height = height + 'px';\n\t\t\tcanvas.style.width = width + 'px';\n\t\t}\n\t};\n\t// -- Canvas methods\n\thelpers$1.fontString = function(pixelSize, fontStyle, fontFamily) {\n\t\treturn fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n\t};\n\thelpers$1.longestText = function(ctx, font, arrayOfThings, cache) {\n\t\tcache = cache || {};\n\t\tvar data = cache.data = cache.data || {};\n\t\tvar gc = cache.garbageCollect = cache.garbageCollect || [];\n\n\t\tif (cache.font !== font) {\n\t\t\tdata = cache.data = {};\n\t\t\tgc = cache.garbageCollect = [];\n\t\t\tcache.font = font;\n\t\t}\n\n\t\tctx.font = font;\n\t\tvar longest = 0;\n\t\thelpers$1.each(arrayOfThings, function(thing) {\n\t\t\t// Undefined strings and arrays should not be measured\n\t\t\tif (thing !== undefined && thing !== null && helpers$1.isArray(thing) !== true) {\n\t\t\t\tlongest = helpers$1.measureText(ctx, data, gc, longest, thing);\n\t\t\t} else if (helpers$1.isArray(thing)) {\n\t\t\t\t// if it is an array lets measure each element\n\t\t\t\t// to do maybe simplify this function a bit so we can do this more recursively?\n\t\t\t\thelpers$1.each(thing, function(nestedThing) {\n\t\t\t\t\t// Undefined strings and arrays should not be measured\n\t\t\t\t\tif (nestedThing !== undefined && nestedThing !== null && !helpers$1.isArray(nestedThing)) {\n\t\t\t\t\t\tlongest = helpers$1.measureText(ctx, data, gc, longest, nestedThing);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tvar gcLen = gc.length / 2;\n\t\tif (gcLen > arrayOfThings.length) {\n\t\t\tfor (var i = 0; i < gcLen; i++) {\n\t\t\t\tdelete data[gc[i]];\n\t\t\t}\n\t\t\tgc.splice(0, gcLen);\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers$1.measureText = function(ctx, data, gc, longest, string) {\n\t\tvar textWidth = data[string];\n\t\tif (!textWidth) {\n\t\t\ttextWidth = data[string] = ctx.measureText(string).width;\n\t\t\tgc.push(string);\n\t\t}\n\t\tif (textWidth > longest) {\n\t\t\tlongest = textWidth;\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers$1.numberOfLabelLines = function(arrayOfThings) {\n\t\tvar numberOfLines = 1;\n\t\thelpers$1.each(arrayOfThings, function(thing) {\n\t\t\tif (helpers$1.isArray(thing)) {\n\t\t\t\tif (thing.length > numberOfLines) {\n\t\t\t\t\tnumberOfLines = thing.length;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn numberOfLines;\n\t};\n\n\thelpers$1.color = !chartjsColor ?\n\t\tfunction(value) {\n\t\t\tconsole.error('Color.js not found!');\n\t\t\treturn value;\n\t\t} :\n\t\tfunction(value) {\n\t\t\t/* global CanvasGradient */\n\t\t\tif (value instanceof CanvasGradient) {\n\t\t\t\tvalue = core_defaults.global.defaultColor;\n\t\t\t}\n\n\t\t\treturn chartjsColor(value);\n\t\t};\n\n\thelpers$1.getHoverColor = function(colorValue) {\n\t\t/* global CanvasPattern */\n\t\treturn (colorValue instanceof CanvasPattern || colorValue instanceof CanvasGradient) ?\n\t\t\tcolorValue :\n\t\t\thelpers$1.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n\t};\n};\n\nfunction abstract() {\n\tthrow new Error(\n\t\t'This method is not implemented: either no adapter can ' +\n\t\t'be found or an incomplete integration was provided.'\n\t);\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\n\n/**\n * Currently supported unit string values.\n * @typedef {('millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year')}\n * @memberof Chart._adapters._date\n * @name Unit\n */\n\n/**\n * @class\n */\nfunction DateAdapter(options) {\n\tthis.options = options || {};\n}\n\nhelpers$1.extend(DateAdapter.prototype, /** @lends DateAdapter */ {\n\t/**\n\t * Returns a map of time formats for the supported formatting units defined\n\t * in Unit as well as 'datetime' representing a detailed date/time string.\n\t * @returns {{string: string}}\n\t */\n\tformats: abstract,\n\n\t/**\n\t * Parses the given `value` and return the associated timestamp.\n\t * @param {any} value - the value to parse (usually comes from the data)\n\t * @param {string} [format] - the expected data format\n\t * @returns {(number|null)}\n\t * @function\n\t */\n\tparse: abstract,\n\n\t/**\n\t * Returns the formatted date in the specified `format` for a given `timestamp`.\n\t * @param {number} timestamp - the timestamp to format\n\t * @param {string} format - the date/time token\n\t * @return {string}\n\t * @function\n\t */\n\tformat: abstract,\n\n\t/**\n\t * Adds the specified `amount` of `unit` to the given `timestamp`.\n\t * @param {number} timestamp - the input timestamp\n\t * @param {number} amount - the amount to add\n\t * @param {Unit} unit - the unit as string\n\t * @return {number}\n\t * @function\n\t */\n\tadd: abstract,\n\n\t/**\n\t * Returns the number of `unit` between the given timestamps.\n\t * @param {number} max - the input timestamp (reference)\n\t * @param {number} min - the timestamp to substract\n\t * @param {Unit} unit - the unit as string\n\t * @return {number}\n\t * @function\n\t */\n\tdiff: abstract,\n\n\t/**\n\t * Returns start of `unit` for the given `timestamp`.\n\t * @param {number} timestamp - the input timestamp\n\t * @param {Unit} unit - the unit as string\n\t * @param {number} [weekday] - the ISO day of the week with 1 being Monday\n\t * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n\t * @function\n\t */\n\tstartOf: abstract,\n\n\t/**\n\t * Returns end of `unit` for the given `timestamp`.\n\t * @param {number} timestamp - the input timestamp\n\t * @param {Unit} unit - the unit as string\n\t * @function\n\t */\n\tendOf: abstract,\n\n\t// DEPRECATIONS\n\n\t/**\n\t * Provided for backward compatibility for scale.getValueForPixel(),\n\t * this method should be overridden only by the moment adapter.\n\t * @deprecated since version 2.8.0\n\t * @todo remove at version 3\n\t * @private\n\t */\n\t_create: function(value) {\n\t\treturn value;\n\t}\n});\n\nDateAdapter.override = function(members) {\n\thelpers$1.extend(DateAdapter.prototype, members);\n};\n\nvar _date = DateAdapter;\n\nvar core_adapters = {\n\t_date: _date\n};\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nvar core_ticks = {\n\t/**\n\t * Namespace to hold formatters for different types of ticks\n\t * @namespace Chart.Ticks.formatters\n\t */\n\tformatters: {\n\t\t/**\n\t\t * Formatter for value labels\n\t\t * @method Chart.Ticks.formatters.values\n\t\t * @param value the value to display\n\t\t * @return {string|string[]} the label to display\n\t\t */\n\t\tvalues: function(value) {\n\t\t\treturn helpers$1.isArray(value) ? value : '' + value;\n\t\t},\n\n\t\t/**\n\t\t * Formatter for linear numeric ticks\n\t\t * @method Chart.Ticks.formatters.linear\n\t\t * @param tickValue {number} the value to be formatted\n\t\t * @param index {number} the position of the tickValue parameter in the ticks array\n\t\t * @param ticks {number[]} the list of ticks being converted\n\t\t * @return {string} string representation of the tickValue parameter\n\t\t */\n\t\tlinear: function(tickValue, index, ticks) {\n\t\t\t// If we have lots of ticks, don't use the ones\n\t\t\tvar delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];\n\n\t\t\t// If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\t\t\tif (Math.abs(delta) > 1) {\n\t\t\t\tif (tickValue !== Math.floor(tickValue)) {\n\t\t\t\t\t// not an integer\n\t\t\t\t\tdelta = tickValue - Math.floor(tickValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar logDelta = helpers$1.log10(Math.abs(delta));\n\t\t\tvar tickString = '';\n\n\t\t\tif (tickValue !== 0) {\n\t\t\t\tvar maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\t\t\t\tif (maxTick < 1e-4) { // all ticks are small numbers; use scientific notation\n\t\t\t\t\tvar logTick = helpers$1.log10(Math.abs(tickValue));\n\t\t\t\t\ttickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n\t\t\t\t} else {\n\t\t\t\t\tvar numDecimal = -1 * Math.floor(logDelta);\n\t\t\t\t\tnumDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\t\t\t\t\ttickString = tickValue.toFixed(numDecimal);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttickString = '0'; // never show decimal places for 0\n\t\t\t}\n\n\t\t\treturn tickString;\n\t\t},\n\n\t\tlogarithmic: function(tickValue, index, ticks) {\n\t\t\tvar remain = tickValue / (Math.pow(10, Math.floor(helpers$1.log10(tickValue))));\n\n\t\t\tif (tickValue === 0) {\n\t\t\t\treturn '0';\n\t\t\t} else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n\t\t\t\treturn tickValue.toExponential();\n\t\t\t}\n\t\t\treturn '';\n\t\t}\n\t}\n};\n\nvar valueOrDefault$9 = helpers$1.valueOrDefault;\nvar valueAtIndexOrDefault = helpers$1.valueAtIndexOrDefault;\n\ncore_defaults._set('scale', {\n\tdisplay: true,\n\tposition: 'left',\n\toffset: false,\n\n\t// grid line settings\n\tgridLines: {\n\t\tdisplay: true,\n\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\tlineWidth: 1,\n\t\tdrawBorder: true,\n\t\tdrawOnChartArea: true,\n\t\tdrawTicks: true,\n\t\ttickMarkLength: 10,\n\t\tzeroLineWidth: 1,\n\t\tzeroLineColor: 'rgba(0,0,0,0.25)',\n\t\tzeroLineBorderDash: [],\n\t\tzeroLineBorderDashOffset: 0.0,\n\t\toffsetGridLines: false,\n\t\tborderDash: [],\n\t\tborderDashOffset: 0.0\n\t},\n\n\t// scale label\n\tscaleLabel: {\n\t\t// display property\n\t\tdisplay: false,\n\n\t\t// actual label\n\t\tlabelString: '',\n\n\t\t// top/bottom padding\n\t\tpadding: {\n\t\t\ttop: 4,\n\t\t\tbottom: 4\n\t\t}\n\t},\n\n\t// label settings\n\tticks: {\n\t\tbeginAtZero: false,\n\t\tminRotation: 0,\n\t\tmaxRotation: 50,\n\t\tmirror: false,\n\t\tpadding: 0,\n\t\treverse: false,\n\t\tdisplay: true,\n\t\tautoSkip: true,\n\t\tautoSkipPadding: 0,\n\t\tlabelOffset: 0,\n\t\t// We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n\t\tcallback: core_ticks.formatters.values,\n\t\tminor: {},\n\t\tmajor: {}\n\t}\n});\n\nfunction labelsFromTicks(ticks) {\n\tvar labels = [];\n\tvar i, ilen;\n\n\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\tlabels.push(ticks[i].label);\n\t}\n\n\treturn labels;\n}\n\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n\tvar lineValue = scale.getPixelForTick(index);\n\n\tif (offsetGridLines) {\n\t\tif (scale.getTicks().length === 1) {\n\t\t\tlineValue -= scale.isHorizontal() ?\n\t\t\t\tMath.max(lineValue - scale.left, scale.right - lineValue) :\n\t\t\t\tMath.max(lineValue - scale.top, scale.bottom - lineValue);\n\t\t} else if (index === 0) {\n\t\t\tlineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n\t\t} else {\n\t\t\tlineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n\t\t}\n\t}\n\treturn lineValue;\n}\n\nfunction computeTextSize(context, tick, font) {\n\treturn helpers$1.isArray(tick) ?\n\t\thelpers$1.longestText(context, font, tick) :\n\t\tcontext.measureText(tick).width;\n}\n\nvar core_scale = core_element.extend({\n\t/**\n\t * Get the padding needed for the scale\n\t * @method getPadding\n\t * @private\n\t * @returns {Padding} the necessary padding\n\t */\n\tgetPadding: function() {\n\t\tvar me = this;\n\t\treturn {\n\t\t\tleft: me.paddingLeft || 0,\n\t\t\ttop: me.paddingTop || 0,\n\t\t\tright: me.paddingRight || 0,\n\t\t\tbottom: me.paddingBottom || 0\n\t\t};\n\t},\n\n\t/**\n\t * Returns the scale tick objects ({label, major})\n\t * @since 2.7\n\t */\n\tgetTicks: function() {\n\t\treturn this._ticks;\n\t},\n\n\t// These methods are ordered by lifecyle. Utilities then follow.\n\t// Any function defined here is inherited by all scale types.\n\t// Any function can be extended by the scale type\n\n\tmergeTicksOptions: function() {\n\t\tvar ticks = this.options.ticks;\n\t\tif (ticks.minor === false) {\n\t\t\tticks.minor = {\n\t\t\t\tdisplay: false\n\t\t\t};\n\t\t}\n\t\tif (ticks.major === false) {\n\t\t\tticks.major = {\n\t\t\t\tdisplay: false\n\t\t\t};\n\t\t}\n\t\tfor (var key in ticks) {\n\t\t\tif (key !== 'major' && key !== 'minor') {\n\t\t\t\tif (typeof ticks.minor[key] === 'undefined') {\n\t\t\t\t\tticks.minor[key] = ticks[key];\n\t\t\t\t}\n\t\t\t\tif (typeof ticks.major[key] === 'undefined') {\n\t\t\t\t\tticks.major[key] = ticks[key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tbeforeUpdate: function() {\n\t\thelpers$1.callback(this.options.beforeUpdate, [this]);\n\t},\n\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\t\tvar i, ilen, labels, label, ticks, tick;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = helpers$1.extend({\n\t\t\tleft: 0,\n\t\t\tright: 0,\n\t\t\ttop: 0,\n\t\t\tbottom: 0\n\t\t}, margins);\n\n\t\tme._maxLabelLines = 0;\n\t\tme.longestLabelWidth = 0;\n\t\tme.longestTextCache = me.longestTextCache || {};\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\n\t\t// Data min/max\n\t\tme.beforeDataLimits();\n\t\tme.determineDataLimits();\n\t\tme.afterDataLimits();\n\n\t\t// Ticks - `this.ticks` is now DEPRECATED!\n\t\t// Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n\t\t// and must not be accessed directly from outside this class. `this.ticks` being\n\t\t// around for long time and not marked as private, we can't change its structure\n\t\t// without unexpected breaking changes. If you need to access the scale ticks,\n\t\t// use scale.getTicks() instead.\n\n\t\tme.beforeBuildTicks();\n\n\t\t// New implementations should return an array of objects but for BACKWARD COMPAT,\n\t\t// we still support no return (`this.ticks` internally set by calling this method).\n\t\tticks = me.buildTicks() || [];\n\n\t\t// Allow modification of ticks in callback.\n\t\tticks = me.afterBuildTicks(ticks) || ticks;\n\n\t\tme.beforeTickToLabelConversion();\n\n\t\t// New implementations should return the formatted tick labels but for BACKWARD\n\t\t// COMPAT, we still support no return (`this.ticks` internally changed by calling\n\t\t// this method and supposed to contain only string values).\n\t\tlabels = me.convertTicksToLabels(ticks) || me.ticks;\n\n\t\tme.afterTickToLabelConversion();\n\n\t\tme.ticks = labels;   // BACKWARD COMPATIBILITY\n\n\t\t// IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n\n\t\t// BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\t\tfor (i = 0, ilen = labels.length; i < ilen; ++i) {\n\t\t\tlabel = labels[i];\n\t\t\ttick = ticks[i];\n\t\t\tif (!tick) {\n\t\t\t\tticks.push(tick = {\n\t\t\t\t\tlabel: label,\n\t\t\t\t\tmajor: false\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\ttick.label = label;\n\t\t\t}\n\t\t}\n\n\t\tme._ticks = ticks;\n\n\t\t// Tick Rotation\n\t\tme.beforeCalculateTickRotation();\n\t\tme.calculateTickRotation();\n\t\tme.afterCalculateTickRotation();\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\n\t},\n\tafterUpdate: function() {\n\t\thelpers$1.callback(this.options.afterUpdate, [this]);\n\t},\n\n\t//\n\n\tbeforeSetDimensions: function() {\n\t\thelpers$1.callback(this.options.beforeSetDimensions, [this]);\n\t},\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\t},\n\tafterSetDimensions: function() {\n\t\thelpers$1.callback(this.options.afterSetDimensions, [this]);\n\t},\n\n\t// Data limits\n\tbeforeDataLimits: function() {\n\t\thelpers$1.callback(this.options.beforeDataLimits, [this]);\n\t},\n\tdetermineDataLimits: helpers$1.noop,\n\tafterDataLimits: function() {\n\t\thelpers$1.callback(this.options.afterDataLimits, [this]);\n\t},\n\n\t//\n\tbeforeBuildTicks: function() {\n\t\thelpers$1.callback(this.options.beforeBuildTicks, [this]);\n\t},\n\tbuildTicks: helpers$1.noop,\n\tafterBuildTicks: function(ticks) {\n\t\tvar me = this;\n\t\t// ticks is empty for old axis implementations here\n\t\tif (helpers$1.isArray(ticks) && ticks.length) {\n\t\t\treturn helpers$1.callback(me.options.afterBuildTicks, [me, ticks]);\n\t\t}\n\t\t// Support old implementations (that modified `this.ticks` directly in buildTicks)\n\t\tme.ticks = helpers$1.callback(me.options.afterBuildTicks, [me, me.ticks]) || me.ticks;\n\t\treturn ticks;\n\t},\n\n\tbeforeTickToLabelConversion: function() {\n\t\thelpers$1.callback(this.options.beforeTickToLabelConversion, [this]);\n\t},\n\tconvertTicksToLabels: function() {\n\t\tvar me = this;\n\t\t// Convert ticks to strings\n\t\tvar tickOpts = me.options.ticks;\n\t\tme.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n\t},\n\tafterTickToLabelConversion: function() {\n\t\thelpers$1.callback(this.options.afterTickToLabelConversion, [this]);\n\t},\n\n\t//\n\n\tbeforeCalculateTickRotation: function() {\n\t\thelpers$1.callback(this.options.beforeCalculateTickRotation, [this]);\n\t},\n\tcalculateTickRotation: function() {\n\t\tvar me = this;\n\t\tvar context = me.ctx;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar labels = labelsFromTicks(me._ticks);\n\n\t\t// Get the width of each grid by calculating the difference\n\t\t// between x offsets between 0 and 1.\n\t\tvar tickFont = helpers$1.options._parseFont(tickOpts);\n\t\tcontext.font = tickFont.string;\n\n\t\tvar labelRotation = tickOpts.minRotation || 0;\n\n\t\tif (labels.length && me.options.display && me.isHorizontal()) {\n\t\t\tvar originalLabelWidth = helpers$1.longestText(context, tickFont.string, labels, me.longestTextCache);\n\t\t\tvar labelWidth = originalLabelWidth;\n\t\t\tvar cosRotation, sinRotation;\n\n\t\t\t// Allow 3 pixels x2 padding either side for label readability\n\t\t\tvar tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6;\n\n\t\t\t// Max label rotation can be set or default to 90 - also act as a loop counter\n\t\t\twhile (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n\t\t\t\tvar angleRadians = helpers$1.toRadians(labelRotation);\n\t\t\t\tcosRotation = Math.cos(angleRadians);\n\t\t\t\tsinRotation = Math.sin(angleRadians);\n\n\t\t\t\tif (sinRotation * originalLabelWidth > me.maxHeight) {\n\t\t\t\t\t// go back one step\n\t\t\t\t\tlabelRotation--;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tlabelRotation++;\n\t\t\t\tlabelWidth = cosRotation * originalLabelWidth;\n\t\t\t}\n\t\t}\n\n\t\tme.labelRotation = labelRotation;\n\t},\n\tafterCalculateTickRotation: function() {\n\t\thelpers$1.callback(this.options.afterCalculateTickRotation, [this]);\n\t},\n\n\t//\n\n\tbeforeFit: function() {\n\t\thelpers$1.callback(this.options.beforeFit, [this]);\n\t},\n\tfit: function() {\n\t\tvar me = this;\n\t\t// Reset\n\t\tvar minSize = me.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\n\t\tvar labels = labelsFromTicks(me._ticks);\n\n\t\tvar opts = me.options;\n\t\tvar tickOpts = opts.ticks;\n\t\tvar scaleLabelOpts = opts.scaleLabel;\n\t\tvar gridLineOpts = opts.gridLines;\n\t\tvar display = me._isVisible();\n\t\tvar position = opts.position;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tvar parseFont = helpers$1.options._parseFont;\n\t\tvar tickFont = parseFont(tickOpts);\n\t\tvar tickMarkLength = opts.gridLines.tickMarkLength;\n\n\t\t// Width\n\t\tif (isHorizontal) {\n\t\t\t// subtract the margins to line up with the chartArea if we are a full width scale\n\t\t\tminSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n\t\t} else {\n\t\t\tminSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t}\n\n\t\t// height\n\t\tif (isHorizontal) {\n\t\t\tminSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t} else {\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\t// Are we showing a title for the scale?\n\t\tif (scaleLabelOpts.display && display) {\n\t\t\tvar scaleLabelFont = parseFont(scaleLabelOpts);\n\t\t\tvar scaleLabelPadding = helpers$1.options.toPadding(scaleLabelOpts.padding);\n\t\t\tvar deltaHeight = scaleLabelFont.lineHeight + scaleLabelPadding.height;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize.height += deltaHeight;\n\t\t\t} else {\n\t\t\t\tminSize.width += deltaHeight;\n\t\t\t}\n\t\t}\n\n\t\t// Don't bother fitting the ticks if we are not showing the labels\n\t\tif (tickOpts.display && display) {\n\t\t\tvar largestTextWidth = helpers$1.longestText(me.ctx, tickFont.string, labels, me.longestTextCache);\n\t\t\tvar tallestLabelHeightInLines = helpers$1.numberOfLabelLines(labels);\n\t\t\tvar lineSpace = tickFont.size * 0.5;\n\t\t\tvar tickPadding = me.options.ticks.padding;\n\n\t\t\t// Store max number of lines and widest label for _autoSkip\n\t\t\tme._maxLabelLines = tallestLabelHeightInLines;\n\t\t\tme.longestLabelWidth = largestTextWidth;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tvar angleRadians = helpers$1.toRadians(me.labelRotation);\n\t\t\t\tvar cosRotation = Math.cos(angleRadians);\n\t\t\t\tvar sinRotation = Math.sin(angleRadians);\n\n\t\t\t\t// TODO - improve this calculation\n\t\t\t\tvar labelHeight = (sinRotation * largestTextWidth)\n\t\t\t\t\t+ (tickFont.lineHeight * tallestLabelHeightInLines)\n\t\t\t\t\t+ lineSpace; // padding\n\n\t\t\t\tminSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n\n\t\t\t\tme.ctx.font = tickFont.string;\n\t\t\t\tvar firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.string);\n\t\t\t\tvar lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.string);\n\t\t\t\tvar offsetLeft = me.getPixelForTick(0) - me.left;\n\t\t\t\tvar offsetRight = me.right - me.getPixelForTick(labels.length - 1);\n\t\t\t\tvar paddingLeft, paddingRight;\n\n\t\t\t\t// Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n\t\t\t\t// which means that the right padding is dominated by the font height\n\t\t\t\tif (me.labelRotation !== 0) {\n\t\t\t\t\tpaddingLeft = position === 'bottom' ? (cosRotation * firstLabelWidth) : (cosRotation * lineSpace);\n\t\t\t\t\tpaddingRight = position === 'bottom' ? (cosRotation * lineSpace) : (cosRotation * lastLabelWidth);\n\t\t\t\t} else {\n\t\t\t\t\tpaddingLeft = firstLabelWidth / 2;\n\t\t\t\t\tpaddingRight = lastLabelWidth / 2;\n\t\t\t\t}\n\t\t\t\tme.paddingLeft = Math.max(paddingLeft - offsetLeft, 0) + 3; // add 3 px to move away from canvas edges\n\t\t\t\tme.paddingRight = Math.max(paddingRight - offsetRight, 0) + 3;\n\t\t\t} else {\n\t\t\t\t// A vertical axis is more constrained by the width. Labels are the\n\t\t\t\t// dominant factor here, so get that length first and account for padding\n\t\t\t\tif (tickOpts.mirror) {\n\t\t\t\t\tlargestTextWidth = 0;\n\t\t\t\t} else {\n\t\t\t\t\t// use lineSpace for consistency with horizontal axis\n\t\t\t\t\t// tickPadding is not implemented for horizontal\n\t\t\t\t\tlargestTextWidth += tickPadding + lineSpace;\n\t\t\t\t}\n\n\t\t\t\tminSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n\n\t\t\t\tme.paddingTop = tickFont.size / 2;\n\t\t\t\tme.paddingBottom = tickFont.size / 2;\n\t\t\t}\n\t\t}\n\n\t\tme.handleMargins();\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\t},\n\n\t/**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n\thandleMargins: function() {\n\t\tvar me = this;\n\t\tif (me.margins) {\n\t\t\tme.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n\t\t\tme.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n\t\t\tme.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n\t\t\tme.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n\t\t}\n\t},\n\n\tafterFit: function() {\n\t\thelpers$1.callback(this.options.afterFit, [this]);\n\t},\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t},\n\tisFullWidth: function() {\n\t\treturn (this.options.fullWidth);\n\t},\n\n\t// Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n\tgetRightValue: function(rawValue) {\n\t\t// Null and undefined values first\n\t\tif (helpers$1.isNullOrUndef(rawValue)) {\n\t\t\treturn NaN;\n\t\t}\n\t\t// isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\t\tif ((typeof rawValue === 'number' || rawValue instanceof Number) && !isFinite(rawValue)) {\n\t\t\treturn NaN;\n\t\t}\n\t\t// If it is in fact an object, dive in one more level\n\t\tif (rawValue) {\n\t\t\tif (this.isHorizontal()) {\n\t\t\t\tif (rawValue.x !== undefined) {\n\t\t\t\t\treturn this.getRightValue(rawValue.x);\n\t\t\t\t}\n\t\t\t} else if (rawValue.y !== undefined) {\n\t\t\t\treturn this.getRightValue(rawValue.y);\n\t\t\t}\n\t\t}\n\n\t\t// Value is good, return it\n\t\treturn rawValue;\n\t},\n\n\t/**\n\t * Used to get the value to display in the tooltip for the data at the given index\n\t * @param index\n\t * @param datasetIndex\n\t */\n\tgetLabelForIndex: helpers$1.noop,\n\n\t/**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param value\n\t * @param index\n\t * @param datasetIndex\n\t */\n\tgetPixelForValue: helpers$1.noop,\n\n\t/**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param pixel\n\t */\n\tgetValueForPixel: helpers$1.noop,\n\n\t/**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t */\n\tgetPixelForTick: function(index) {\n\t\tvar me = this;\n\t\tvar offset = me.options.offset;\n\t\tif (me.isHorizontal()) {\n\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\tvar tickWidth = innerWidth / Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n\t\t\tvar pixel = (tickWidth * index) + me.paddingLeft;\n\n\t\t\tif (offset) {\n\t\t\t\tpixel += tickWidth / 2;\n\t\t\t}\n\n\t\t\tvar finalVal = me.left + pixel;\n\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\treturn finalVal;\n\t\t}\n\t\tvar innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n\t\treturn me.top + (index * (innerHeight / (me._ticks.length - 1)));\n\t},\n\n\t/**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t */\n\tgetPixelForDecimal: function(decimal) {\n\t\tvar me = this;\n\t\tif (me.isHorizontal()) {\n\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\tvar valueOffset = (innerWidth * decimal) + me.paddingLeft;\n\n\t\t\tvar finalVal = me.left + valueOffset;\n\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\treturn finalVal;\n\t\t}\n\t\treturn me.top + (decimal * me.height);\n\t},\n\n\t/**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t */\n\tgetBasePixel: function() {\n\t\treturn this.getPixelForValue(this.getBaseValue());\n\t},\n\n\tgetBaseValue: function() {\n\t\tvar me = this;\n\t\tvar min = me.min;\n\t\tvar max = me.max;\n\n\t\treturn me.beginAtZero ? 0 :\n\t\t\tmin < 0 && max < 0 ? max :\n\t\t\tmin > 0 && max > 0 ? min :\n\t\t\t0;\n\t},\n\n\t/**\n\t * Returns a subset of ticks to be plotted to avoid overlapping labels.\n\t * @private\n\t */\n\t_autoSkip: function(ticks) {\n\t\tvar me = this;\n\t\tvar isHorizontal = me.isHorizontal();\n\t\tvar optionTicks = me.options.ticks.minor;\n\t\tvar tickCount = ticks.length;\n\t\tvar skipRatio = false;\n\t\tvar maxTicks = optionTicks.maxTicksLimit;\n\n\t\t// Total space needed to display all ticks. First and last ticks are\n\t\t// drawn as their center at end of axis, so tickCount-1\n\t\tvar ticksLength = me._tickSize() * (tickCount - 1);\n\n\t\t// Axis length\n\t\tvar axisLength = isHorizontal\n\t\t\t? me.width - (me.paddingLeft + me.paddingRight)\n\t\t\t: me.height - (me.paddingTop + me.PaddingBottom);\n\n\t\tvar result = [];\n\t\tvar i, tick;\n\n\t\tif (ticksLength > axisLength) {\n\t\t\tskipRatio = 1 + Math.floor(ticksLength / axisLength);\n\t\t}\n\n\t\t// if they defined a max number of optionTicks,\n\t\t// increase skipRatio until that number is met\n\t\tif (tickCount > maxTicks) {\n\t\t\tskipRatio = Math.max(skipRatio, 1 + Math.floor(tickCount / maxTicks));\n\t\t}\n\n\t\tfor (i = 0; i < tickCount; i++) {\n\t\t\ttick = ticks[i];\n\n\t\t\tif (skipRatio > 1 && i % skipRatio > 0) {\n\t\t\t\t// leave tick in place but make sure it's not displayed (#4635)\n\t\t\t\tdelete tick.label;\n\t\t\t}\n\t\t\tresult.push(tick);\n\t\t}\n\t\treturn result;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_tickSize: function() {\n\t\tvar me = this;\n\t\tvar isHorizontal = me.isHorizontal();\n\t\tvar optionTicks = me.options.ticks.minor;\n\n\t\t// Calculate space needed by label in axis direction.\n\t\tvar rot = helpers$1.toRadians(me.labelRotation);\n\t\tvar cos = Math.abs(Math.cos(rot));\n\t\tvar sin = Math.abs(Math.sin(rot));\n\n\t\tvar padding = optionTicks.autoSkipPadding || 0;\n\t\tvar w = (me.longestLabelWidth + padding) || 0;\n\n\t\tvar tickFont = helpers$1.options._parseFont(optionTicks);\n\t\tvar h = (me._maxLabelLines * tickFont.lineHeight + padding) || 0;\n\n\t\t// Calculate space needed for 1 tick in axis direction.\n\t\treturn isHorizontal\n\t\t\t? h * cos > w * sin ? w / cos : h / sin\n\t\t\t: h * sin < w * cos ? h / cos : w / sin;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_isVisible: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar display = me.options.display;\n\t\tvar i, ilen, meta;\n\n\t\tif (display !== 'auto') {\n\t\t\treturn !!display;\n\t\t}\n\n\t\t// When 'auto', the scale is visible if at least one associated dataset is visible.\n\t\tfor (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n\t\t\tif (chart.isDatasetVisible(i)) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\tif (meta.xAxisID === me.id || meta.yAxisID === me.id) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t},\n\n\t/**\n\t * Actually draw the scale on the canvas\n\t * @param {object} chartArea - the area of the chart to draw full grid lines on\n\t */\n\tdraw: function(chartArea) {\n\t\tvar me = this;\n\t\tvar options = me.options;\n\n\t\tif (!me._isVisible()) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar chart = me.chart;\n\t\tvar context = me.ctx;\n\t\tvar globalDefaults = core_defaults.global;\n\t\tvar defaultFontColor = globalDefaults.defaultFontColor;\n\t\tvar optionTicks = options.ticks.minor;\n\t\tvar optionMajorTicks = options.ticks.major || optionTicks;\n\t\tvar gridLines = options.gridLines;\n\t\tvar scaleLabel = options.scaleLabel;\n\t\tvar position = options.position;\n\n\t\tvar isRotated = me.labelRotation !== 0;\n\t\tvar isMirrored = optionTicks.mirror;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tvar parseFont = helpers$1.options._parseFont;\n\t\tvar ticks = optionTicks.display && optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n\t\tvar tickFontColor = valueOrDefault$9(optionTicks.fontColor, defaultFontColor);\n\t\tvar tickFont = parseFont(optionTicks);\n\t\tvar lineHeight = tickFont.lineHeight;\n\t\tvar majorTickFontColor = valueOrDefault$9(optionMajorTicks.fontColor, defaultFontColor);\n\t\tvar majorTickFont = parseFont(optionMajorTicks);\n\t\tvar tickPadding = optionTicks.padding;\n\t\tvar labelOffset = optionTicks.labelOffset;\n\n\t\tvar tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n\n\t\tvar scaleLabelFontColor = valueOrDefault$9(scaleLabel.fontColor, defaultFontColor);\n\t\tvar scaleLabelFont = parseFont(scaleLabel);\n\t\tvar scaleLabelPadding = helpers$1.options.toPadding(scaleLabel.padding);\n\t\tvar labelRotationRadians = helpers$1.toRadians(me.labelRotation);\n\n\t\tvar itemsToDraw = [];\n\n\t\tvar axisWidth = gridLines.drawBorder ? valueAtIndexOrDefault(gridLines.lineWidth, 0, 0) : 0;\n\t\tvar alignPixel = helpers$1._alignPixel;\n\t\tvar borderValue, tickStart, tickEnd;\n\n\t\tif (position === 'top') {\n\t\t\tborderValue = alignPixel(chart, me.bottom, axisWidth);\n\t\t\ttickStart = me.bottom - tl;\n\t\t\ttickEnd = borderValue - axisWidth / 2;\n\t\t} else if (position === 'bottom') {\n\t\t\tborderValue = alignPixel(chart, me.top, axisWidth);\n\t\t\ttickStart = borderValue + axisWidth / 2;\n\t\t\ttickEnd = me.top + tl;\n\t\t} else if (position === 'left') {\n\t\t\tborderValue = alignPixel(chart, me.right, axisWidth);\n\t\t\ttickStart = me.right - tl;\n\t\t\ttickEnd = borderValue - axisWidth / 2;\n\t\t} else {\n\t\t\tborderValue = alignPixel(chart, me.left, axisWidth);\n\t\t\ttickStart = borderValue + axisWidth / 2;\n\t\t\ttickEnd = me.left + tl;\n\t\t}\n\n\t\tvar epsilon = 0.0000001; // 0.0000001 is margin in pixels for Accumulated error.\n\n\t\thelpers$1.each(ticks, function(tick, index) {\n\t\t\t// autoskipper skipped this tick (#4635)\n\t\t\tif (helpers$1.isNullOrUndef(tick.label)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar label = tick.label;\n\t\t\tvar lineWidth, lineColor, borderDash, borderDashOffset;\n\t\t\tif (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n\t\t\t\t// Draw the first index specially\n\t\t\t\tlineWidth = gridLines.zeroLineWidth;\n\t\t\t\tlineColor = gridLines.zeroLineColor;\n\t\t\t\tborderDash = gridLines.zeroLineBorderDash || [];\n\t\t\t\tborderDashOffset = gridLines.zeroLineBorderDashOffset || 0.0;\n\t\t\t} else {\n\t\t\t\tlineWidth = valueAtIndexOrDefault(gridLines.lineWidth, index);\n\t\t\t\tlineColor = valueAtIndexOrDefault(gridLines.color, index);\n\t\t\t\tborderDash = gridLines.borderDash || [];\n\t\t\t\tborderDashOffset = gridLines.borderDashOffset || 0.0;\n\t\t\t}\n\n\t\t\t// Common properties\n\t\t\tvar tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY, textOffset, textAlign;\n\t\t\tvar labelCount = helpers$1.isArray(label) ? label.length : 1;\n\t\t\tvar lineValue = getPixelForGridLine(me, index, gridLines.offsetGridLines);\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tvar labelYOffset = tl + tickPadding;\n\n\t\t\t\tif (lineValue < me.left - epsilon) {\n\t\t\t\t\tlineColor = 'rgba(0,0,0,0)';\n\t\t\t\t}\n\n\t\t\t\ttx1 = tx2 = x1 = x2 = alignPixel(chart, lineValue, lineWidth);\n\t\t\t\tty1 = tickStart;\n\t\t\t\tty2 = tickEnd;\n\t\t\t\tlabelX = me.getPixelForTick(index) + labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n\t\t\t\tif (position === 'top') {\n\t\t\t\t\ty1 = alignPixel(chart, chartArea.top, axisWidth) + axisWidth / 2;\n\t\t\t\t\ty2 = chartArea.bottom;\n\t\t\t\t\ttextOffset = ((!isRotated ? 0.5 : 1) - labelCount) * lineHeight;\n\t\t\t\t\ttextAlign = !isRotated ? 'center' : 'left';\n\t\t\t\t\tlabelY = me.bottom - labelYOffset;\n\t\t\t\t} else {\n\t\t\t\t\ty1 = chartArea.top;\n\t\t\t\t\ty2 = alignPixel(chart, chartArea.bottom, axisWidth) - axisWidth / 2;\n\t\t\t\t\ttextOffset = (!isRotated ? 0.5 : 0) * lineHeight;\n\t\t\t\t\ttextAlign = !isRotated ? 'center' : 'right';\n\t\t\t\t\tlabelY = me.top + labelYOffset;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar labelXOffset = (isMirrored ? 0 : tl) + tickPadding;\n\n\t\t\t\tif (lineValue < me.top - epsilon) {\n\t\t\t\t\tlineColor = 'rgba(0,0,0,0)';\n\t\t\t\t}\n\n\t\t\t\ttx1 = tickStart;\n\t\t\t\ttx2 = tickEnd;\n\t\t\t\tty1 = ty2 = y1 = y2 = alignPixel(chart, lineValue, lineWidth);\n\t\t\t\tlabelY = me.getPixelForTick(index) + labelOffset;\n\t\t\t\ttextOffset = (1 - labelCount) * lineHeight / 2;\n\n\t\t\t\tif (position === 'left') {\n\t\t\t\t\tx1 = alignPixel(chart, chartArea.left, axisWidth) + axisWidth / 2;\n\t\t\t\t\tx2 = chartArea.right;\n\t\t\t\t\ttextAlign = isMirrored ? 'left' : 'right';\n\t\t\t\t\tlabelX = me.right - labelXOffset;\n\t\t\t\t} else {\n\t\t\t\t\tx1 = chartArea.left;\n\t\t\t\t\tx2 = alignPixel(chart, chartArea.right, axisWidth) - axisWidth / 2;\n\t\t\t\t\ttextAlign = isMirrored ? 'right' : 'left';\n\t\t\t\t\tlabelX = me.left + labelXOffset;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\titemsToDraw.push({\n\t\t\t\ttx1: tx1,\n\t\t\t\tty1: ty1,\n\t\t\t\ttx2: tx2,\n\t\t\t\tty2: ty2,\n\t\t\t\tx1: x1,\n\t\t\t\ty1: y1,\n\t\t\t\tx2: x2,\n\t\t\t\ty2: y2,\n\t\t\t\tlabelX: labelX,\n\t\t\t\tlabelY: labelY,\n\t\t\t\tglWidth: lineWidth,\n\t\t\t\tglColor: lineColor,\n\t\t\t\tglBorderDash: borderDash,\n\t\t\t\tglBorderDashOffset: borderDashOffset,\n\t\t\t\trotation: -1 * labelRotationRadians,\n\t\t\t\tlabel: label,\n\t\t\t\tmajor: tick.major,\n\t\t\t\ttextOffset: textOffset,\n\t\t\t\ttextAlign: textAlign\n\t\t\t});\n\t\t});\n\n\t\t// Draw all of the tick labels, tick marks, and grid lines at the correct places\n\t\thelpers$1.each(itemsToDraw, function(itemToDraw) {\n\t\t\tvar glWidth = itemToDraw.glWidth;\n\t\t\tvar glColor = itemToDraw.glColor;\n\n\t\t\tif (gridLines.display && glWidth && glColor) {\n\t\t\t\tcontext.save();\n\t\t\t\tcontext.lineWidth = glWidth;\n\t\t\t\tcontext.strokeStyle = glColor;\n\t\t\t\tif (context.setLineDash) {\n\t\t\t\t\tcontext.setLineDash(itemToDraw.glBorderDash);\n\t\t\t\t\tcontext.lineDashOffset = itemToDraw.glBorderDashOffset;\n\t\t\t\t}\n\n\t\t\t\tcontext.beginPath();\n\n\t\t\t\tif (gridLines.drawTicks) {\n\t\t\t\t\tcontext.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n\t\t\t\t\tcontext.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n\t\t\t\t}\n\n\t\t\t\tif (gridLines.drawOnChartArea) {\n\t\t\t\t\tcontext.moveTo(itemToDraw.x1, itemToDraw.y1);\n\t\t\t\t\tcontext.lineTo(itemToDraw.x2, itemToDraw.y2);\n\t\t\t\t}\n\n\t\t\t\tcontext.stroke();\n\t\t\t\tcontext.restore();\n\t\t\t}\n\n\t\t\tif (optionTicks.display) {\n\t\t\t\t// Make sure we draw text in the correct color and font\n\t\t\t\tcontext.save();\n\t\t\t\tcontext.translate(itemToDraw.labelX, itemToDraw.labelY);\n\t\t\t\tcontext.rotate(itemToDraw.rotation);\n\t\t\t\tcontext.font = itemToDraw.major ? majorTickFont.string : tickFont.string;\n\t\t\t\tcontext.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n\t\t\t\tcontext.textBaseline = 'middle';\n\t\t\t\tcontext.textAlign = itemToDraw.textAlign;\n\n\t\t\t\tvar label = itemToDraw.label;\n\t\t\t\tvar y = itemToDraw.textOffset;\n\t\t\t\tif (helpers$1.isArray(label)) {\n\t\t\t\t\tfor (var i = 0; i < label.length; ++i) {\n\t\t\t\t\t\t// We just make sure the multiline element is a string here..\n\t\t\t\t\t\tcontext.fillText('' + label[i], 0, y);\n\t\t\t\t\t\ty += lineHeight;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tcontext.fillText(label, 0, y);\n\t\t\t\t}\n\t\t\t\tcontext.restore();\n\t\t\t}\n\t\t});\n\n\t\tif (scaleLabel.display) {\n\t\t\t// Draw the scale label\n\t\t\tvar scaleLabelX;\n\t\t\tvar scaleLabelY;\n\t\t\tvar rotation = 0;\n\t\t\tvar halfLineHeight = scaleLabelFont.lineHeight / 2;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tscaleLabelX = me.left + ((me.right - me.left) / 2); // midpoint of the width\n\t\t\t\tscaleLabelY = position === 'bottom'\n\t\t\t\t\t? me.bottom - halfLineHeight - scaleLabelPadding.bottom\n\t\t\t\t\t: me.top + halfLineHeight + scaleLabelPadding.top;\n\t\t\t} else {\n\t\t\t\tvar isLeft = position === 'left';\n\t\t\t\tscaleLabelX = isLeft\n\t\t\t\t\t? me.left + halfLineHeight + scaleLabelPadding.top\n\t\t\t\t\t: me.right - halfLineHeight - scaleLabelPadding.top;\n\t\t\t\tscaleLabelY = me.top + ((me.bottom - me.top) / 2);\n\t\t\t\trotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n\t\t\t}\n\n\t\t\tcontext.save();\n\t\t\tcontext.translate(scaleLabelX, scaleLabelY);\n\t\t\tcontext.rotate(rotation);\n\t\t\tcontext.textAlign = 'center';\n\t\t\tcontext.textBaseline = 'middle';\n\t\t\tcontext.fillStyle = scaleLabelFontColor; // render in correct colour\n\t\t\tcontext.font = scaleLabelFont.string;\n\t\t\tcontext.fillText(scaleLabel.labelString, 0, 0);\n\t\t\tcontext.restore();\n\t\t}\n\n\t\tif (axisWidth) {\n\t\t\t// Draw the line at the edge of the axis\n\t\t\tvar firstLineWidth = axisWidth;\n\t\t\tvar lastLineWidth = valueAtIndexOrDefault(gridLines.lineWidth, ticks.length - 1, 0);\n\t\t\tvar x1, x2, y1, y2;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tx1 = alignPixel(chart, me.left, firstLineWidth) - firstLineWidth / 2;\n\t\t\t\tx2 = alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n\t\t\t\ty1 = y2 = borderValue;\n\t\t\t} else {\n\t\t\t\ty1 = alignPixel(chart, me.top, firstLineWidth) - firstLineWidth / 2;\n\t\t\t\ty2 = alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n\t\t\t\tx1 = x2 = borderValue;\n\t\t\t}\n\n\t\t\tcontext.lineWidth = axisWidth;\n\t\t\tcontext.strokeStyle = valueAtIndexOrDefault(gridLines.color, 0);\n\t\t\tcontext.beginPath();\n\t\t\tcontext.moveTo(x1, y1);\n\t\t\tcontext.lineTo(x2, y2);\n\t\t\tcontext.stroke();\n\t\t}\n\t}\n});\n\nvar defaultConfig = {\n\tposition: 'bottom'\n};\n\nvar scale_category = core_scale.extend({\n\t/**\n\t* Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n\t* else fall back to data.labels\n\t* @private\n\t*/\n\tgetLabels: function() {\n\t\tvar data = this.chart.data;\n\t\treturn this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n\t},\n\n\tdetermineDataLimits: function() {\n\t\tvar me = this;\n\t\tvar labels = me.getLabels();\n\t\tme.minIndex = 0;\n\t\tme.maxIndex = labels.length - 1;\n\t\tvar findIndex;\n\n\t\tif (me.options.ticks.min !== undefined) {\n\t\t\t// user specified min value\n\t\t\tfindIndex = labels.indexOf(me.options.ticks.min);\n\t\t\tme.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n\t\t}\n\n\t\tif (me.options.ticks.max !== undefined) {\n\t\t\t// user specified max value\n\t\t\tfindIndex = labels.indexOf(me.options.ticks.max);\n\t\t\tme.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n\t\t}\n\n\t\tme.min = labels[me.minIndex];\n\t\tme.max = labels[me.maxIndex];\n\t},\n\n\tbuildTicks: function() {\n\t\tvar me = this;\n\t\tvar labels = me.getLabels();\n\t\t// If we are viewing some subset of labels, slice the original array\n\t\tme.ticks = (me.minIndex === 0 && me.maxIndex === labels.length - 1) ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n\t},\n\n\tgetLabelForIndex: function(index, datasetIndex) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\n\t\tif (chart.getDatasetMeta(datasetIndex).controller._getValueScaleId() === me.id) {\n\t\t\treturn me.getRightValue(chart.data.datasets[datasetIndex].data[index]);\n\t\t}\n\n\t\treturn me.ticks[index - me.minIndex];\n\t},\n\n\t// Used to get data value locations.  Value can either be an index or a numerical value\n\tgetPixelForValue: function(value, index) {\n\t\tvar me = this;\n\t\tvar offset = me.options.offset;\n\t\t// 1 is added because we need the length but we have the indexes\n\t\tvar offsetAmt = Math.max((me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1)), 1);\n\n\t\t// If value is a data object, then index is the index in the data array,\n\t\t// not the index of the scale. We need to change that.\n\t\tvar valueCategory;\n\t\tif (value !== undefined && value !== null) {\n\t\t\tvalueCategory = me.isHorizontal() ? value.x : value.y;\n\t\t}\n\t\tif (valueCategory !== undefined || (value !== undefined && isNaN(index))) {\n\t\t\tvar labels = me.getLabels();\n\t\t\tvalue = valueCategory || value;\n\t\t\tvar idx = labels.indexOf(value);\n\t\t\tindex = idx !== -1 ? idx : index;\n\t\t}\n\n\t\tif (me.isHorizontal()) {\n\t\t\tvar valueWidth = me.width / offsetAmt;\n\t\t\tvar widthOffset = (valueWidth * (index - me.minIndex));\n\n\t\t\tif (offset) {\n\t\t\t\twidthOffset += (valueWidth / 2);\n\t\t\t}\n\n\t\t\treturn me.left + widthOffset;\n\t\t}\n\t\tvar valueHeight = me.height / offsetAmt;\n\t\tvar heightOffset = (valueHeight * (index - me.minIndex));\n\n\t\tif (offset) {\n\t\t\theightOffset += (valueHeight / 2);\n\t\t}\n\n\t\treturn me.top + heightOffset;\n\t},\n\n\tgetPixelForTick: function(index) {\n\t\treturn this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n\t},\n\n\tgetValueForPixel: function(pixel) {\n\t\tvar me = this;\n\t\tvar offset = me.options.offset;\n\t\tvar value;\n\t\tvar offsetAmt = Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n\t\tvar horz = me.isHorizontal();\n\t\tvar valueDimension = (horz ? me.width : me.height) / offsetAmt;\n\n\t\tpixel -= horz ? me.left : me.top;\n\n\t\tif (offset) {\n\t\t\tpixel -= (valueDimension / 2);\n\t\t}\n\n\t\tif (pixel <= 0) {\n\t\t\tvalue = 0;\n\t\t} else {\n\t\t\tvalue = Math.round(pixel / valueDimension);\n\t\t}\n\n\t\treturn value + me.minIndex;\n\t},\n\n\tgetBasePixel: function() {\n\t\treturn this.bottom;\n\t}\n});\n\n// INTERNAL: static default options, registered in src/index.js\nvar _defaults = defaultConfig;\nscale_category._defaults = _defaults;\n\nvar noop = helpers$1.noop;\nvar isNullOrUndef = helpers$1.isNullOrUndef;\n\n/**\n * Generate a set of linear ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {number[]} array of tick values\n */\nfunction generateTicks(generationOptions, dataRange) {\n\tvar ticks = [];\n\t// To get a \"nice\" value for the tick spacing, we will use the appropriately named\n\t// \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n\t// for details.\n\n\tvar MIN_SPACING = 1e-14;\n\tvar stepSize = generationOptions.stepSize;\n\tvar unit = stepSize || 1;\n\tvar maxNumSpaces = generationOptions.maxTicks - 1;\n\tvar min = generationOptions.min;\n\tvar max = generationOptions.max;\n\tvar precision = generationOptions.precision;\n\tvar rmin = dataRange.min;\n\tvar rmax = dataRange.max;\n\tvar spacing = helpers$1.niceNum((rmax - rmin) / maxNumSpaces / unit) * unit;\n\tvar factor, niceMin, niceMax, numSpaces;\n\n\t// Beyond MIN_SPACING floating point numbers being to lose precision\n\t// such that we can't do the math necessary to generate ticks\n\tif (spacing < MIN_SPACING && isNullOrUndef(min) && isNullOrUndef(max)) {\n\t\treturn [rmin, rmax];\n\t}\n\n\tnumSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\tif (numSpaces > maxNumSpaces) {\n\t\t// If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n\t\tspacing = helpers$1.niceNum(numSpaces * spacing / maxNumSpaces / unit) * unit;\n\t}\n\n\tif (stepSize || isNullOrUndef(precision)) {\n\t\t// If a precision is not specified, calculate factor based on spacing\n\t\tfactor = Math.pow(10, helpers$1._decimalPlaces(spacing));\n\t} else {\n\t\t// If the user specified a precision, round to that number of decimal places\n\t\tfactor = Math.pow(10, precision);\n\t\tspacing = Math.ceil(spacing * factor) / factor;\n\t}\n\n\tniceMin = Math.floor(rmin / spacing) * spacing;\n\tniceMax = Math.ceil(rmax / spacing) * spacing;\n\n\t// If min, max and stepSize is set and they make an evenly spaced scale use it.\n\tif (stepSize) {\n\t\t// If very close to our whole number, use it.\n\t\tif (!isNullOrUndef(min) && helpers$1.almostWhole(min / spacing, spacing / 1000)) {\n\t\t\tniceMin = min;\n\t\t}\n\t\tif (!isNullOrUndef(max) && helpers$1.almostWhole(max / spacing, spacing / 1000)) {\n\t\t\tniceMax = max;\n\t\t}\n\t}\n\n\tnumSpaces = (niceMax - niceMin) / spacing;\n\t// If very close to our rounded value, use it.\n\tif (helpers$1.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n\t\tnumSpaces = Math.round(numSpaces);\n\t} else {\n\t\tnumSpaces = Math.ceil(numSpaces);\n\t}\n\n\tniceMin = Math.round(niceMin * factor) / factor;\n\tniceMax = Math.round(niceMax * factor) / factor;\n\tticks.push(isNullOrUndef(min) ? niceMin : min);\n\tfor (var j = 1; j < numSpaces; ++j) {\n\t\tticks.push(Math.round((niceMin + j * spacing) * factor) / factor);\n\t}\n\tticks.push(isNullOrUndef(max) ? niceMax : max);\n\n\treturn ticks;\n}\n\nvar scale_linearbase = core_scale.extend({\n\tgetRightValue: function(value) {\n\t\tif (typeof value === 'string') {\n\t\t\treturn +value;\n\t\t}\n\t\treturn core_scale.prototype.getRightValue.call(this, value);\n\t},\n\n\thandleTickRangeOptions: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar tickOpts = opts.ticks;\n\n\t\t// If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n\t\t// do nothing since that would make the chart weird. If the user really wants a weird chart\n\t\t// axis, they can manually override it\n\t\tif (tickOpts.beginAtZero) {\n\t\t\tvar minSign = helpers$1.sign(me.min);\n\t\t\tvar maxSign = helpers$1.sign(me.max);\n\n\t\t\tif (minSign < 0 && maxSign < 0) {\n\t\t\t\t// move the top up to 0\n\t\t\t\tme.max = 0;\n\t\t\t} else if (minSign > 0 && maxSign > 0) {\n\t\t\t\t// move the bottom down to 0\n\t\t\t\tme.min = 0;\n\t\t\t}\n\t\t}\n\n\t\tvar setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n\t\tvar setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n\t\tif (tickOpts.min !== undefined) {\n\t\t\tme.min = tickOpts.min;\n\t\t} else if (tickOpts.suggestedMin !== undefined) {\n\t\t\tif (me.min === null) {\n\t\t\t\tme.min = tickOpts.suggestedMin;\n\t\t\t} else {\n\t\t\t\tme.min = Math.min(me.min, tickOpts.suggestedMin);\n\t\t\t}\n\t\t}\n\n\t\tif (tickOpts.max !== undefined) {\n\t\t\tme.max = tickOpts.max;\n\t\t} else if (tickOpts.suggestedMax !== undefined) {\n\t\t\tif (me.max === null) {\n\t\t\t\tme.max = tickOpts.suggestedMax;\n\t\t\t} else {\n\t\t\t\tme.max = Math.max(me.max, tickOpts.suggestedMax);\n\t\t\t}\n\t\t}\n\n\t\tif (setMin !== setMax) {\n\t\t\t// We set the min or the max but not both.\n\t\t\t// So ensure that our range is good\n\t\t\t// Inverted or 0 length range can happen when\n\t\t\t// ticks.min is set, and no datasets are visible\n\t\t\tif (me.min >= me.max) {\n\t\t\t\tif (setMin) {\n\t\t\t\t\tme.max = me.min + 1;\n\t\t\t\t} else {\n\t\t\t\t\tme.min = me.max - 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (me.min === me.max) {\n\t\t\tme.max++;\n\n\t\t\tif (!tickOpts.beginAtZero) {\n\t\t\t\tme.min--;\n\t\t\t}\n\t\t}\n\t},\n\n\tgetTickLimit: function() {\n\t\tvar me = this;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar stepSize = tickOpts.stepSize;\n\t\tvar maxTicksLimit = tickOpts.maxTicksLimit;\n\t\tvar maxTicks;\n\n\t\tif (stepSize) {\n\t\t\tmaxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n\t\t} else {\n\t\t\tmaxTicks = me._computeTickLimit();\n\t\t\tmaxTicksLimit = maxTicksLimit || 11;\n\t\t}\n\n\t\tif (maxTicksLimit) {\n\t\t\tmaxTicks = Math.min(maxTicksLimit, maxTicks);\n\t\t}\n\n\t\treturn maxTicks;\n\t},\n\n\t_computeTickLimit: function() {\n\t\treturn Number.POSITIVE_INFINITY;\n\t},\n\n\thandleDirectionalChanges: noop,\n\n\tbuildTicks: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar tickOpts = opts.ticks;\n\n\t\t// Figure out what the max number of ticks we can support it is based on the size of\n\t\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n\t\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n\t\t// the graph. Make sure we always have at least 2 ticks\n\t\tvar maxTicks = me.getTickLimit();\n\t\tmaxTicks = Math.max(2, maxTicks);\n\n\t\tvar numericGeneratorOptions = {\n\t\t\tmaxTicks: maxTicks,\n\t\t\tmin: tickOpts.min,\n\t\t\tmax: tickOpts.max,\n\t\t\tprecision: tickOpts.precision,\n\t\t\tstepSize: helpers$1.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n\t\t};\n\t\tvar ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n\n\t\tme.handleDirectionalChanges();\n\n\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t// range of the scale\n\t\tme.max = helpers$1.max(ticks);\n\t\tme.min = helpers$1.min(ticks);\n\n\t\tif (tickOpts.reverse) {\n\t\t\tticks.reverse();\n\n\t\t\tme.start = me.max;\n\t\t\tme.end = me.min;\n\t\t} else {\n\t\t\tme.start = me.min;\n\t\t\tme.end = me.max;\n\t\t}\n\t},\n\n\tconvertTicksToLabels: function() {\n\t\tvar me = this;\n\t\tme.ticksAsNumbers = me.ticks.slice();\n\t\tme.zeroLineIndex = me.ticks.indexOf(0);\n\n\t\tcore_scale.prototype.convertTicksToLabels.call(me);\n\t}\n});\n\nvar defaultConfig$1 = {\n\tposition: 'left',\n\tticks: {\n\t\tcallback: core_ticks.formatters.linear\n\t}\n};\n\nvar scale_linear = scale_linearbase.extend({\n\tdetermineDataLimits: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar chart = me.chart;\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar isHorizontal = me.isHorizontal();\n\t\tvar DEFAULT_MIN = 0;\n\t\tvar DEFAULT_MAX = 1;\n\n\t\tfunction IDMatches(meta) {\n\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t}\n\n\t\t// First Calculate the range\n\t\tme.min = null;\n\t\tme.max = null;\n\n\t\tvar hasStacks = opts.stacked;\n\t\tif (hasStacks === undefined) {\n\t\t\thelpers$1.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\tif (hasStacks) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\thasStacks = true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (opts.stacked || hasStacks) {\n\t\t\tvar valuesPerStack = {};\n\n\t\t\thelpers$1.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\tvar key = [\n\t\t\t\t\tmeta.type,\n\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\tmeta.stack\n\t\t\t\t].join('.');\n\n\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\tvaluesPerStack[key] = {\n\t\t\t\t\t\tpositiveValues: [],\n\t\t\t\t\t\tnegativeValues: []\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// Store these per type\n\t\t\t\tvar positiveValues = valuesPerStack[key].positiveValues;\n\t\t\t\tvar negativeValues = valuesPerStack[key].negativeValues;\n\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\thelpers$1.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tpositiveValues[index] = positiveValues[index] || 0;\n\t\t\t\t\t\tnegativeValues[index] = negativeValues[index] || 0;\n\n\t\t\t\t\t\tif (opts.relativePoints) {\n\t\t\t\t\t\t\tpositiveValues[index] = 100;\n\t\t\t\t\t\t} else if (value < 0) {\n\t\t\t\t\t\t\tnegativeValues[index] += value;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpositiveValues[index] += value;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\thelpers$1.each(valuesPerStack, function(valuesForType) {\n\t\t\t\tvar values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n\t\t\t\tvar minVal = helpers$1.min(values);\n\t\t\t\tvar maxVal = helpers$1.max(values);\n\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t});\n\n\t\t} else {\n\t\t\thelpers$1.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\thelpers$1.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tme.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n\t\tme.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX;\n\n\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\tthis.handleTickRangeOptions();\n\t},\n\n\t// Returns the maximum number of ticks based on the scale dimension\n\t_computeTickLimit: function() {\n\t\tvar me = this;\n\t\tvar tickFont;\n\n\t\tif (me.isHorizontal()) {\n\t\t\treturn Math.ceil(me.width / 40);\n\t\t}\n\t\ttickFont = helpers$1.options._parseFont(me.options.ticks);\n\t\treturn Math.ceil(me.height / tickFont.lineHeight);\n\t},\n\n\t// Called after the ticks are built. We need\n\thandleDirectionalChanges: function() {\n\t\tif (!this.isHorizontal()) {\n\t\t\t// We are in a vertical orientation. The top value is the highest. So reverse the array\n\t\t\tthis.ticks.reverse();\n\t\t}\n\t},\n\n\tgetLabelForIndex: function(index, datasetIndex) {\n\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t},\n\n\t// Utils\n\tgetPixelForValue: function(value) {\n\t\t// This must be called after fit has been run so that\n\t\t// this.left, this.top, this.right, and this.bottom have been defined\n\t\tvar me = this;\n\t\tvar start = me.start;\n\n\t\tvar rightValue = +me.getRightValue(value);\n\t\tvar pixel;\n\t\tvar range = me.end - start;\n\n\t\tif (me.isHorizontal()) {\n\t\t\tpixel = me.left + (me.width / range * (rightValue - start));\n\t\t} else {\n\t\t\tpixel = me.bottom - (me.height / range * (rightValue - start));\n\t\t}\n\t\treturn pixel;\n\t},\n\n\tgetValueForPixel: function(pixel) {\n\t\tvar me = this;\n\t\tvar isHorizontal = me.isHorizontal();\n\t\tvar innerDimension = isHorizontal ? me.width : me.height;\n\t\tvar offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n\t\treturn me.start + ((me.end - me.start) * offset);\n\t},\n\n\tgetPixelForTick: function(index) {\n\t\treturn this.getPixelForValue(this.ticksAsNumbers[index]);\n\t}\n});\n\n// INTERNAL: static default options, registered in src/index.js\nvar _defaults$1 = defaultConfig$1;\nscale_linear._defaults = _defaults$1;\n\nvar valueOrDefault$a = helpers$1.valueOrDefault;\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {number[]} array of tick values\n */\nfunction generateTicks$1(generationOptions, dataRange) {\n\tvar ticks = [];\n\n\tvar tickVal = valueOrDefault$a(generationOptions.min, Math.pow(10, Math.floor(helpers$1.log10(dataRange.min))));\n\n\tvar endExp = Math.floor(helpers$1.log10(dataRange.max));\n\tvar endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n\tvar exp, significand;\n\n\tif (tickVal === 0) {\n\t\texp = Math.floor(helpers$1.log10(dataRange.minNotZero));\n\t\tsignificand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n\n\t\tticks.push(tickVal);\n\t\ttickVal = significand * Math.pow(10, exp);\n\t} else {\n\t\texp = Math.floor(helpers$1.log10(tickVal));\n\t\tsignificand = Math.floor(tickVal / Math.pow(10, exp));\n\t}\n\tvar precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n\tdo {\n\t\tticks.push(tickVal);\n\n\t\t++significand;\n\t\tif (significand === 10) {\n\t\t\tsignificand = 1;\n\t\t\t++exp;\n\t\t\tprecision = exp >= 0 ? 1 : precision;\n\t\t}\n\n\t\ttickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n\t} while (exp < endExp || (exp === endExp && significand < endSignificand));\n\n\tvar lastTick = valueOrDefault$a(generationOptions.max, tickVal);\n\tticks.push(lastTick);\n\n\treturn ticks;\n}\n\nvar defaultConfig$2 = {\n\tposition: 'left',\n\n\t// label settings\n\tticks: {\n\t\tcallback: core_ticks.formatters.logarithmic\n\t}\n};\n\n// TODO(v3): change this to positiveOrDefault\nfunction nonNegativeOrDefault(value, defaultValue) {\n\treturn helpers$1.isFinite(value) && value >= 0 ? value : defaultValue;\n}\n\nvar scale_logarithmic = core_scale.extend({\n\tdetermineDataLimits: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar chart = me.chart;\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar isHorizontal = me.isHorizontal();\n\t\tfunction IDMatches(meta) {\n\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t}\n\n\t\t// Calculate Range\n\t\tme.min = null;\n\t\tme.max = null;\n\t\tme.minNotZero = null;\n\n\t\tvar hasStacks = opts.stacked;\n\t\tif (hasStacks === undefined) {\n\t\t\thelpers$1.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\tif (hasStacks) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\thasStacks = true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (opts.stacked || hasStacks) {\n\t\t\tvar valuesPerStack = {};\n\n\t\t\thelpers$1.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\tvar key = [\n\t\t\t\t\tmeta.type,\n\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\tmeta.stack\n\t\t\t\t].join('.');\n\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\t\tvaluesPerStack[key] = [];\n\t\t\t\t\t}\n\n\t\t\t\t\thelpers$1.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar values = valuesPerStack[key];\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t// invalid, hidden and negative values are ignored\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden || value < 0) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvalues[index] = values[index] || 0;\n\t\t\t\t\t\tvalues[index] += value;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\thelpers$1.each(valuesPerStack, function(valuesForType) {\n\t\t\t\tif (valuesForType.length > 0) {\n\t\t\t\t\tvar minVal = helpers$1.min(valuesForType);\n\t\t\t\t\tvar maxVal = helpers$1.max(valuesForType);\n\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t\t}\n\t\t\t});\n\n\t\t} else {\n\t\t\thelpers$1.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\thelpers$1.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t// invalid, hidden and negative values are ignored\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden || value < 0) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n\t\t\t\t\t\t\tme.minNotZero = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// Common base implementation to handle ticks.min, ticks.max\n\t\tthis.handleTickRangeOptions();\n\t},\n\n\thandleTickRangeOptions: function() {\n\t\tvar me = this;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar DEFAULT_MIN = 1;\n\t\tvar DEFAULT_MAX = 10;\n\n\t\tme.min = nonNegativeOrDefault(tickOpts.min, me.min);\n\t\tme.max = nonNegativeOrDefault(tickOpts.max, me.max);\n\n\t\tif (me.min === me.max) {\n\t\t\tif (me.min !== 0 && me.min !== null) {\n\t\t\t\tme.min = Math.pow(10, Math.floor(helpers$1.log10(me.min)) - 1);\n\t\t\t\tme.max = Math.pow(10, Math.floor(helpers$1.log10(me.max)) + 1);\n\t\t\t} else {\n\t\t\t\tme.min = DEFAULT_MIN;\n\t\t\t\tme.max = DEFAULT_MAX;\n\t\t\t}\n\t\t}\n\t\tif (me.min === null) {\n\t\t\tme.min = Math.pow(10, Math.floor(helpers$1.log10(me.max)) - 1);\n\t\t}\n\t\tif (me.max === null) {\n\t\t\tme.max = me.min !== 0\n\t\t\t\t? Math.pow(10, Math.floor(helpers$1.log10(me.min)) + 1)\n\t\t\t\t: DEFAULT_MAX;\n\t\t}\n\t\tif (me.minNotZero === null) {\n\t\t\tif (me.min > 0) {\n\t\t\t\tme.minNotZero = me.min;\n\t\t\t} else if (me.max < 1) {\n\t\t\t\tme.minNotZero = Math.pow(10, Math.floor(helpers$1.log10(me.max)));\n\t\t\t} else {\n\t\t\t\tme.minNotZero = DEFAULT_MIN;\n\t\t\t}\n\t\t}\n\t},\n\n\tbuildTicks: function() {\n\t\tvar me = this;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar reverse = !me.isHorizontal();\n\n\t\tvar generationOptions = {\n\t\t\tmin: nonNegativeOrDefault(tickOpts.min),\n\t\t\tmax: nonNegativeOrDefault(tickOpts.max)\n\t\t};\n\t\tvar ticks = me.ticks = generateTicks$1(generationOptions, me);\n\n\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t// range of the scale\n\t\tme.max = helpers$1.max(ticks);\n\t\tme.min = helpers$1.min(ticks);\n\n\t\tif (tickOpts.reverse) {\n\t\t\treverse = !reverse;\n\t\t\tme.start = me.max;\n\t\t\tme.end = me.min;\n\t\t} else {\n\t\t\tme.start = me.min;\n\t\t\tme.end = me.max;\n\t\t}\n\t\tif (reverse) {\n\t\t\tticks.reverse();\n\t\t}\n\t},\n\n\tconvertTicksToLabels: function() {\n\t\tthis.tickValues = this.ticks.slice();\n\n\t\tcore_scale.prototype.convertTicksToLabels.call(this);\n\t},\n\n\t// Get the correct tooltip label\n\tgetLabelForIndex: function(index, datasetIndex) {\n\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t},\n\n\tgetPixelForTick: function(index) {\n\t\treturn this.getPixelForValue(this.tickValues[index]);\n\t},\n\n\t/**\n\t * Returns the value of the first tick.\n\t * @param {number} value - The minimum not zero value.\n\t * @return {number} The first tick value.\n\t * @private\n\t */\n\t_getFirstTickValue: function(value) {\n\t\tvar exp = Math.floor(helpers$1.log10(value));\n\t\tvar significand = Math.floor(value / Math.pow(10, exp));\n\n\t\treturn significand * Math.pow(10, exp);\n\t},\n\n\tgetPixelForValue: function(value) {\n\t\tvar me = this;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar reverse = tickOpts.reverse;\n\t\tvar log10 = helpers$1.log10;\n\t\tvar firstTickValue = me._getFirstTickValue(me.minNotZero);\n\t\tvar offset = 0;\n\t\tvar innerDimension, pixel, start, end, sign;\n\n\t\tvalue = +me.getRightValue(value);\n\t\tif (reverse) {\n\t\t\tstart = me.end;\n\t\t\tend = me.start;\n\t\t\tsign = -1;\n\t\t} else {\n\t\t\tstart = me.start;\n\t\t\tend = me.end;\n\t\t\tsign = 1;\n\t\t}\n\t\tif (me.isHorizontal()) {\n\t\t\tinnerDimension = me.width;\n\t\t\tpixel = reverse ? me.right : me.left;\n\t\t} else {\n\t\t\tinnerDimension = me.height;\n\t\t\tsign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\t\t\tpixel = reverse ? me.top : me.bottom;\n\t\t}\n\t\tif (value !== start) {\n\t\t\tif (start === 0) { // include zero tick\n\t\t\t\toffset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n\t\t\t\tinnerDimension -= offset;\n\t\t\t\tstart = firstTickValue;\n\t\t\t}\n\t\t\tif (value !== 0) {\n\t\t\t\toffset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n\t\t\t}\n\t\t\tpixel += sign * offset;\n\t\t}\n\t\treturn pixel;\n\t},\n\n\tgetValueForPixel: function(pixel) {\n\t\tvar me = this;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar reverse = tickOpts.reverse;\n\t\tvar log10 = helpers$1.log10;\n\t\tvar firstTickValue = me._getFirstTickValue(me.minNotZero);\n\t\tvar innerDimension, start, end, value;\n\n\t\tif (reverse) {\n\t\t\tstart = me.end;\n\t\t\tend = me.start;\n\t\t} else {\n\t\t\tstart = me.start;\n\t\t\tend = me.end;\n\t\t}\n\t\tif (me.isHorizontal()) {\n\t\t\tinnerDimension = me.width;\n\t\t\tvalue = reverse ? me.right - pixel : pixel - me.left;\n\t\t} else {\n\t\t\tinnerDimension = me.height;\n\t\t\tvalue = reverse ? pixel - me.top : me.bottom - pixel;\n\t\t}\n\t\tif (value !== start) {\n\t\t\tif (start === 0) { // include zero tick\n\t\t\t\tvar offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n\t\t\t\tvalue -= offset;\n\t\t\t\tinnerDimension -= offset;\n\t\t\t\tstart = firstTickValue;\n\t\t\t}\n\t\t\tvalue *= log10(end) - log10(start);\n\t\t\tvalue /= innerDimension;\n\t\t\tvalue = Math.pow(10, log10(start) + value);\n\t\t}\n\t\treturn value;\n\t}\n});\n\n// INTERNAL: static default options, registered in src/index.js\nvar _defaults$2 = defaultConfig$2;\nscale_logarithmic._defaults = _defaults$2;\n\nvar valueOrDefault$b = helpers$1.valueOrDefault;\nvar valueAtIndexOrDefault$1 = helpers$1.valueAtIndexOrDefault;\nvar resolve$7 = helpers$1.options.resolve;\n\nvar defaultConfig$3 = {\n\tdisplay: true,\n\n\t// Boolean - Whether to animate scaling the chart from the centre\n\tanimate: true,\n\tposition: 'chartArea',\n\n\tangleLines: {\n\t\tdisplay: true,\n\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\tlineWidth: 1,\n\t\tborderDash: [],\n\t\tborderDashOffset: 0.0\n\t},\n\n\tgridLines: {\n\t\tcircular: false\n\t},\n\n\t// label settings\n\tticks: {\n\t\t// Boolean - Show a backdrop to the scale label\n\t\tshowLabelBackdrop: true,\n\n\t\t// String - The colour of the label backdrop\n\t\tbackdropColor: 'rgba(255,255,255,0.75)',\n\n\t\t// Number - The backdrop padding above & below the label in pixels\n\t\tbackdropPaddingY: 2,\n\n\t\t// Number - The backdrop padding to the side of the label in pixels\n\t\tbackdropPaddingX: 2,\n\n\t\tcallback: core_ticks.formatters.linear\n\t},\n\n\tpointLabels: {\n\t\t// Boolean - if true, show point labels\n\t\tdisplay: true,\n\n\t\t// Number - Point label font size in pixels\n\t\tfontSize: 10,\n\n\t\t// Function - Used to convert point labels\n\t\tcallback: function(label) {\n\t\t\treturn label;\n\t\t}\n\t}\n};\n\nfunction getValueCount(scale) {\n\tvar opts = scale.options;\n\treturn opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n}\n\nfunction getTickBackdropHeight(opts) {\n\tvar tickOpts = opts.ticks;\n\n\tif (tickOpts.display && opts.display) {\n\t\treturn valueOrDefault$b(tickOpts.fontSize, core_defaults.global.defaultFontSize) + tickOpts.backdropPaddingY * 2;\n\t}\n\treturn 0;\n}\n\nfunction measureLabelSize(ctx, lineHeight, label) {\n\tif (helpers$1.isArray(label)) {\n\t\treturn {\n\t\t\tw: helpers$1.longestText(ctx, ctx.font, label),\n\t\t\th: label.length * lineHeight\n\t\t};\n\t}\n\n\treturn {\n\t\tw: ctx.measureText(label).width,\n\t\th: lineHeight\n\t};\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n\tif (angle === min || angle === max) {\n\t\treturn {\n\t\t\tstart: pos - (size / 2),\n\t\t\tend: pos + (size / 2)\n\t\t};\n\t} else if (angle < min || angle > max) {\n\t\treturn {\n\t\t\tstart: pos - size,\n\t\t\tend: pos\n\t\t};\n\t}\n\n\treturn {\n\t\tstart: pos,\n\t\tend: pos + size\n\t};\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n\t// Right, this is really confusing and there is a lot of maths going on here\n\t// The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n\t//\n\t// Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n\t//\n\t// Solution:\n\t//\n\t// We assume the radius of the polygon is half the size of the canvas at first\n\t// at each index we check if the text overlaps.\n\t//\n\t// Where it does, we store that angle and that index.\n\t//\n\t// After finding the largest index and angle we calculate how much we need to remove\n\t// from the shape radius to move the point inwards by that x.\n\t//\n\t// We average the left and right distances to get the maximum shape radius that can fit in the box\n\t// along with labels.\n\t//\n\t// Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n\t// on each side, removing that from the size, halving it and adding the left x protrusion width.\n\t//\n\t// This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n\t// and position it in the most space efficient manner\n\t//\n\t// https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n\tvar plFont = helpers$1.options._parseFont(scale.options.pointLabels);\n\n\t// Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n\t// Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\tvar furthestLimits = {\n\t\tl: 0,\n\t\tr: scale.width,\n\t\tt: 0,\n\t\tb: scale.height - scale.paddingTop\n\t};\n\tvar furthestAngles = {};\n\tvar i, textSize, pointPosition;\n\n\tscale.ctx.font = plFont.string;\n\tscale._pointLabelSizes = [];\n\n\tvar valueCount = getValueCount(scale);\n\tfor (i = 0; i < valueCount; i++) {\n\t\tpointPosition = scale.getPointPosition(i, scale.drawingArea + 5);\n\t\ttextSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale.pointLabels[i] || '');\n\t\tscale._pointLabelSizes[i] = textSize;\n\n\t\t// Add quarter circle to make degree 0 mean top of circle\n\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\tvar angle = helpers$1.toDegrees(angleRadians) % 360;\n\t\tvar hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n\t\tvar vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n\t\tif (hLimits.start < furthestLimits.l) {\n\t\t\tfurthestLimits.l = hLimits.start;\n\t\t\tfurthestAngles.l = angleRadians;\n\t\t}\n\n\t\tif (hLimits.end > furthestLimits.r) {\n\t\t\tfurthestLimits.r = hLimits.end;\n\t\t\tfurthestAngles.r = angleRadians;\n\t\t}\n\n\t\tif (vLimits.start < furthestLimits.t) {\n\t\t\tfurthestLimits.t = vLimits.start;\n\t\t\tfurthestAngles.t = angleRadians;\n\t\t}\n\n\t\tif (vLimits.end > furthestLimits.b) {\n\t\t\tfurthestLimits.b = vLimits.end;\n\t\t\tfurthestAngles.b = angleRadians;\n\t\t}\n\t}\n\n\tscale.setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n}\n\nfunction getTextAlignForAngle(angle) {\n\tif (angle === 0 || angle === 180) {\n\t\treturn 'center';\n\t} else if (angle < 180) {\n\t\treturn 'left';\n\t}\n\n\treturn 'right';\n}\n\nfunction fillText(ctx, text, position, lineHeight) {\n\tvar y = position.y + lineHeight / 2;\n\tvar i, ilen;\n\n\tif (helpers$1.isArray(text)) {\n\t\tfor (i = 0, ilen = text.length; i < ilen; ++i) {\n\t\t\tctx.fillText(text[i], position.x, y);\n\t\t\ty += lineHeight;\n\t\t}\n\t} else {\n\t\tctx.fillText(text, position.x, y);\n\t}\n}\n\nfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\n\tif (angle === 90 || angle === 270) {\n\t\tposition.y -= (textSize.h / 2);\n\t} else if (angle > 270 || angle < 90) {\n\t\tposition.y -= textSize.h;\n\t}\n}\n\nfunction drawPointLabels(scale) {\n\tvar ctx = scale.ctx;\n\tvar opts = scale.options;\n\tvar angleLineOpts = opts.angleLines;\n\tvar gridLineOpts = opts.gridLines;\n\tvar pointLabelOpts = opts.pointLabels;\n\tvar lineWidth = valueOrDefault$b(angleLineOpts.lineWidth, gridLineOpts.lineWidth);\n\tvar lineColor = valueOrDefault$b(angleLineOpts.color, gridLineOpts.color);\n\tvar tickBackdropHeight = getTickBackdropHeight(opts);\n\n\tctx.save();\n\tctx.lineWidth = lineWidth;\n\tctx.strokeStyle = lineColor;\n\tif (ctx.setLineDash) {\n\t\tctx.setLineDash(resolve$7([angleLineOpts.borderDash, gridLineOpts.borderDash, []]));\n\t\tctx.lineDashOffset = resolve$7([angleLineOpts.borderDashOffset, gridLineOpts.borderDashOffset, 0.0]);\n\t}\n\n\tvar outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n\n\t// Point Label Font\n\tvar plFont = helpers$1.options._parseFont(pointLabelOpts);\n\n\tctx.font = plFont.string;\n\tctx.textBaseline = 'middle';\n\n\tfor (var i = getValueCount(scale) - 1; i >= 0; i--) {\n\t\tif (angleLineOpts.display && lineWidth && lineColor) {\n\t\t\tvar outerPosition = scale.getPointPosition(i, outerDistance);\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(scale.xCenter, scale.yCenter);\n\t\t\tctx.lineTo(outerPosition.x, outerPosition.y);\n\t\t\tctx.stroke();\n\t\t}\n\n\t\tif (pointLabelOpts.display) {\n\t\t\t// Extra pixels out for some label spacing\n\t\t\tvar extra = (i === 0 ? tickBackdropHeight / 2 : 0);\n\t\t\tvar pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + 5);\n\n\t\t\t// Keep this in loop since we may support array properties here\n\t\t\tvar pointLabelFontColor = valueAtIndexOrDefault$1(pointLabelOpts.fontColor, i, core_defaults.global.defaultFontColor);\n\t\t\tctx.fillStyle = pointLabelFontColor;\n\n\t\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\t\tvar angle = helpers$1.toDegrees(angleRadians);\n\t\t\tctx.textAlign = getTextAlignForAngle(angle);\n\t\t\tadjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n\t\t\tfillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.lineHeight);\n\t\t}\n\t}\n\tctx.restore();\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, index) {\n\tvar ctx = scale.ctx;\n\tvar circular = gridLineOpts.circular;\n\tvar valueCount = getValueCount(scale);\n\tvar lineColor = valueAtIndexOrDefault$1(gridLineOpts.color, index - 1);\n\tvar lineWidth = valueAtIndexOrDefault$1(gridLineOpts.lineWidth, index - 1);\n\tvar pointPosition;\n\n\tif ((!circular && !valueCount) || !lineColor || !lineWidth) {\n\t\treturn;\n\t}\n\n\tctx.save();\n\tctx.strokeStyle = lineColor;\n\tctx.lineWidth = lineWidth;\n\tif (ctx.setLineDash) {\n\t\tctx.setLineDash(gridLineOpts.borderDash || []);\n\t\tctx.lineDashOffset = gridLineOpts.borderDashOffset || 0.0;\n\t}\n\n\tctx.beginPath();\n\tif (circular) {\n\t\t// Draw circular arcs between the points\n\t\tctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n\t} else {\n\t\t// Draw straight lines connecting each index\n\t\tpointPosition = scale.getPointPosition(0, radius);\n\t\tctx.moveTo(pointPosition.x, pointPosition.y);\n\n\t\tfor (var i = 1; i < valueCount; i++) {\n\t\t\tpointPosition = scale.getPointPosition(i, radius);\n\t\t\tctx.lineTo(pointPosition.x, pointPosition.y);\n\t\t}\n\t}\n\tctx.closePath();\n\tctx.stroke();\n\tctx.restore();\n}\n\nfunction numberOrZero(param) {\n\treturn helpers$1.isNumber(param) ? param : 0;\n}\n\nvar scale_radialLinear = scale_linearbase.extend({\n\tsetDimensions: function() {\n\t\tvar me = this;\n\n\t\t// Set the unconstrained dimension before label rotation\n\t\tme.width = me.maxWidth;\n\t\tme.height = me.maxHeight;\n\t\tme.paddingTop = getTickBackdropHeight(me.options) / 2;\n\t\tme.xCenter = Math.floor(me.width / 2);\n\t\tme.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n\t\tme.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n\t},\n\n\tdetermineDataLimits: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar min = Number.POSITIVE_INFINITY;\n\t\tvar max = Number.NEGATIVE_INFINITY;\n\n\t\thelpers$1.each(chart.data.datasets, function(dataset, datasetIndex) {\n\t\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\n\t\t\t\thelpers$1.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tmin = Math.min(value, min);\n\t\t\t\t\tmax = Math.max(value, max);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tme.min = (min === Number.POSITIVE_INFINITY ? 0 : min);\n\t\tme.max = (max === Number.NEGATIVE_INFINITY ? 0 : max);\n\n\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\tme.handleTickRangeOptions();\n\t},\n\n\t// Returns the maximum number of ticks based on the scale dimension\n\t_computeTickLimit: function() {\n\t\treturn Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n\t},\n\n\tconvertTicksToLabels: function() {\n\t\tvar me = this;\n\n\t\tscale_linearbase.prototype.convertTicksToLabels.call(me);\n\n\t\t// Point labels\n\t\tme.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n\t},\n\n\tgetLabelForIndex: function(index, datasetIndex) {\n\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t},\n\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\n\t\tif (opts.display && opts.pointLabels.display) {\n\t\t\tfitWithPointLabels(me);\n\t\t} else {\n\t\t\tme.setCenterPoint(0, 0, 0, 0);\n\t\t}\n\t},\n\n\t/**\n\t * Set radius reductions and determine new radius and center point\n\t * @private\n\t */\n\tsetReductions: function(largestPossibleRadius, furthestLimits, furthestAngles) {\n\t\tvar me = this;\n\t\tvar radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n\t\tvar radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n\t\tvar radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n\t\tvar radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n\n\t\tradiusReductionLeft = numberOrZero(radiusReductionLeft);\n\t\tradiusReductionRight = numberOrZero(radiusReductionRight);\n\t\tradiusReductionTop = numberOrZero(radiusReductionTop);\n\t\tradiusReductionBottom = numberOrZero(radiusReductionBottom);\n\n\t\tme.drawingArea = Math.min(\n\t\t\tMath.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n\t\t\tMath.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n\t\tme.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n\t},\n\n\tsetCenterPoint: function(leftMovement, rightMovement, topMovement, bottomMovement) {\n\t\tvar me = this;\n\t\tvar maxRight = me.width - rightMovement - me.drawingArea;\n\t\tvar maxLeft = leftMovement + me.drawingArea;\n\t\tvar maxTop = topMovement + me.drawingArea;\n\t\tvar maxBottom = (me.height - me.paddingTop) - bottomMovement - me.drawingArea;\n\n\t\tme.xCenter = Math.floor(((maxLeft + maxRight) / 2) + me.left);\n\t\tme.yCenter = Math.floor(((maxTop + maxBottom) / 2) + me.top + me.paddingTop);\n\t},\n\n\tgetIndexAngle: function(index) {\n\t\tvar angleMultiplier = (Math.PI * 2) / getValueCount(this);\n\t\tvar startAngle = this.chart.options && this.chart.options.startAngle ?\n\t\t\tthis.chart.options.startAngle :\n\t\t\t0;\n\n\t\tvar startAngleRadians = startAngle * Math.PI * 2 / 360;\n\n\t\t// Start from the top instead of right, so remove a quarter of the circle\n\t\treturn index * angleMultiplier + startAngleRadians;\n\t},\n\n\tgetDistanceFromCenterForValue: function(value) {\n\t\tvar me = this;\n\n\t\tif (value === null) {\n\t\t\treturn 0; // null always in center\n\t\t}\n\n\t\t// Take into account half font size + the yPadding of the top value\n\t\tvar scalingFactor = me.drawingArea / (me.max - me.min);\n\t\tif (me.options.ticks.reverse) {\n\t\t\treturn (me.max - value) * scalingFactor;\n\t\t}\n\t\treturn (value - me.min) * scalingFactor;\n\t},\n\n\tgetPointPosition: function(index, distanceFromCenter) {\n\t\tvar me = this;\n\t\tvar thisAngle = me.getIndexAngle(index) - (Math.PI / 2);\n\t\treturn {\n\t\t\tx: Math.cos(thisAngle) * distanceFromCenter + me.xCenter,\n\t\t\ty: Math.sin(thisAngle) * distanceFromCenter + me.yCenter\n\t\t};\n\t},\n\n\tgetPointPositionForValue: function(index, value) {\n\t\treturn this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n\t},\n\n\tgetBasePosition: function() {\n\t\tvar me = this;\n\t\tvar min = me.min;\n\t\tvar max = me.max;\n\n\t\treturn me.getPointPositionForValue(0,\n\t\t\tme.beginAtZero ? 0 :\n\t\t\tmin < 0 && max < 0 ? max :\n\t\t\tmin > 0 && max > 0 ? min :\n\t\t\t0);\n\t},\n\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar gridLineOpts = opts.gridLines;\n\t\tvar tickOpts = opts.ticks;\n\n\t\tif (opts.display) {\n\t\t\tvar ctx = me.ctx;\n\t\t\tvar startAngle = this.getIndexAngle(0);\n\t\t\tvar tickFont = helpers$1.options._parseFont(tickOpts);\n\n\t\t\tif (opts.angleLines.display || opts.pointLabels.display) {\n\t\t\t\tdrawPointLabels(me);\n\t\t\t}\n\n\t\t\thelpers$1.each(me.ticks, function(label, index) {\n\t\t\t\t// Don't draw a centre value (if it is minimum)\n\t\t\t\tif (index > 0 || tickOpts.reverse) {\n\t\t\t\t\tvar yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]);\n\n\t\t\t\t\t// Draw circular lines around the scale\n\t\t\t\t\tif (gridLineOpts.display && index !== 0) {\n\t\t\t\t\t\tdrawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (tickOpts.display) {\n\t\t\t\t\t\tvar tickFontColor = valueOrDefault$b(tickOpts.fontColor, core_defaults.global.defaultFontColor);\n\t\t\t\t\t\tctx.font = tickFont.string;\n\n\t\t\t\t\t\tctx.save();\n\t\t\t\t\t\tctx.translate(me.xCenter, me.yCenter);\n\t\t\t\t\t\tctx.rotate(startAngle);\n\n\t\t\t\t\t\tif (tickOpts.showLabelBackdrop) {\n\t\t\t\t\t\t\tvar labelWidth = ctx.measureText(label).width;\n\t\t\t\t\t\t\tctx.fillStyle = tickOpts.backdropColor;\n\t\t\t\t\t\t\tctx.fillRect(\n\t\t\t\t\t\t\t\t-labelWidth / 2 - tickOpts.backdropPaddingX,\n\t\t\t\t\t\t\t\t-yCenterOffset - tickFont.size / 2 - tickOpts.backdropPaddingY,\n\t\t\t\t\t\t\t\tlabelWidth + tickOpts.backdropPaddingX * 2,\n\t\t\t\t\t\t\t\ttickFont.size + tickOpts.backdropPaddingY * 2\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\t\tctx.textBaseline = 'middle';\n\t\t\t\t\t\tctx.fillStyle = tickFontColor;\n\t\t\t\t\t\tctx.fillText(label, 0, -yCenterOffset);\n\t\t\t\t\t\tctx.restore();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n});\n\n// INTERNAL: static default options, registered in src/index.js\nvar _defaults$3 = defaultConfig$3;\nscale_radialLinear._defaults = _defaults$3;\n\nvar valueOrDefault$c = helpers$1.valueOrDefault;\n\n// Integer constants are from the ES6 spec.\nvar MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\nvar MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n\nvar INTERVALS = {\n\tmillisecond: {\n\t\tcommon: true,\n\t\tsize: 1,\n\t\tsteps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n\t},\n\tsecond: {\n\t\tcommon: true,\n\t\tsize: 1000,\n\t\tsteps: [1, 2, 5, 10, 15, 30]\n\t},\n\tminute: {\n\t\tcommon: true,\n\t\tsize: 60000,\n\t\tsteps: [1, 2, 5, 10, 15, 30]\n\t},\n\thour: {\n\t\tcommon: true,\n\t\tsize: 3600000,\n\t\tsteps: [1, 2, 3, 6, 12]\n\t},\n\tday: {\n\t\tcommon: true,\n\t\tsize: 86400000,\n\t\tsteps: [1, 2, 5]\n\t},\n\tweek: {\n\t\tcommon: false,\n\t\tsize: 604800000,\n\t\tsteps: [1, 2, 3, 4]\n\t},\n\tmonth: {\n\t\tcommon: true,\n\t\tsize: 2.628e9,\n\t\tsteps: [1, 2, 3]\n\t},\n\tquarter: {\n\t\tcommon: false,\n\t\tsize: 7.884e9,\n\t\tsteps: [1, 2, 3, 4]\n\t},\n\tyear: {\n\t\tcommon: true,\n\t\tsize: 3.154e10\n\t}\n};\n\nvar UNITS = Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n\treturn a - b;\n}\n\nfunction arrayUnique(items) {\n\tvar hash = {};\n\tvar out = [];\n\tvar i, ilen, item;\n\n\tfor (i = 0, ilen = items.length; i < ilen; ++i) {\n\t\titem = items[i];\n\t\tif (!hash[item]) {\n\t\t\thash[item] = true;\n\t\t\tout.push(item);\n\t\t}\n\t}\n\n\treturn out;\n}\n\n/**\n * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n * extremity (left + width or top + height). Note that it would be more optimized to directly\n * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n *\n * @param {number[]} timestamps - timestamps sorted from lowest to highest.\n * @param {string} distribution - If 'linear', timestamps will be spread linearly along the min\n * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n * If 'series', timestamps will be positioned at the same distance from each other. In this\n * case, only timestamps that break the time linearity are registered, meaning that in the\n * best case, all timestamps are linear, the table contains only min and max.\n */\nfunction buildLookupTable(timestamps, min, max, distribution) {\n\tif (distribution === 'linear' || !timestamps.length) {\n\t\treturn [\n\t\t\t{time: min, pos: 0},\n\t\t\t{time: max, pos: 1}\n\t\t];\n\t}\n\n\tvar table = [];\n\tvar items = [min];\n\tvar i, ilen, prev, curr, next;\n\n\tfor (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n\t\tcurr = timestamps[i];\n\t\tif (curr > min && curr < max) {\n\t\t\titems.push(curr);\n\t\t}\n\t}\n\n\titems.push(max);\n\n\tfor (i = 0, ilen = items.length; i < ilen; ++i) {\n\t\tnext = items[i + 1];\n\t\tprev = items[i - 1];\n\t\tcurr = items[i];\n\n\t\t// only add points that breaks the scale linearity\n\t\tif (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n\t\t\ttable.push({time: curr, pos: i / (ilen - 1)});\n\t\t}\n\t}\n\n\treturn table;\n}\n\n// @see adapted from https://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\nfunction lookup(table, key, value) {\n\tvar lo = 0;\n\tvar hi = table.length - 1;\n\tvar mid, i0, i1;\n\n\twhile (lo >= 0 && lo <= hi) {\n\t\tmid = (lo + hi) >> 1;\n\t\ti0 = table[mid - 1] || null;\n\t\ti1 = table[mid];\n\n\t\tif (!i0) {\n\t\t\t// given value is outside table (before first item)\n\t\t\treturn {lo: null, hi: i1};\n\t\t} else if (i1[key] < value) {\n\t\t\tlo = mid + 1;\n\t\t} else if (i0[key] > value) {\n\t\t\thi = mid - 1;\n\t\t} else {\n\t\t\treturn {lo: i0, hi: i1};\n\t\t}\n\t}\n\n\t// given value is outside table (after last item)\n\treturn {lo: i1, hi: null};\n}\n\n/**\n * Linearly interpolates the given source `value` using the table items `skey` values and\n * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n * index [0, 1] or [n - 1, n] are used for the interpolation.\n */\nfunction interpolate$1(table, skey, sval, tkey) {\n\tvar range = lookup(table, skey, sval);\n\n\t// Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\tvar prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n\tvar next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n\n\tvar span = next[skey] - prev[skey];\n\tvar ratio = span ? (sval - prev[skey]) / span : 0;\n\tvar offset = (next[tkey] - prev[tkey]) * ratio;\n\n\treturn prev[tkey] + offset;\n}\n\nfunction toTimestamp(scale, input) {\n\tvar adapter = scale._adapter;\n\tvar options = scale.options.time;\n\tvar parser = options.parser;\n\tvar format = parser || options.format;\n\tvar value = input;\n\n\tif (typeof parser === 'function') {\n\t\tvalue = parser(value);\n\t}\n\n\t// Only parse if its not a timestamp already\n\tif (!helpers$1.isFinite(value)) {\n\t\tvalue = typeof format === 'string'\n\t\t\t? adapter.parse(value, format)\n\t\t\t: adapter.parse(value);\n\t}\n\n\tif (value !== null) {\n\t\treturn +value;\n\t}\n\n\t// Labels are in an incompatible format and no `parser` has been provided.\n\t// The user might still use the deprecated `format` option for parsing.\n\tif (!parser && typeof format === 'function') {\n\t\tvalue = format(input);\n\n\t\t// `format` could return something else than a timestamp, if so, parse it\n\t\tif (!helpers$1.isFinite(value)) {\n\t\t\tvalue = adapter.parse(value);\n\t\t}\n\t}\n\n\treturn value;\n}\n\nfunction parse(scale, input) {\n\tif (helpers$1.isNullOrUndef(input)) {\n\t\treturn null;\n\t}\n\n\tvar options = scale.options.time;\n\tvar value = toTimestamp(scale, scale.getRightValue(input));\n\tif (value === null) {\n\t\treturn value;\n\t}\n\n\tif (options.round) {\n\t\tvalue = +scale._adapter.startOf(value, options.round);\n\t}\n\n\treturn value;\n}\n\n/**\n * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n */\nfunction determineStepSize(min, max, unit, capacity) {\n\tvar range = max - min;\n\tvar interval = INTERVALS[unit];\n\tvar milliseconds = interval.size;\n\tvar steps = interval.steps;\n\tvar i, ilen, factor;\n\n\tif (!steps) {\n\t\treturn Math.ceil(range / (capacity * milliseconds));\n\t}\n\n\tfor (i = 0, ilen = steps.length; i < ilen; ++i) {\n\t\tfactor = steps[i];\n\t\tif (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn factor;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n\tvar ilen = UNITS.length;\n\tvar i, interval, factor;\n\n\tfor (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n\t\tinterval = INTERVALS[UNITS[i]];\n\t\tfactor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n\t\tif (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n\t\t\treturn UNITS[i];\n\t\t}\n\t}\n\n\treturn UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n */\nfunction determineUnitForFormatting(scale, ticks, minUnit, min, max) {\n\tvar ilen = UNITS.length;\n\tvar i, unit;\n\n\tfor (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n\t\tunit = UNITS[i];\n\t\tif (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= ticks.length) {\n\t\t\treturn unit;\n\t\t}\n\t}\n\n\treturn UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n\tfor (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n\t\tif (INTERVALS[UNITS[i]].common) {\n\t\t\treturn UNITS[i];\n\t\t}\n\t}\n}\n\n/**\n * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n * Important: this method can return ticks outside the min and max range, it's the\n * responsibility of the calling code to clamp values if needed.\n */\nfunction generate(scale, min, max, capacity) {\n\tvar adapter = scale._adapter;\n\tvar options = scale.options;\n\tvar timeOpts = options.time;\n\tvar minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n\tvar major = determineMajorUnit(minor);\n\tvar stepSize = valueOrDefault$c(timeOpts.stepSize, timeOpts.unitStepSize);\n\tvar weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n\tvar majorTicksEnabled = options.ticks.major.enabled;\n\tvar interval = INTERVALS[minor];\n\tvar first = min;\n\tvar last = max;\n\tvar ticks = [];\n\tvar time;\n\n\tif (!stepSize) {\n\t\tstepSize = determineStepSize(min, max, minor, capacity);\n\t}\n\n\t// For 'week' unit, handle the first day of week option\n\tif (weekday) {\n\t\tfirst = +adapter.startOf(first, 'isoWeek', weekday);\n\t\tlast = +adapter.startOf(last, 'isoWeek', weekday);\n\t}\n\n\t// Align first/last ticks on unit\n\tfirst = +adapter.startOf(first, weekday ? 'day' : minor);\n\tlast = +adapter.startOf(last, weekday ? 'day' : minor);\n\n\t// Make sure that the last tick include max\n\tif (last < max) {\n\t\tlast = +adapter.add(last, 1, minor);\n\t}\n\n\ttime = first;\n\n\tif (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n\t\t// Align the first tick on the previous `minor` unit aligned on the `major` unit:\n\t\t// we first aligned time on the previous `major` unit then add the number of full\n\t\t// stepSize there is between first and the previous major time.\n\t\ttime = +adapter.startOf(time, major);\n\t\ttime = +adapter.add(time, ~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n\t}\n\n\tfor (; time < last; time = +adapter.add(time, stepSize, minor)) {\n\t\tticks.push(+time);\n\t}\n\n\tticks.push(+time);\n\n\treturn ticks;\n}\n\n/**\n * Returns the start and end offsets from edges in the form of {start, end}\n * where each value is a relative width to the scale and ranges between 0 and 1.\n * They add extra margins on the both sides by scaling down the original scale.\n * Offsets are added when the `offset` option is true.\n */\nfunction computeOffsets(table, ticks, min, max, options) {\n\tvar start = 0;\n\tvar end = 0;\n\tvar first, last;\n\n\tif (options.offset && ticks.length) {\n\t\tif (!options.time.min) {\n\t\t\tfirst = interpolate$1(table, 'time', ticks[0], 'pos');\n\t\t\tif (ticks.length === 1) {\n\t\t\t\tstart = 1 - first;\n\t\t\t} else {\n\t\t\t\tstart = (interpolate$1(table, 'time', ticks[1], 'pos') - first) / 2;\n\t\t\t}\n\t\t}\n\t\tif (!options.time.max) {\n\t\t\tlast = interpolate$1(table, 'time', ticks[ticks.length - 1], 'pos');\n\t\t\tif (ticks.length === 1) {\n\t\t\t\tend = last;\n\t\t\t} else {\n\t\t\t\tend = (last - interpolate$1(table, 'time', ticks[ticks.length - 2], 'pos')) / 2;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn {start: start, end: end};\n}\n\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n\tvar ticks = [];\n\tvar i, ilen, value, major;\n\n\tfor (i = 0, ilen = values.length; i < ilen; ++i) {\n\t\tvalue = values[i];\n\t\tmajor = majorUnit ? value === +scale._adapter.startOf(value, majorUnit) : false;\n\n\t\tticks.push({\n\t\t\tvalue: value,\n\t\t\tmajor: major\n\t\t});\n\t}\n\n\treturn ticks;\n}\n\nvar defaultConfig$4 = {\n\tposition: 'bottom',\n\n\t/**\n\t * Data distribution along the scale:\n\t * - 'linear': data are spread according to their time (distances can vary),\n\t * - 'series': data are spread at the same distance from each other.\n\t * @see https://github.com/chartjs/Chart.js/pull/4507\n\t * @since 2.7.0\n\t */\n\tdistribution: 'linear',\n\n\t/**\n\t * Scale boundary strategy (bypassed by min/max time options)\n\t * - `data`: make sure data are fully visible, ticks outside are removed\n\t * - `ticks`: make sure ticks are fully visible, data outside are truncated\n\t * @see https://github.com/chartjs/Chart.js/pull/4556\n\t * @since 2.7.0\n\t */\n\tbounds: 'data',\n\n\tadapters: {},\n\ttime: {\n\t\tparser: false, // false == a pattern string from https://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n\t\tformat: false, // DEPRECATED false == date objects, moment object, callback or a pattern string from https://momentjs.com/docs/#/parsing/string-format/\n\t\tunit: false, // false == automatic or override with week, month, year, etc.\n\t\tround: false, // none, or override with week, month, year, etc.\n\t\tdisplayFormat: false, // DEPRECATED\n\t\tisoWeekday: false, // override week start day - see https://momentjs.com/docs/#/get-set/iso-weekday/\n\t\tminUnit: 'millisecond',\n\t\tdisplayFormats: {}\n\t},\n\tticks: {\n\t\tautoSkip: false,\n\n\t\t/**\n\t\t * Ticks generation input values:\n\t\t * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n\t\t * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n\t\t * - 'labels': generates ticks from user given `data.labels` values ONLY.\n\t\t * @see https://github.com/chartjs/Chart.js/pull/4507\n\t\t * @since 2.7.0\n\t\t */\n\t\tsource: 'auto',\n\n\t\tmajor: {\n\t\t\tenabled: false\n\t\t}\n\t}\n};\n\nvar scale_time = core_scale.extend({\n\tinitialize: function() {\n\t\tthis.mergeTicksOptions();\n\t\tcore_scale.prototype.initialize.call(this);\n\t},\n\n\tupdate: function() {\n\t\tvar me = this;\n\t\tvar options = me.options;\n\t\tvar time = options.time || (options.time = {});\n\t\tvar adapter = me._adapter = new core_adapters._date(options.adapters.date);\n\n\t\t// DEPRECATIONS: output a message only one time per update\n\t\tif (time.format) {\n\t\t\tconsole.warn('options.time.format is deprecated and replaced by options.time.parser.');\n\t\t}\n\n\t\t// Backward compatibility: before introducing adapter, `displayFormats` was\n\t\t// supposed to contain *all* unit/string pairs but this can't be resolved\n\t\t// when loading the scale (adapters are loaded afterward), so let's populate\n\t\t// missing formats on update\n\t\thelpers$1.mergeIf(time.displayFormats, adapter.formats());\n\n\t\treturn core_scale.prototype.update.apply(me, arguments);\n\t},\n\n\t/**\n\t * Allows data to be referenced via 't' attribute\n\t */\n\tgetRightValue: function(rawValue) {\n\t\tif (rawValue && rawValue.t !== undefined) {\n\t\t\trawValue = rawValue.t;\n\t\t}\n\t\treturn core_scale.prototype.getRightValue.call(this, rawValue);\n\t},\n\n\tdetermineDataLimits: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar adapter = me._adapter;\n\t\tvar timeOpts = me.options.time;\n\t\tvar unit = timeOpts.unit || 'day';\n\t\tvar min = MAX_INTEGER;\n\t\tvar max = MIN_INTEGER;\n\t\tvar timestamps = [];\n\t\tvar datasets = [];\n\t\tvar labels = [];\n\t\tvar i, j, ilen, jlen, data, timestamp;\n\t\tvar dataLabels = chart.data.labels || [];\n\n\t\t// Convert labels to timestamps\n\t\tfor (i = 0, ilen = dataLabels.length; i < ilen; ++i) {\n\t\t\tlabels.push(parse(me, dataLabels[i]));\n\t\t}\n\n\t\t// Convert data to timestamps\n\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\tif (chart.isDatasetVisible(i)) {\n\t\t\t\tdata = chart.data.datasets[i].data;\n\n\t\t\t\t// Let's consider that all data have the same format.\n\t\t\t\tif (helpers$1.isObject(data[0])) {\n\t\t\t\t\tdatasets[i] = [];\n\n\t\t\t\t\tfor (j = 0, jlen = data.length; j < jlen; ++j) {\n\t\t\t\t\t\ttimestamp = parse(me, data[j]);\n\t\t\t\t\t\ttimestamps.push(timestamp);\n\t\t\t\t\t\tdatasets[i][j] = timestamp;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (j = 0, jlen = labels.length; j < jlen; ++j) {\n\t\t\t\t\t\ttimestamps.push(labels[j]);\n\t\t\t\t\t}\n\t\t\t\t\tdatasets[i] = labels.slice(0);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdatasets[i] = [];\n\t\t\t}\n\t\t}\n\n\t\tif (labels.length) {\n\t\t\t// Sort labels **after** data have been converted\n\t\t\tlabels = arrayUnique(labels).sort(sorter);\n\t\t\tmin = Math.min(min, labels[0]);\n\t\t\tmax = Math.max(max, labels[labels.length - 1]);\n\t\t}\n\n\t\tif (timestamps.length) {\n\t\t\ttimestamps = arrayUnique(timestamps).sort(sorter);\n\t\t\tmin = Math.min(min, timestamps[0]);\n\t\t\tmax = Math.max(max, timestamps[timestamps.length - 1]);\n\t\t}\n\n\t\tmin = parse(me, timeOpts.min) || min;\n\t\tmax = parse(me, timeOpts.max) || max;\n\n\t\t// In case there is no valid min/max, set limits based on unit time option\n\t\tmin = min === MAX_INTEGER ? +adapter.startOf(Date.now(), unit) : min;\n\t\tmax = max === MIN_INTEGER ? +adapter.endOf(Date.now(), unit) + 1 : max;\n\n\t\t// Make sure that max is strictly higher than min (required by the lookup table)\n\t\tme.min = Math.min(min, max);\n\t\tme.max = Math.max(min + 1, max);\n\n\t\t// PRIVATE\n\t\tme._horizontal = me.isHorizontal();\n\t\tme._table = [];\n\t\tme._timestamps = {\n\t\t\tdata: timestamps,\n\t\t\tdatasets: datasets,\n\t\t\tlabels: labels\n\t\t};\n\t},\n\n\tbuildTicks: function() {\n\t\tvar me = this;\n\t\tvar min = me.min;\n\t\tvar max = me.max;\n\t\tvar options = me.options;\n\t\tvar timeOpts = options.time;\n\t\tvar timestamps = [];\n\t\tvar ticks = [];\n\t\tvar i, ilen, timestamp;\n\n\t\tswitch (options.ticks.source) {\n\t\tcase 'data':\n\t\t\ttimestamps = me._timestamps.data;\n\t\t\tbreak;\n\t\tcase 'labels':\n\t\t\ttimestamps = me._timestamps.labels;\n\t\t\tbreak;\n\t\tcase 'auto':\n\t\tdefault:\n\t\t\ttimestamps = generate(me, min, max, me.getLabelCapacity(min), options);\n\t\t}\n\n\t\tif (options.bounds === 'ticks' && timestamps.length) {\n\t\t\tmin = timestamps[0];\n\t\t\tmax = timestamps[timestamps.length - 1];\n\t\t}\n\n\t\t// Enforce limits with user min/max options\n\t\tmin = parse(me, timeOpts.min) || min;\n\t\tmax = parse(me, timeOpts.max) || max;\n\n\t\t// Remove ticks outside the min/max range\n\t\tfor (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n\t\t\ttimestamp = timestamps[i];\n\t\t\tif (timestamp >= min && timestamp <= max) {\n\t\t\t\tticks.push(timestamp);\n\t\t\t}\n\t\t}\n\n\t\tme.min = min;\n\t\tme.max = max;\n\n\t\t// PRIVATE\n\t\tme._unit = timeOpts.unit || determineUnitForFormatting(me, ticks, timeOpts.minUnit, me.min, me.max);\n\t\tme._majorUnit = determineMajorUnit(me._unit);\n\t\tme._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n\t\tme._offsets = computeOffsets(me._table, ticks, min, max, options);\n\n\t\tif (options.ticks.reverse) {\n\t\t\tticks.reverse();\n\t\t}\n\n\t\treturn ticksFromTimestamps(me, ticks, me._majorUnit);\n\t},\n\n\tgetLabelForIndex: function(index, datasetIndex) {\n\t\tvar me = this;\n\t\tvar adapter = me._adapter;\n\t\tvar data = me.chart.data;\n\t\tvar timeOpts = me.options.time;\n\t\tvar label = data.labels && index < data.labels.length ? data.labels[index] : '';\n\t\tvar value = data.datasets[datasetIndex].data[index];\n\n\t\tif (helpers$1.isObject(value)) {\n\t\t\tlabel = me.getRightValue(value);\n\t\t}\n\t\tif (timeOpts.tooltipFormat) {\n\t\t\treturn adapter.format(toTimestamp(me, label), timeOpts.tooltipFormat);\n\t\t}\n\t\tif (typeof label === 'string') {\n\t\t\treturn label;\n\t\t}\n\t\treturn adapter.format(toTimestamp(me, label), timeOpts.displayFormats.datetime);\n\t},\n\n\t/**\n\t * Function to format an individual tick mark\n\t * @private\n\t */\n\ttickFormatFunction: function(time, index, ticks, format) {\n\t\tvar me = this;\n\t\tvar adapter = me._adapter;\n\t\tvar options = me.options;\n\t\tvar formats = options.time.displayFormats;\n\t\tvar minorFormat = formats[me._unit];\n\t\tvar majorUnit = me._majorUnit;\n\t\tvar majorFormat = formats[majorUnit];\n\t\tvar majorTime = +adapter.startOf(time, majorUnit);\n\t\tvar majorTickOpts = options.ticks.major;\n\t\tvar major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n\t\tvar label = adapter.format(time, format ? format : major ? majorFormat : minorFormat);\n\t\tvar tickOpts = major ? majorTickOpts : options.ticks.minor;\n\t\tvar formatter = valueOrDefault$c(tickOpts.callback, tickOpts.userCallback);\n\n\t\treturn formatter ? formatter(label, index, ticks) : label;\n\t},\n\n\tconvertTicksToLabels: function(ticks) {\n\t\tvar labels = [];\n\t\tvar i, ilen;\n\n\t\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\t\tlabels.push(this.tickFormatFunction(ticks[i].value, i, ticks));\n\t\t}\n\n\t\treturn labels;\n\t},\n\n\t/**\n\t * @private\n\t */\n\tgetPixelForOffset: function(time) {\n\t\tvar me = this;\n\t\tvar isReverse = me.options.ticks.reverse;\n\t\tvar size = me._horizontal ? me.width : me.height;\n\t\tvar start = me._horizontal ? isReverse ? me.right : me.left : isReverse ? me.bottom : me.top;\n\t\tvar pos = interpolate$1(me._table, 'time', time, 'pos');\n\t\tvar offset = size * (me._offsets.start + pos) / (me._offsets.start + 1 + me._offsets.end);\n\n\t\treturn isReverse ? start - offset : start + offset;\n\t},\n\n\tgetPixelForValue: function(value, index, datasetIndex) {\n\t\tvar me = this;\n\t\tvar time = null;\n\n\t\tif (index !== undefined && datasetIndex !== undefined) {\n\t\t\ttime = me._timestamps.datasets[datasetIndex][index];\n\t\t}\n\n\t\tif (time === null) {\n\t\t\ttime = parse(me, value);\n\t\t}\n\n\t\tif (time !== null) {\n\t\t\treturn me.getPixelForOffset(time);\n\t\t}\n\t},\n\n\tgetPixelForTick: function(index) {\n\t\tvar ticks = this.getTicks();\n\t\treturn index >= 0 && index < ticks.length ?\n\t\t\tthis.getPixelForOffset(ticks[index].value) :\n\t\t\tnull;\n\t},\n\n\tgetValueForPixel: function(pixel) {\n\t\tvar me = this;\n\t\tvar size = me._horizontal ? me.width : me.height;\n\t\tvar start = me._horizontal ? me.left : me.top;\n\t\tvar pos = (size ? (pixel - start) / size : 0) * (me._offsets.start + 1 + me._offsets.start) - me._offsets.end;\n\t\tvar time = interpolate$1(me._table, 'pos', pos, 'time');\n\n\t\t// DEPRECATION, we should return time directly\n\t\treturn me._adapter._create(time);\n\t},\n\n\t/**\n\t * Crude approximation of what the label width might be\n\t * @private\n\t */\n\tgetLabelWidth: function(label) {\n\t\tvar me = this;\n\t\tvar ticksOpts = me.options.ticks;\n\t\tvar tickLabelWidth = me.ctx.measureText(label).width;\n\t\tvar angle = helpers$1.toRadians(ticksOpts.maxRotation);\n\t\tvar cosRotation = Math.cos(angle);\n\t\tvar sinRotation = Math.sin(angle);\n\t\tvar tickFontSize = valueOrDefault$c(ticksOpts.fontSize, core_defaults.global.defaultFontSize);\n\n\t\treturn (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tgetLabelCapacity: function(exampleTime) {\n\t\tvar me = this;\n\n\t\t// pick the longest format (milliseconds) for guestimation\n\t\tvar format = me.options.time.displayFormats.millisecond;\n\t\tvar exampleLabel = me.tickFormatFunction(exampleTime, 0, [], format);\n\t\tvar tickLabelWidth = me.getLabelWidth(exampleLabel);\n\t\tvar innerWidth = me.isHorizontal() ? me.width : me.height;\n\t\tvar capacity = Math.floor(innerWidth / tickLabelWidth);\n\n\t\treturn capacity > 0 ? capacity : 1;\n\t}\n});\n\n// INTERNAL: static default options, registered in src/index.js\nvar _defaults$4 = defaultConfig$4;\nscale_time._defaults = _defaults$4;\n\nvar scales = {\n\tcategory: scale_category,\n\tlinear: scale_linear,\n\tlogarithmic: scale_logarithmic,\n\tradialLinear: scale_radialLinear,\n\ttime: scale_time\n};\n\nvar moment = createCommonjsModule(function (module, exports) {\n(function (global, factory) {\n    module.exports = factory();\n}(commonjsGlobal, (function () {\n    var hookCallback;\n\n    function hooks () {\n        return hookCallback.apply(null, arguments);\n    }\n\n    // This is done to register the method called with moment()\n    // without creating circular dependencies.\n    function setHookCallback (callback) {\n        hookCallback = callback;\n    }\n\n    function isArray(input) {\n        return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n    }\n\n    function isObject(input) {\n        // IE8 will treat undefined and null as object if it wasn't for\n        // input != null\n        return input != null && Object.prototype.toString.call(input) === '[object Object]';\n    }\n\n    function isObjectEmpty(obj) {\n        if (Object.getOwnPropertyNames) {\n            return (Object.getOwnPropertyNames(obj).length === 0);\n        } else {\n            var k;\n            for (k in obj) {\n                if (obj.hasOwnProperty(k)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n\n    function isUndefined(input) {\n        return input === void 0;\n    }\n\n    function isNumber(input) {\n        return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n    }\n\n    function isDate(input) {\n        return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n    }\n\n    function map(arr, fn) {\n        var res = [], i;\n        for (i = 0; i < arr.length; ++i) {\n            res.push(fn(arr[i], i));\n        }\n        return res;\n    }\n\n    function hasOwnProp(a, b) {\n        return Object.prototype.hasOwnProperty.call(a, b);\n    }\n\n    function extend(a, b) {\n        for (var i in b) {\n            if (hasOwnProp(b, i)) {\n                a[i] = b[i];\n            }\n        }\n\n        if (hasOwnProp(b, 'toString')) {\n            a.toString = b.toString;\n        }\n\n        if (hasOwnProp(b, 'valueOf')) {\n            a.valueOf = b.valueOf;\n        }\n\n        return a;\n    }\n\n    function createUTC (input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, true).utc();\n    }\n\n    function defaultParsingFlags() {\n        // We need to deep clone this object.\n        return {\n            empty           : false,\n            unusedTokens    : [],\n            unusedInput     : [],\n            overflow        : -2,\n            charsLeftOver   : 0,\n            nullInput       : false,\n            invalidMonth    : null,\n            invalidFormat   : false,\n            userInvalidated : false,\n            iso             : false,\n            parsedDateParts : [],\n            meridiem        : null,\n            rfc2822         : false,\n            weekdayMismatch : false\n        };\n    }\n\n    function getParsingFlags(m) {\n        if (m._pf == null) {\n            m._pf = defaultParsingFlags();\n        }\n        return m._pf;\n    }\n\n    var some;\n    if (Array.prototype.some) {\n        some = Array.prototype.some;\n    } else {\n        some = function (fun) {\n            var t = Object(this);\n            var len = t.length >>> 0;\n\n            for (var i = 0; i < len; i++) {\n                if (i in t && fun.call(this, t[i], i, t)) {\n                    return true;\n                }\n            }\n\n            return false;\n        };\n    }\n\n    function isValid(m) {\n        if (m._isValid == null) {\n            var flags = getParsingFlags(m);\n            var parsedParts = some.call(flags.parsedDateParts, function (i) {\n                return i != null;\n            });\n            var isNowValid = !isNaN(m._d.getTime()) &&\n                flags.overflow < 0 &&\n                !flags.empty &&\n                !flags.invalidMonth &&\n                !flags.invalidWeekday &&\n                !flags.weekdayMismatch &&\n                !flags.nullInput &&\n                !flags.invalidFormat &&\n                !flags.userInvalidated &&\n                (!flags.meridiem || (flags.meridiem && parsedParts));\n\n            if (m._strict) {\n                isNowValid = isNowValid &&\n                    flags.charsLeftOver === 0 &&\n                    flags.unusedTokens.length === 0 &&\n                    flags.bigHour === undefined;\n            }\n\n            if (Object.isFrozen == null || !Object.isFrozen(m)) {\n                m._isValid = isNowValid;\n            }\n            else {\n                return isNowValid;\n            }\n        }\n        return m._isValid;\n    }\n\n    function createInvalid (flags) {\n        var m = createUTC(NaN);\n        if (flags != null) {\n            extend(getParsingFlags(m), flags);\n        }\n        else {\n            getParsingFlags(m).userInvalidated = true;\n        }\n\n        return m;\n    }\n\n    // Plugins that add properties should also add the key here (null value),\n    // so we can properly clone ourselves.\n    var momentProperties = hooks.momentProperties = [];\n\n    function copyConfig(to, from) {\n        var i, prop, val;\n\n        if (!isUndefined(from._isAMomentObject)) {\n            to._isAMomentObject = from._isAMomentObject;\n        }\n        if (!isUndefined(from._i)) {\n            to._i = from._i;\n        }\n        if (!isUndefined(from._f)) {\n            to._f = from._f;\n        }\n        if (!isUndefined(from._l)) {\n            to._l = from._l;\n        }\n        if (!isUndefined(from._strict)) {\n            to._strict = from._strict;\n        }\n        if (!isUndefined(from._tzm)) {\n            to._tzm = from._tzm;\n        }\n        if (!isUndefined(from._isUTC)) {\n            to._isUTC = from._isUTC;\n        }\n        if (!isUndefined(from._offset)) {\n            to._offset = from._offset;\n        }\n        if (!isUndefined(from._pf)) {\n            to._pf = getParsingFlags(from);\n        }\n        if (!isUndefined(from._locale)) {\n            to._locale = from._locale;\n        }\n\n        if (momentProperties.length > 0) {\n            for (i = 0; i < momentProperties.length; i++) {\n                prop = momentProperties[i];\n                val = from[prop];\n                if (!isUndefined(val)) {\n                    to[prop] = val;\n                }\n            }\n        }\n\n        return to;\n    }\n\n    var updateInProgress = false;\n\n    // Moment prototype object\n    function Moment(config) {\n        copyConfig(this, config);\n        this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n        if (!this.isValid()) {\n            this._d = new Date(NaN);\n        }\n        // Prevent infinite loop in case updateOffset creates new moment\n        // objects.\n        if (updateInProgress === false) {\n            updateInProgress = true;\n            hooks.updateOffset(this);\n            updateInProgress = false;\n        }\n    }\n\n    function isMoment (obj) {\n        return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);\n    }\n\n    function absFloor (number) {\n        if (number < 0) {\n            // -0 -> 0\n            return Math.ceil(number) || 0;\n        } else {\n            return Math.floor(number);\n        }\n    }\n\n    function toInt(argumentForCoercion) {\n        var coercedNumber = +argumentForCoercion,\n            value = 0;\n\n        if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n            value = absFloor(coercedNumber);\n        }\n\n        return value;\n    }\n\n    // compare two arrays, return the number of differences\n    function compareArrays(array1, array2, dontConvert) {\n        var len = Math.min(array1.length, array2.length),\n            lengthDiff = Math.abs(array1.length - array2.length),\n            diffs = 0,\n            i;\n        for (i = 0; i < len; i++) {\n            if ((dontConvert && array1[i] !== array2[i]) ||\n                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n                diffs++;\n            }\n        }\n        return diffs + lengthDiff;\n    }\n\n    function warn(msg) {\n        if (hooks.suppressDeprecationWarnings === false &&\n                (typeof console !==  'undefined') && console.warn) {\n            console.warn('Deprecation warning: ' + msg);\n        }\n    }\n\n    function deprecate(msg, fn) {\n        var firstTime = true;\n\n        return extend(function () {\n            if (hooks.deprecationHandler != null) {\n                hooks.deprecationHandler(null, msg);\n            }\n            if (firstTime) {\n                var args = [];\n                var arg;\n                for (var i = 0; i < arguments.length; i++) {\n                    arg = '';\n                    if (typeof arguments[i] === 'object') {\n                        arg += '\\n[' + i + '] ';\n                        for (var key in arguments[0]) {\n                            arg += key + ': ' + arguments[0][key] + ', ';\n                        }\n                        arg = arg.slice(0, -2); // Remove trailing comma and space\n                    } else {\n                        arg = arguments[i];\n                    }\n                    args.push(arg);\n                }\n                warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + (new Error()).stack);\n                firstTime = false;\n            }\n            return fn.apply(this, arguments);\n        }, fn);\n    }\n\n    var deprecations = {};\n\n    function deprecateSimple(name, msg) {\n        if (hooks.deprecationHandler != null) {\n            hooks.deprecationHandler(name, msg);\n        }\n        if (!deprecations[name]) {\n            warn(msg);\n            deprecations[name] = true;\n        }\n    }\n\n    hooks.suppressDeprecationWarnings = false;\n    hooks.deprecationHandler = null;\n\n    function isFunction(input) {\n        return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n    }\n\n    function set (config) {\n        var prop, i;\n        for (i in config) {\n            prop = config[i];\n            if (isFunction(prop)) {\n                this[i] = prop;\n            } else {\n                this['_' + i] = prop;\n            }\n        }\n        this._config = config;\n        // Lenient ordinal parsing accepts just a number in addition to\n        // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        this._dayOfMonthOrdinalParseLenient = new RegExp(\n            (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +\n                '|' + (/\\d{1,2}/).source);\n    }\n\n    function mergeConfigs(parentConfig, childConfig) {\n        var res = extend({}, parentConfig), prop;\n        for (prop in childConfig) {\n            if (hasOwnProp(childConfig, prop)) {\n                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n                    res[prop] = {};\n                    extend(res[prop], parentConfig[prop]);\n                    extend(res[prop], childConfig[prop]);\n                } else if (childConfig[prop] != null) {\n                    res[prop] = childConfig[prop];\n                } else {\n                    delete res[prop];\n                }\n            }\n        }\n        for (prop in parentConfig) {\n            if (hasOwnProp(parentConfig, prop) &&\n                    !hasOwnProp(childConfig, prop) &&\n                    isObject(parentConfig[prop])) {\n                // make sure changes to properties don't modify parent config\n                res[prop] = extend({}, res[prop]);\n            }\n        }\n        return res;\n    }\n\n    function Locale(config) {\n        if (config != null) {\n            this.set(config);\n        }\n    }\n\n    var keys;\n\n    if (Object.keys) {\n        keys = Object.keys;\n    } else {\n        keys = function (obj) {\n            var i, res = [];\n            for (i in obj) {\n                if (hasOwnProp(obj, i)) {\n                    res.push(i);\n                }\n            }\n            return res;\n        };\n    }\n\n    var defaultCalendar = {\n        sameDay : '[Today at] LT',\n        nextDay : '[Tomorrow at] LT',\n        nextWeek : 'dddd [at] LT',\n        lastDay : '[Yesterday at] LT',\n        lastWeek : '[Last] dddd [at] LT',\n        sameElse : 'L'\n    };\n\n    function calendar (key, mom, now) {\n        var output = this._calendar[key] || this._calendar['sameElse'];\n        return isFunction(output) ? output.call(mom, now) : output;\n    }\n\n    var defaultLongDateFormat = {\n        LTS  : 'h:mm:ss A',\n        LT   : 'h:mm A',\n        L    : 'MM/DD/YYYY',\n        LL   : 'MMMM D, YYYY',\n        LLL  : 'MMMM D, YYYY h:mm A',\n        LLLL : 'dddd, MMMM D, YYYY h:mm A'\n    };\n\n    function longDateFormat (key) {\n        var format = this._longDateFormat[key],\n            formatUpper = this._longDateFormat[key.toUpperCase()];\n\n        if (format || !formatUpper) {\n            return format;\n        }\n\n        this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n            return val.slice(1);\n        });\n\n        return this._longDateFormat[key];\n    }\n\n    var defaultInvalidDate = 'Invalid date';\n\n    function invalidDate () {\n        return this._invalidDate;\n    }\n\n    var defaultOrdinal = '%d';\n    var defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n    function ordinal (number) {\n        return this._ordinal.replace('%d', number);\n    }\n\n    var defaultRelativeTime = {\n        future : 'in %s',\n        past   : '%s ago',\n        s  : 'a few seconds',\n        ss : '%d seconds',\n        m  : 'a minute',\n        mm : '%d minutes',\n        h  : 'an hour',\n        hh : '%d hours',\n        d  : 'a day',\n        dd : '%d days',\n        M  : 'a month',\n        MM : '%d months',\n        y  : 'a year',\n        yy : '%d years'\n    };\n\n    function relativeTime (number, withoutSuffix, string, isFuture) {\n        var output = this._relativeTime[string];\n        return (isFunction(output)) ?\n            output(number, withoutSuffix, string, isFuture) :\n            output.replace(/%d/i, number);\n    }\n\n    function pastFuture (diff, output) {\n        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n        return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n    }\n\n    var aliases = {};\n\n    function addUnitAlias (unit, shorthand) {\n        var lowerCase = unit.toLowerCase();\n        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n    }\n\n    function normalizeUnits(units) {\n        return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n    }\n\n    function normalizeObjectUnits(inputObject) {\n        var normalizedInput = {},\n            normalizedProp,\n            prop;\n\n        for (prop in inputObject) {\n            if (hasOwnProp(inputObject, prop)) {\n                normalizedProp = normalizeUnits(prop);\n                if (normalizedProp) {\n                    normalizedInput[normalizedProp] = inputObject[prop];\n                }\n            }\n        }\n\n        return normalizedInput;\n    }\n\n    var priorities = {};\n\n    function addUnitPriority(unit, priority) {\n        priorities[unit] = priority;\n    }\n\n    function getPrioritizedUnits(unitsObj) {\n        var units = [];\n        for (var u in unitsObj) {\n            units.push({unit: u, priority: priorities[u]});\n        }\n        units.sort(function (a, b) {\n            return a.priority - b.priority;\n        });\n        return units;\n    }\n\n    function zeroFill(number, targetLength, forceSign) {\n        var absNumber = '' + Math.abs(number),\n            zerosToFill = targetLength - absNumber.length,\n            sign = number >= 0;\n        return (sign ? (forceSign ? '+' : '') : '-') +\n            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n    }\n\n    var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n\n    var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n\n    var formatFunctions = {};\n\n    var formatTokenFunctions = {};\n\n    // token:    'M'\n    // padded:   ['MM', 2]\n    // ordinal:  'Mo'\n    // callback: function () { this.month() + 1 }\n    function addFormatToken (token, padded, ordinal, callback) {\n        var func = callback;\n        if (typeof callback === 'string') {\n            func = function () {\n                return this[callback]();\n            };\n        }\n        if (token) {\n            formatTokenFunctions[token] = func;\n        }\n        if (padded) {\n            formatTokenFunctions[padded[0]] = function () {\n                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n            };\n        }\n        if (ordinal) {\n            formatTokenFunctions[ordinal] = function () {\n                return this.localeData().ordinal(func.apply(this, arguments), token);\n            };\n        }\n    }\n\n    function removeFormattingTokens(input) {\n        if (input.match(/\\[[\\s\\S]/)) {\n            return input.replace(/^\\[|\\]$/g, '');\n        }\n        return input.replace(/\\\\/g, '');\n    }\n\n    function makeFormatFunction(format) {\n        var array = format.match(formattingTokens), i, length;\n\n        for (i = 0, length = array.length; i < length; i++) {\n            if (formatTokenFunctions[array[i]]) {\n                array[i] = formatTokenFunctions[array[i]];\n            } else {\n                array[i] = removeFormattingTokens(array[i]);\n            }\n        }\n\n        return function (mom) {\n            var output = '', i;\n            for (i = 0; i < length; i++) {\n                output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n            }\n            return output;\n        };\n    }\n\n    // format date using native date object\n    function formatMoment(m, format) {\n        if (!m.isValid()) {\n            return m.localeData().invalidDate();\n        }\n\n        format = expandFormat(format, m.localeData());\n        formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n\n        return formatFunctions[format](m);\n    }\n\n    function expandFormat(format, locale) {\n        var i = 5;\n\n        function replaceLongDateFormatTokens(input) {\n            return locale.longDateFormat(input) || input;\n        }\n\n        localFormattingTokens.lastIndex = 0;\n        while (i >= 0 && localFormattingTokens.test(format)) {\n            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n            localFormattingTokens.lastIndex = 0;\n            i -= 1;\n        }\n\n        return format;\n    }\n\n    var match1         = /\\d/;            //       0 - 9\n    var match2         = /\\d\\d/;          //      00 - 99\n    var match3         = /\\d{3}/;         //     000 - 999\n    var match4         = /\\d{4}/;         //    0000 - 9999\n    var match6         = /[+-]?\\d{6}/;    // -999999 - 999999\n    var match1to2      = /\\d\\d?/;         //       0 - 99\n    var match3to4      = /\\d\\d\\d\\d?/;     //     999 - 9999\n    var match5to6      = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n    var match1to3      = /\\d{1,3}/;       //       0 - 999\n    var match1to4      = /\\d{1,4}/;       //       0 - 9999\n    var match1to6      = /[+-]?\\d{1,6}/;  // -999999 - 999999\n\n    var matchUnsigned  = /\\d+/;           //       0 - inf\n    var matchSigned    = /[+-]?\\d+/;      //    -inf - inf\n\n    var matchOffset    = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n    var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\n    var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n\n    // any word (or two) characters or numbers including two/three word month in arabic.\n    // includes scottish gaelic two word and hyphenated months\n    var matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n\n    var regexes = {};\n\n    function addRegexToken (token, regex, strictRegex) {\n        regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n            return (isStrict && strictRegex) ? strictRegex : regex;\n        };\n    }\n\n    function getParseRegexForToken (token, config) {\n        if (!hasOwnProp(regexes, token)) {\n            return new RegExp(unescapeFormat(token));\n        }\n\n        return regexes[token](config._strict, config._locale);\n    }\n\n    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n    function unescapeFormat(s) {\n        return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n            return p1 || p2 || p3 || p4;\n        }));\n    }\n\n    function regexEscape(s) {\n        return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    }\n\n    var tokens = {};\n\n    function addParseToken (token, callback) {\n        var i, func = callback;\n        if (typeof token === 'string') {\n            token = [token];\n        }\n        if (isNumber(callback)) {\n            func = function (input, array) {\n                array[callback] = toInt(input);\n            };\n        }\n        for (i = 0; i < token.length; i++) {\n            tokens[token[i]] = func;\n        }\n    }\n\n    function addWeekParseToken (token, callback) {\n        addParseToken(token, function (input, array, config, token) {\n            config._w = config._w || {};\n            callback(input, config._w, config, token);\n        });\n    }\n\n    function addTimeToArrayFromToken(token, input, config) {\n        if (input != null && hasOwnProp(tokens, token)) {\n            tokens[token](input, config._a, config, token);\n        }\n    }\n\n    var YEAR = 0;\n    var MONTH = 1;\n    var DATE = 2;\n    var HOUR = 3;\n    var MINUTE = 4;\n    var SECOND = 5;\n    var MILLISECOND = 6;\n    var WEEK = 7;\n    var WEEKDAY = 8;\n\n    // FORMATTING\n\n    addFormatToken('Y', 0, 0, function () {\n        var y = this.year();\n        return y <= 9999 ? '' + y : '+' + y;\n    });\n\n    addFormatToken(0, ['YY', 2], 0, function () {\n        return this.year() % 100;\n    });\n\n    addFormatToken(0, ['YYYY',   4],       0, 'year');\n    addFormatToken(0, ['YYYYY',  5],       0, 'year');\n    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n    // ALIASES\n\n    addUnitAlias('year', 'y');\n\n    // PRIORITIES\n\n    addUnitPriority('year', 1);\n\n    // PARSING\n\n    addRegexToken('Y',      matchSigned);\n    addRegexToken('YY',     match1to2, match2);\n    addRegexToken('YYYY',   match1to4, match4);\n    addRegexToken('YYYYY',  match1to6, match6);\n    addRegexToken('YYYYYY', match1to6, match6);\n\n    addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n    addParseToken('YYYY', function (input, array) {\n        array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n    });\n    addParseToken('YY', function (input, array) {\n        array[YEAR] = hooks.parseTwoDigitYear(input);\n    });\n    addParseToken('Y', function (input, array) {\n        array[YEAR] = parseInt(input, 10);\n    });\n\n    // HELPERS\n\n    function daysInYear(year) {\n        return isLeapYear(year) ? 366 : 365;\n    }\n\n    function isLeapYear(year) {\n        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n    }\n\n    // HOOKS\n\n    hooks.parseTwoDigitYear = function (input) {\n        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n    };\n\n    // MOMENTS\n\n    var getSetYear = makeGetSet('FullYear', true);\n\n    function getIsLeapYear () {\n        return isLeapYear(this.year());\n    }\n\n    function makeGetSet (unit, keepTime) {\n        return function (value) {\n            if (value != null) {\n                set$1(this, unit, value);\n                hooks.updateOffset(this, keepTime);\n                return this;\n            } else {\n                return get(this, unit);\n            }\n        };\n    }\n\n    function get (mom, unit) {\n        return mom.isValid() ?\n            mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n    }\n\n    function set$1 (mom, unit, value) {\n        if (mom.isValid() && !isNaN(value)) {\n            if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n            }\n            else {\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function stringGet (units) {\n        units = normalizeUnits(units);\n        if (isFunction(this[units])) {\n            return this[units]();\n        }\n        return this;\n    }\n\n\n    function stringSet (units, value) {\n        if (typeof units === 'object') {\n            units = normalizeObjectUnits(units);\n            var prioritized = getPrioritizedUnits(units);\n            for (var i = 0; i < prioritized.length; i++) {\n                this[prioritized[i].unit](units[prioritized[i].unit]);\n            }\n        } else {\n            units = normalizeUnits(units);\n            if (isFunction(this[units])) {\n                return this[units](value);\n            }\n        }\n        return this;\n    }\n\n    function mod(n, x) {\n        return ((n % x) + x) % x;\n    }\n\n    var indexOf;\n\n    if (Array.prototype.indexOf) {\n        indexOf = Array.prototype.indexOf;\n    } else {\n        indexOf = function (o) {\n            // I know\n            var i;\n            for (i = 0; i < this.length; ++i) {\n                if (this[i] === o) {\n                    return i;\n                }\n            }\n            return -1;\n        };\n    }\n\n    function daysInMonth(year, month) {\n        if (isNaN(year) || isNaN(month)) {\n            return NaN;\n        }\n        var modMonth = mod(month, 12);\n        year += (month - modMonth) / 12;\n        return modMonth === 1 ? (isLeapYear(year) ? 29 : 28) : (31 - modMonth % 7 % 2);\n    }\n\n    // FORMATTING\n\n    addFormatToken('M', ['MM', 2], 'Mo', function () {\n        return this.month() + 1;\n    });\n\n    addFormatToken('MMM', 0, 0, function (format) {\n        return this.localeData().monthsShort(this, format);\n    });\n\n    addFormatToken('MMMM', 0, 0, function (format) {\n        return this.localeData().months(this, format);\n    });\n\n    // ALIASES\n\n    addUnitAlias('month', 'M');\n\n    // PRIORITY\n\n    addUnitPriority('month', 8);\n\n    // PARSING\n\n    addRegexToken('M',    match1to2);\n    addRegexToken('MM',   match1to2, match2);\n    addRegexToken('MMM',  function (isStrict, locale) {\n        return locale.monthsShortRegex(isStrict);\n    });\n    addRegexToken('MMMM', function (isStrict, locale) {\n        return locale.monthsRegex(isStrict);\n    });\n\n    addParseToken(['M', 'MM'], function (input, array) {\n        array[MONTH] = toInt(input) - 1;\n    });\n\n    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n        var month = config._locale.monthsParse(input, token, config._strict);\n        // if we didn't find a month name, mark the date as invalid.\n        if (month != null) {\n            array[MONTH] = month;\n        } else {\n            getParsingFlags(config).invalidMonth = input;\n        }\n    });\n\n    // LOCALES\n\n    var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n    function localeMonths (m, format) {\n        if (!m) {\n            return isArray(this._months) ? this._months :\n                this._months['standalone'];\n        }\n        return isArray(this._months) ? this._months[m.month()] :\n            this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n    }\n\n    var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n    function localeMonthsShort (m, format) {\n        if (!m) {\n            return isArray(this._monthsShort) ? this._monthsShort :\n                this._monthsShort['standalone'];\n        }\n        return isArray(this._monthsShort) ? this._monthsShort[m.month()] :\n            this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n    }\n\n    function handleStrictParse(monthName, format, strict) {\n        var i, ii, mom, llc = monthName.toLocaleLowerCase();\n        if (!this._monthsParse) {\n            // this is not used\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n            for (i = 0; i < 12; ++i) {\n                mom = createUTC([2000, i]);\n                this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeMonthsParse (monthName, format, strict) {\n        var i, mom, regex;\n\n        if (this._monthsParseExact) {\n            return handleStrictParse.call(this, monthName, format, strict);\n        }\n\n        if (!this._monthsParse) {\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n        }\n\n        // TODO: add sorting\n        // Sorting makes sure if one month (or abbr) is a prefix of another\n        // see sorting in computeMonthsParse\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            if (strict && !this._longMonthsParse[i]) {\n                this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n                this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n            }\n            if (!strict && !this._monthsParse[i]) {\n                regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n                return i;\n            } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n                return i;\n            } else if (!strict && this._monthsParse[i].test(monthName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function setMonth (mom, value) {\n        var dayOfMonth;\n\n        if (!mom.isValid()) {\n            // No op\n            return mom;\n        }\n\n        if (typeof value === 'string') {\n            if (/^\\d+$/.test(value)) {\n                value = toInt(value);\n            } else {\n                value = mom.localeData().monthsParse(value);\n                // TODO: Another silent failure?\n                if (!isNumber(value)) {\n                    return mom;\n                }\n            }\n        }\n\n        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n        return mom;\n    }\n\n    function getSetMonth (value) {\n        if (value != null) {\n            setMonth(this, value);\n            hooks.updateOffset(this, true);\n            return this;\n        } else {\n            return get(this, 'Month');\n        }\n    }\n\n    function getDaysInMonth () {\n        return daysInMonth(this.year(), this.month());\n    }\n\n    var defaultMonthsShortRegex = matchWord;\n    function monthsShortRegex (isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsShortStrictRegex;\n            } else {\n                return this._monthsShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsShortRegex')) {\n                this._monthsShortRegex = defaultMonthsShortRegex;\n            }\n            return this._monthsShortStrictRegex && isStrict ?\n                this._monthsShortStrictRegex : this._monthsShortRegex;\n        }\n    }\n\n    var defaultMonthsRegex = matchWord;\n    function monthsRegex (isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsStrictRegex;\n            } else {\n                return this._monthsRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                this._monthsRegex = defaultMonthsRegex;\n            }\n            return this._monthsStrictRegex && isStrict ?\n                this._monthsStrictRegex : this._monthsRegex;\n        }\n    }\n\n    function computeMonthsParse () {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var shortPieces = [], longPieces = [], mixedPieces = [],\n            i, mom;\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            shortPieces.push(this.monthsShort(mom, ''));\n            longPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.monthsShort(mom, ''));\n        }\n        // Sorting makes sure if one month (or abbr) is a prefix of another it\n        // will match the longer piece.\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 12; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n        }\n        for (i = 0; i < 24; i++) {\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n\n        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._monthsShortRegex = this._monthsRegex;\n        this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n        this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    }\n\n    function createDate (y, m, d, h, M, s, ms) {\n        // can't just apply() to create a date:\n        // https://stackoverflow.com/q/181348\n        var date;\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            date = new Date(y + 400, m, d, h, M, s, ms);\n            if (isFinite(date.getFullYear())) {\n                date.setFullYear(y);\n            }\n        } else {\n            date = new Date(y, m, d, h, M, s, ms);\n        }\n\n        return date;\n    }\n\n    function createUTCDate (y) {\n        var date;\n        // the Date.UTC function remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            var args = Array.prototype.slice.call(arguments);\n            // preserve leap years using a full 400 year cycle, then reset\n            args[0] = y + 400;\n            date = new Date(Date.UTC.apply(null, args));\n            if (isFinite(date.getUTCFullYear())) {\n                date.setUTCFullYear(y);\n            }\n        } else {\n            date = new Date(Date.UTC.apply(null, arguments));\n        }\n\n        return date;\n    }\n\n    // start-of-first-week - start-of-year\n    function firstWeekOffset(year, dow, doy) {\n        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n            fwd = 7 + dow - doy,\n            // first-week day local weekday -- which local weekday is fwd\n            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\n        return -fwdlw + fwd - 1;\n    }\n\n    // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n        var localWeekday = (7 + weekday - dow) % 7,\n            weekOffset = firstWeekOffset(year, dow, doy),\n            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n            resYear, resDayOfYear;\n\n        if (dayOfYear <= 0) {\n            resYear = year - 1;\n            resDayOfYear = daysInYear(resYear) + dayOfYear;\n        } else if (dayOfYear > daysInYear(year)) {\n            resYear = year + 1;\n            resDayOfYear = dayOfYear - daysInYear(year);\n        } else {\n            resYear = year;\n            resDayOfYear = dayOfYear;\n        }\n\n        return {\n            year: resYear,\n            dayOfYear: resDayOfYear\n        };\n    }\n\n    function weekOfYear(mom, dow, doy) {\n        var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n            resWeek, resYear;\n\n        if (week < 1) {\n            resYear = mom.year() - 1;\n            resWeek = week + weeksInYear(resYear, dow, doy);\n        } else if (week > weeksInYear(mom.year(), dow, doy)) {\n            resWeek = week - weeksInYear(mom.year(), dow, doy);\n            resYear = mom.year() + 1;\n        } else {\n            resYear = mom.year();\n            resWeek = week;\n        }\n\n        return {\n            week: resWeek,\n            year: resYear\n        };\n    }\n\n    function weeksInYear(year, dow, doy) {\n        var weekOffset = firstWeekOffset(year, dow, doy),\n            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n    }\n\n    // FORMATTING\n\n    addFormatToken('w', ['ww', 2], 'wo', 'week');\n    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n    // ALIASES\n\n    addUnitAlias('week', 'w');\n    addUnitAlias('isoWeek', 'W');\n\n    // PRIORITIES\n\n    addUnitPriority('week', 5);\n    addUnitPriority('isoWeek', 5);\n\n    // PARSING\n\n    addRegexToken('w',  match1to2);\n    addRegexToken('ww', match1to2, match2);\n    addRegexToken('W',  match1to2);\n    addRegexToken('WW', match1to2, match2);\n\n    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n        week[token.substr(0, 1)] = toInt(input);\n    });\n\n    // HELPERS\n\n    // LOCALES\n\n    function localeWeek (mom) {\n        return weekOfYear(mom, this._week.dow, this._week.doy).week;\n    }\n\n    var defaultLocaleWeek = {\n        dow : 0, // Sunday is the first day of the week.\n        doy : 6  // The week that contains Jan 6th is the first week of the year.\n    };\n\n    function localeFirstDayOfWeek () {\n        return this._week.dow;\n    }\n\n    function localeFirstDayOfYear () {\n        return this._week.doy;\n    }\n\n    // MOMENTS\n\n    function getSetWeek (input) {\n        var week = this.localeData().week(this);\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    function getSetISOWeek (input) {\n        var week = weekOfYear(this, 1, 4).week;\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('d', 0, 'do', 'day');\n\n    addFormatToken('dd', 0, 0, function (format) {\n        return this.localeData().weekdaysMin(this, format);\n    });\n\n    addFormatToken('ddd', 0, 0, function (format) {\n        return this.localeData().weekdaysShort(this, format);\n    });\n\n    addFormatToken('dddd', 0, 0, function (format) {\n        return this.localeData().weekdays(this, format);\n    });\n\n    addFormatToken('e', 0, 0, 'weekday');\n    addFormatToken('E', 0, 0, 'isoWeekday');\n\n    // ALIASES\n\n    addUnitAlias('day', 'd');\n    addUnitAlias('weekday', 'e');\n    addUnitAlias('isoWeekday', 'E');\n\n    // PRIORITY\n    addUnitPriority('day', 11);\n    addUnitPriority('weekday', 11);\n    addUnitPriority('isoWeekday', 11);\n\n    // PARSING\n\n    addRegexToken('d',    match1to2);\n    addRegexToken('e',    match1to2);\n    addRegexToken('E',    match1to2);\n    addRegexToken('dd',   function (isStrict, locale) {\n        return locale.weekdaysMinRegex(isStrict);\n    });\n    addRegexToken('ddd',   function (isStrict, locale) {\n        return locale.weekdaysShortRegex(isStrict);\n    });\n    addRegexToken('dddd',   function (isStrict, locale) {\n        return locale.weekdaysRegex(isStrict);\n    });\n\n    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n        var weekday = config._locale.weekdaysParse(input, token, config._strict);\n        // if we didn't get a weekday name, mark the date as invalid\n        if (weekday != null) {\n            week.d = weekday;\n        } else {\n            getParsingFlags(config).invalidWeekday = input;\n        }\n    });\n\n    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n        week[token] = toInt(input);\n    });\n\n    // HELPERS\n\n    function parseWeekday(input, locale) {\n        if (typeof input !== 'string') {\n            return input;\n        }\n\n        if (!isNaN(input)) {\n            return parseInt(input, 10);\n        }\n\n        input = locale.weekdaysParse(input);\n        if (typeof input === 'number') {\n            return input;\n        }\n\n        return null;\n    }\n\n    function parseIsoWeekday(input, locale) {\n        if (typeof input === 'string') {\n            return locale.weekdaysParse(input) % 7 || 7;\n        }\n        return isNaN(input) ? null : input;\n    }\n\n    // LOCALES\n    function shiftWeekdays (ws, n) {\n        return ws.slice(n, 7).concat(ws.slice(0, n));\n    }\n\n    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n    function localeWeekdays (m, format) {\n        var weekdays = isArray(this._weekdays) ? this._weekdays :\n            this._weekdays[(m && m !== true && this._weekdays.isFormat.test(format)) ? 'format' : 'standalone'];\n        return (m === true) ? shiftWeekdays(weekdays, this._week.dow)\n            : (m) ? weekdays[m.day()] : weekdays;\n    }\n\n    var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n    function localeWeekdaysShort (m) {\n        return (m === true) ? shiftWeekdays(this._weekdaysShort, this._week.dow)\n            : (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n    }\n\n    var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n    function localeWeekdaysMin (m) {\n        return (m === true) ? shiftWeekdays(this._weekdaysMin, this._week.dow)\n            : (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n    }\n\n    function handleStrictParse$1(weekdayName, format, strict) {\n        var i, ii, mom, llc = weekdayName.toLocaleLowerCase();\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._minWeekdaysParse = [];\n\n            for (i = 0; i < 7; ++i) {\n                mom = createUTC([2000, 1]).day(i);\n                this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n                this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeWeekdaysParse (weekdayName, format, strict) {\n        var i, mom, regex;\n\n        if (this._weekdaysParseExact) {\n            return handleStrictParse$1.call(this, weekdayName, format, strict);\n        }\n\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._minWeekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._fullWeekdaysParse = [];\n        }\n\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n\n            mom = createUTC([2000, 1]).day(i);\n            if (strict && !this._fullWeekdaysParse[i]) {\n                this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$', 'i');\n                this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$', 'i');\n                this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$', 'i');\n            }\n            if (!this._weekdaysParse[i]) {\n                regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function getSetDayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n        if (input != null) {\n            input = parseWeekday(input, this.localeData());\n            return this.add(input - day, 'd');\n        } else {\n            return day;\n        }\n    }\n\n    function getSetLocaleDayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n        return input == null ? weekday : this.add(input - weekday, 'd');\n    }\n\n    function getSetISODayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n\n        // behaves the same as moment#day except\n        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n        // as a setter, sunday should belong to the previous week.\n\n        if (input != null) {\n            var weekday = parseIsoWeekday(input, this.localeData());\n            return this.day(this.day() % 7 ? weekday : weekday - 7);\n        } else {\n            return this.day() || 7;\n        }\n    }\n\n    var defaultWeekdaysRegex = matchWord;\n    function weekdaysRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysStrictRegex;\n            } else {\n                return this._weekdaysRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                this._weekdaysRegex = defaultWeekdaysRegex;\n            }\n            return this._weekdaysStrictRegex && isStrict ?\n                this._weekdaysStrictRegex : this._weekdaysRegex;\n        }\n    }\n\n    var defaultWeekdaysShortRegex = matchWord;\n    function weekdaysShortRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysShortStrictRegex;\n            } else {\n                return this._weekdaysShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n                this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n            }\n            return this._weekdaysShortStrictRegex && isStrict ?\n                this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n        }\n    }\n\n    var defaultWeekdaysMinRegex = matchWord;\n    function weekdaysMinRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysMinStrictRegex;\n            } else {\n                return this._weekdaysMinRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n                this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n            }\n            return this._weekdaysMinStrictRegex && isStrict ?\n                this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n        }\n    }\n\n\n    function computeWeekdaysParse () {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],\n            i, mom, minp, shortp, longp;\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, 1]).day(i);\n            minp = this.weekdaysMin(mom, '');\n            shortp = this.weekdaysShort(mom, '');\n            longp = this.weekdays(mom, '');\n            minPieces.push(minp);\n            shortPieces.push(shortp);\n            longPieces.push(longp);\n            mixedPieces.push(minp);\n            mixedPieces.push(shortp);\n            mixedPieces.push(longp);\n        }\n        // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n        // will match the longer piece.\n        minPieces.sort(cmpLenRev);\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 7; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n\n        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._weekdaysShortRegex = this._weekdaysRegex;\n        this._weekdaysMinRegex = this._weekdaysRegex;\n\n        this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n        this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n        this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n    }\n\n    // FORMATTING\n\n    function hFormat() {\n        return this.hours() % 12 || 12;\n    }\n\n    function kFormat() {\n        return this.hours() || 24;\n    }\n\n    addFormatToken('H', ['HH', 2], 0, 'hour');\n    addFormatToken('h', ['hh', 2], 0, hFormat);\n    addFormatToken('k', ['kk', 2], 0, kFormat);\n\n    addFormatToken('hmm', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('hmmss', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2);\n    });\n\n    addFormatToken('Hmm', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('Hmmss', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2);\n    });\n\n    function meridiem (token, lowercase) {\n        addFormatToken(token, 0, 0, function () {\n            return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n        });\n    }\n\n    meridiem('a', true);\n    meridiem('A', false);\n\n    // ALIASES\n\n    addUnitAlias('hour', 'h');\n\n    // PRIORITY\n    addUnitPriority('hour', 13);\n\n    // PARSING\n\n    function matchMeridiem (isStrict, locale) {\n        return locale._meridiemParse;\n    }\n\n    addRegexToken('a',  matchMeridiem);\n    addRegexToken('A',  matchMeridiem);\n    addRegexToken('H',  match1to2);\n    addRegexToken('h',  match1to2);\n    addRegexToken('k',  match1to2);\n    addRegexToken('HH', match1to2, match2);\n    addRegexToken('hh', match1to2, match2);\n    addRegexToken('kk', match1to2, match2);\n\n    addRegexToken('hmm', match3to4);\n    addRegexToken('hmmss', match5to6);\n    addRegexToken('Hmm', match3to4);\n    addRegexToken('Hmmss', match5to6);\n\n    addParseToken(['H', 'HH'], HOUR);\n    addParseToken(['k', 'kk'], function (input, array, config) {\n        var kInput = toInt(input);\n        array[HOUR] = kInput === 24 ? 0 : kInput;\n    });\n    addParseToken(['a', 'A'], function (input, array, config) {\n        config._isPm = config._locale.isPM(input);\n        config._meridiem = input;\n    });\n    addParseToken(['h', 'hh'], function (input, array, config) {\n        array[HOUR] = toInt(input);\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmmss', function (input, array, config) {\n        var pos1 = input.length - 4;\n        var pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('Hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n    });\n    addParseToken('Hmmss', function (input, array, config) {\n        var pos1 = input.length - 4;\n        var pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n    });\n\n    // LOCALES\n\n    function localeIsPM (input) {\n        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n        // Using charAt should be more compatible.\n        return ((input + '').toLowerCase().charAt(0) === 'p');\n    }\n\n    var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n    function localeMeridiem (hours, minutes, isLower) {\n        if (hours > 11) {\n            return isLower ? 'pm' : 'PM';\n        } else {\n            return isLower ? 'am' : 'AM';\n        }\n    }\n\n\n    // MOMENTS\n\n    // Setting the hour should keep the time, because the user explicitly\n    // specified which hour they want. So trying to maintain the same hour (in\n    // a new timezone) makes sense. Adding/subtracting hours does not follow\n    // this rule.\n    var getSetHour = makeGetSet('Hours', true);\n\n    var baseConfig = {\n        calendar: defaultCalendar,\n        longDateFormat: defaultLongDateFormat,\n        invalidDate: defaultInvalidDate,\n        ordinal: defaultOrdinal,\n        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n        relativeTime: defaultRelativeTime,\n\n        months: defaultLocaleMonths,\n        monthsShort: defaultLocaleMonthsShort,\n\n        week: defaultLocaleWeek,\n\n        weekdays: defaultLocaleWeekdays,\n        weekdaysMin: defaultLocaleWeekdaysMin,\n        weekdaysShort: defaultLocaleWeekdaysShort,\n\n        meridiemParse: defaultLocaleMeridiemParse\n    };\n\n    // internal storage for locale config files\n    var locales = {};\n    var localeFamilies = {};\n    var globalLocale;\n\n    function normalizeLocale(key) {\n        return key ? key.toLowerCase().replace('_', '-') : key;\n    }\n\n    // pick the locale from the array\n    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n    function chooseLocale(names) {\n        var i = 0, j, next, locale, split;\n\n        while (i < names.length) {\n            split = normalizeLocale(names[i]).split('-');\n            j = split.length;\n            next = normalizeLocale(names[i + 1]);\n            next = next ? next.split('-') : null;\n            while (j > 0) {\n                locale = loadLocale(split.slice(0, j).join('-'));\n                if (locale) {\n                    return locale;\n                }\n                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n                    //the next array item is better than a shallower substring of this one\n                    break;\n                }\n                j--;\n            }\n            i++;\n        }\n        return globalLocale;\n    }\n\n    function loadLocale(name) {\n        var oldLocale = null;\n        // TODO: Find a better way to register and load all the locales in Node\n        if (!locales[name] && ('object' !== 'undefined') &&\n                module && module.exports) {\n            try {\n                oldLocale = globalLocale._abbr;\n                var aliasedRequire = commonjsRequire;\n                aliasedRequire('./locale/' + name);\n                getSetGlobalLocale(oldLocale);\n            } catch (e) {}\n        }\n        return locales[name];\n    }\n\n    // This function will load locale and then set the global locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    function getSetGlobalLocale (key, values) {\n        var data;\n        if (key) {\n            if (isUndefined(values)) {\n                data = getLocale(key);\n            }\n            else {\n                data = defineLocale(key, values);\n            }\n\n            if (data) {\n                // moment.duration._locale = moment._locale = data;\n                globalLocale = data;\n            }\n            else {\n                if ((typeof console !==  'undefined') && console.warn) {\n                    //warn user if arguments are passed but the locale could not be set\n                    console.warn('Locale ' + key +  ' not found. Did you forget to load it?');\n                }\n            }\n        }\n\n        return globalLocale._abbr;\n    }\n\n    function defineLocale (name, config) {\n        if (config !== null) {\n            var locale, parentConfig = baseConfig;\n            config.abbr = name;\n            if (locales[name] != null) {\n                deprecateSimple('defineLocaleOverride',\n                        'use moment.updateLocale(localeName, config) to change ' +\n                        'an existing locale. moment.defineLocale(localeName, ' +\n                        'config) should only be used for creating a new locale ' +\n                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n                parentConfig = locales[name]._config;\n            } else if (config.parentLocale != null) {\n                if (locales[config.parentLocale] != null) {\n                    parentConfig = locales[config.parentLocale]._config;\n                } else {\n                    locale = loadLocale(config.parentLocale);\n                    if (locale != null) {\n                        parentConfig = locale._config;\n                    } else {\n                        if (!localeFamilies[config.parentLocale]) {\n                            localeFamilies[config.parentLocale] = [];\n                        }\n                        localeFamilies[config.parentLocale].push({\n                            name: name,\n                            config: config\n                        });\n                        return null;\n                    }\n                }\n            }\n            locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n            if (localeFamilies[name]) {\n                localeFamilies[name].forEach(function (x) {\n                    defineLocale(x.name, x.config);\n                });\n            }\n\n            // backwards compat for now: also set the locale\n            // make sure we set the locale AFTER all child locales have been\n            // created, so we won't end up with the child locale set.\n            getSetGlobalLocale(name);\n\n\n            return locales[name];\n        } else {\n            // useful for testing\n            delete locales[name];\n            return null;\n        }\n    }\n\n    function updateLocale(name, config) {\n        if (config != null) {\n            var locale, tmpLocale, parentConfig = baseConfig;\n            // MERGE\n            tmpLocale = loadLocale(name);\n            if (tmpLocale != null) {\n                parentConfig = tmpLocale._config;\n            }\n            config = mergeConfigs(parentConfig, config);\n            locale = new Locale(config);\n            locale.parentLocale = locales[name];\n            locales[name] = locale;\n\n            // backwards compat for now: also set the locale\n            getSetGlobalLocale(name);\n        } else {\n            // pass null for config to unupdate, useful for tests\n            if (locales[name] != null) {\n                if (locales[name].parentLocale != null) {\n                    locales[name] = locales[name].parentLocale;\n                } else if (locales[name] != null) {\n                    delete locales[name];\n                }\n            }\n        }\n        return locales[name];\n    }\n\n    // returns locale data\n    function getLocale (key) {\n        var locale;\n\n        if (key && key._locale && key._locale._abbr) {\n            key = key._locale._abbr;\n        }\n\n        if (!key) {\n            return globalLocale;\n        }\n\n        if (!isArray(key)) {\n            //short-circuit everything else\n            locale = loadLocale(key);\n            if (locale) {\n                return locale;\n            }\n            key = [key];\n        }\n\n        return chooseLocale(key);\n    }\n\n    function listLocales() {\n        return keys(locales);\n    }\n\n    function checkOverflow (m) {\n        var overflow;\n        var a = m._a;\n\n        if (a && getParsingFlags(m).overflow === -2) {\n            overflow =\n                a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :\n                a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\n                a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\n                a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :\n                a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :\n                a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\n                -1;\n\n            if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n                overflow = DATE;\n            }\n            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n                overflow = WEEK;\n            }\n            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n                overflow = WEEKDAY;\n            }\n\n            getParsingFlags(m).overflow = overflow;\n        }\n\n        return m;\n    }\n\n    // Pick the first defined of two or three arguments.\n    function defaults(a, b, c) {\n        if (a != null) {\n            return a;\n        }\n        if (b != null) {\n            return b;\n        }\n        return c;\n    }\n\n    function currentDateArray(config) {\n        // hooks is actually the exported moment object\n        var nowValue = new Date(hooks.now());\n        if (config._useUTC) {\n            return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n        }\n        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n    }\n\n    // convert an array to a date.\n    // the array should mirror the parameters below\n    // note: all values past the year are optional and will default to the lowest possible value.\n    // [year, month, day , hour, minute, second, millisecond]\n    function configFromArray (config) {\n        var i, date, input = [], currentDate, expectedWeekday, yearToUse;\n\n        if (config._d) {\n            return;\n        }\n\n        currentDate = currentDateArray(config);\n\n        //compute day of the year from weeks and weekdays\n        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n            dayOfYearFromWeekInfo(config);\n        }\n\n        //if the day of the year is set, figure out what it is\n        if (config._dayOfYear != null) {\n            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n            if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n                getParsingFlags(config)._overflowDayOfYear = true;\n            }\n\n            date = createUTCDate(yearToUse, 0, config._dayOfYear);\n            config._a[MONTH] = date.getUTCMonth();\n            config._a[DATE] = date.getUTCDate();\n        }\n\n        // Default to current date.\n        // * if no year, month, day of month are given, default to today\n        // * if day of month is given, default month and year\n        // * if month is given, default only year\n        // * if year is given, don't default anything\n        for (i = 0; i < 3 && config._a[i] == null; ++i) {\n            config._a[i] = input[i] = currentDate[i];\n        }\n\n        // Zero out whatever was not defaulted, including time\n        for (; i < 7; i++) {\n            config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n        }\n\n        // Check for 24:00:00.000\n        if (config._a[HOUR] === 24 &&\n                config._a[MINUTE] === 0 &&\n                config._a[SECOND] === 0 &&\n                config._a[MILLISECOND] === 0) {\n            config._nextDay = true;\n            config._a[HOUR] = 0;\n        }\n\n        config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n        expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay();\n\n        // Apply timezone offset from input. The actual utcOffset can be changed\n        // with parseZone.\n        if (config._tzm != null) {\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n        }\n\n        if (config._nextDay) {\n            config._a[HOUR] = 24;\n        }\n\n        // check for mismatching day of week\n        if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n            getParsingFlags(config).weekdayMismatch = true;\n        }\n    }\n\n    function dayOfYearFromWeekInfo(config) {\n        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n\n        w = config._w;\n        if (w.GG != null || w.W != null || w.E != null) {\n            dow = 1;\n            doy = 4;\n\n            // TODO: We need to take the current isoWeekYear, but that depends on\n            // how we interpret now (local, utc, fixed offset). So create\n            // a now version of current config (take local/utc/offset flags, and\n            // create now).\n            weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n            week = defaults(w.W, 1);\n            weekday = defaults(w.E, 1);\n            if (weekday < 1 || weekday > 7) {\n                weekdayOverflow = true;\n            }\n        } else {\n            dow = config._locale._week.dow;\n            doy = config._locale._week.doy;\n\n            var curWeek = weekOfYear(createLocal(), dow, doy);\n\n            weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\n            // Default to current week.\n            week = defaults(w.w, curWeek.week);\n\n            if (w.d != null) {\n                // weekday -- low day numbers are considered next week\n                weekday = w.d;\n                if (weekday < 0 || weekday > 6) {\n                    weekdayOverflow = true;\n                }\n            } else if (w.e != null) {\n                // local weekday -- counting starts from beginning of week\n                weekday = w.e + dow;\n                if (w.e < 0 || w.e > 6) {\n                    weekdayOverflow = true;\n                }\n            } else {\n                // default to beginning of week\n                weekday = dow;\n            }\n        }\n        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n            getParsingFlags(config)._overflowWeeks = true;\n        } else if (weekdayOverflow != null) {\n            getParsingFlags(config)._overflowWeekday = true;\n        } else {\n            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n            config._a[YEAR] = temp.year;\n            config._dayOfYear = temp.dayOfYear;\n        }\n    }\n\n    // iso 8601 regex\n    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n    var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n    var basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n\n    var tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n\n    var isoDates = [\n        ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n        ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n        ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n        ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n        ['YYYY-DDD', /\\d{4}-\\d{3}/],\n        ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n        ['YYYYYYMMDD', /[+-]\\d{10}/],\n        ['YYYYMMDD', /\\d{8}/],\n        // YYYYMM is NOT allowed by the standard\n        ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n        ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n        ['YYYYDDD', /\\d{7}/]\n    ];\n\n    // iso time formats and regexes\n    var isoTimes = [\n        ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n        ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n        ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n        ['HH:mm', /\\d\\d:\\d\\d/],\n        ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n        ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n        ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n        ['HHmm', /\\d\\d\\d\\d/],\n        ['HH', /\\d\\d/]\n    ];\n\n    var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\n\n    // date from iso format\n    function configFromISO(config) {\n        var i, l,\n            string = config._i,\n            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n            allowTime, dateFormat, timeFormat, tzFormat;\n\n        if (match) {\n            getParsingFlags(config).iso = true;\n\n            for (i = 0, l = isoDates.length; i < l; i++) {\n                if (isoDates[i][1].exec(match[1])) {\n                    dateFormat = isoDates[i][0];\n                    allowTime = isoDates[i][2] !== false;\n                    break;\n                }\n            }\n            if (dateFormat == null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[3]) {\n                for (i = 0, l = isoTimes.length; i < l; i++) {\n                    if (isoTimes[i][1].exec(match[3])) {\n                        // match[2] should be 'T' or space\n                        timeFormat = (match[2] || ' ') + isoTimes[i][0];\n                        break;\n                    }\n                }\n                if (timeFormat == null) {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            if (!allowTime && timeFormat != null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[4]) {\n                if (tzRegex.exec(match[4])) {\n                    tzFormat = 'Z';\n                } else {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n            configFromStringAndFormat(config);\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n    var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\n    function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n        var result = [\n            untruncateYear(yearStr),\n            defaultLocaleMonthsShort.indexOf(monthStr),\n            parseInt(dayStr, 10),\n            parseInt(hourStr, 10),\n            parseInt(minuteStr, 10)\n        ];\n\n        if (secondStr) {\n            result.push(parseInt(secondStr, 10));\n        }\n\n        return result;\n    }\n\n    function untruncateYear(yearStr) {\n        var year = parseInt(yearStr, 10);\n        if (year <= 49) {\n            return 2000 + year;\n        } else if (year <= 999) {\n            return 1900 + year;\n        }\n        return year;\n    }\n\n    function preprocessRFC2822(s) {\n        // Remove comments and folding whitespace and replace multiple-spaces with a single space\n        return s.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n    }\n\n    function checkWeekday(weekdayStr, parsedInput, config) {\n        if (weekdayStr) {\n            // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n            var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n                weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n            if (weekdayProvided !== weekdayActual) {\n                getParsingFlags(config).weekdayMismatch = true;\n                config._isValid = false;\n                return false;\n            }\n        }\n        return true;\n    }\n\n    var obsOffsets = {\n        UT: 0,\n        GMT: 0,\n        EDT: -4 * 60,\n        EST: -5 * 60,\n        CDT: -5 * 60,\n        CST: -6 * 60,\n        MDT: -6 * 60,\n        MST: -7 * 60,\n        PDT: -7 * 60,\n        PST: -8 * 60\n    };\n\n    function calculateOffset(obsOffset, militaryOffset, numOffset) {\n        if (obsOffset) {\n            return obsOffsets[obsOffset];\n        } else if (militaryOffset) {\n            // the only allowed military tz is Z\n            return 0;\n        } else {\n            var hm = parseInt(numOffset, 10);\n            var m = hm % 100, h = (hm - m) / 100;\n            return h * 60 + m;\n        }\n    }\n\n    // date and time from ref 2822 format\n    function configFromRFC2822(config) {\n        var match = rfc2822.exec(preprocessRFC2822(config._i));\n        if (match) {\n            var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n            if (!checkWeekday(match[1], parsedArray, config)) {\n                return;\n            }\n\n            config._a = parsedArray;\n            config._tzm = calculateOffset(match[8], match[9], match[10]);\n\n            config._d = createUTCDate.apply(null, config._a);\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n            getParsingFlags(config).rfc2822 = true;\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // date from iso format or fallback\n    function configFromString(config) {\n        var matched = aspNetJsonRegex.exec(config._i);\n\n        if (matched !== null) {\n            config._d = new Date(+matched[1]);\n            return;\n        }\n\n        configFromISO(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        configFromRFC2822(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        // Final attempt, use Input Fallback\n        hooks.createFromInputFallback(config);\n    }\n\n    hooks.createFromInputFallback = deprecate(\n        'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n        'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n        'discouraged and will be removed in an upcoming major release. Please refer to ' +\n        'http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n        function (config) {\n            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n        }\n    );\n\n    // constant that refers to the ISO standard\n    hooks.ISO_8601 = function () {};\n\n    // constant that refers to the RFC 2822 form\n    hooks.RFC_2822 = function () {};\n\n    // date from string and format string\n    function configFromStringAndFormat(config) {\n        // TODO: Move this to another part of the creation flow to prevent circular deps\n        if (config._f === hooks.ISO_8601) {\n            configFromISO(config);\n            return;\n        }\n        if (config._f === hooks.RFC_2822) {\n            configFromRFC2822(config);\n            return;\n        }\n        config._a = [];\n        getParsingFlags(config).empty = true;\n\n        // This array is used to make a Date, either with `new Date` or `Date.UTC`\n        var string = '' + config._i,\n            i, parsedInput, tokens, token, skipped,\n            stringLength = string.length,\n            totalParsedInputLength = 0;\n\n        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n        for (i = 0; i < tokens.length; i++) {\n            token = tokens[i];\n            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n            // console.log('token', token, 'parsedInput', parsedInput,\n            //         'regex', getParseRegexForToken(token, config));\n            if (parsedInput) {\n                skipped = string.substr(0, string.indexOf(parsedInput));\n                if (skipped.length > 0) {\n                    getParsingFlags(config).unusedInput.push(skipped);\n                }\n                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n                totalParsedInputLength += parsedInput.length;\n            }\n            // don't parse if it's not a known token\n            if (formatTokenFunctions[token]) {\n                if (parsedInput) {\n                    getParsingFlags(config).empty = false;\n                }\n                else {\n                    getParsingFlags(config).unusedTokens.push(token);\n                }\n                addTimeToArrayFromToken(token, parsedInput, config);\n            }\n            else if (config._strict && !parsedInput) {\n                getParsingFlags(config).unusedTokens.push(token);\n            }\n        }\n\n        // add remaining unparsed input length to the string\n        getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n        if (string.length > 0) {\n            getParsingFlags(config).unusedInput.push(string);\n        }\n\n        // clear _12h flag if hour is <= 12\n        if (config._a[HOUR] <= 12 &&\n            getParsingFlags(config).bigHour === true &&\n            config._a[HOUR] > 0) {\n            getParsingFlags(config).bigHour = undefined;\n        }\n\n        getParsingFlags(config).parsedDateParts = config._a.slice(0);\n        getParsingFlags(config).meridiem = config._meridiem;\n        // handle meridiem\n        config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n\n        configFromArray(config);\n        checkOverflow(config);\n    }\n\n\n    function meridiemFixWrap (locale, hour, meridiem) {\n        var isPm;\n\n        if (meridiem == null) {\n            // nothing to do\n            return hour;\n        }\n        if (locale.meridiemHour != null) {\n            return locale.meridiemHour(hour, meridiem);\n        } else if (locale.isPM != null) {\n            // Fallback\n            isPm = locale.isPM(meridiem);\n            if (isPm && hour < 12) {\n                hour += 12;\n            }\n            if (!isPm && hour === 12) {\n                hour = 0;\n            }\n            return hour;\n        } else {\n            // this is not supposed to happen\n            return hour;\n        }\n    }\n\n    // date from string and array of format strings\n    function configFromStringAndArray(config) {\n        var tempConfig,\n            bestMoment,\n\n            scoreToBeat,\n            i,\n            currentScore;\n\n        if (config._f.length === 0) {\n            getParsingFlags(config).invalidFormat = true;\n            config._d = new Date(NaN);\n            return;\n        }\n\n        for (i = 0; i < config._f.length; i++) {\n            currentScore = 0;\n            tempConfig = copyConfig({}, config);\n            if (config._useUTC != null) {\n                tempConfig._useUTC = config._useUTC;\n            }\n            tempConfig._f = config._f[i];\n            configFromStringAndFormat(tempConfig);\n\n            if (!isValid(tempConfig)) {\n                continue;\n            }\n\n            // if there is any input that was not parsed add a penalty for that format\n            currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n            //or tokens\n            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n            getParsingFlags(tempConfig).score = currentScore;\n\n            if (scoreToBeat == null || currentScore < scoreToBeat) {\n                scoreToBeat = currentScore;\n                bestMoment = tempConfig;\n            }\n        }\n\n        extend(config, bestMoment || tempConfig);\n    }\n\n    function configFromObject(config) {\n        if (config._d) {\n            return;\n        }\n\n        var i = normalizeObjectUnits(config._i);\n        config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n            return obj && parseInt(obj, 10);\n        });\n\n        configFromArray(config);\n    }\n\n    function createFromConfig (config) {\n        var res = new Moment(checkOverflow(prepareConfig(config)));\n        if (res._nextDay) {\n            // Adding is smart enough around DST\n            res.add(1, 'd');\n            res._nextDay = undefined;\n        }\n\n        return res;\n    }\n\n    function prepareConfig (config) {\n        var input = config._i,\n            format = config._f;\n\n        config._locale = config._locale || getLocale(config._l);\n\n        if (input === null || (format === undefined && input === '')) {\n            return createInvalid({nullInput: true});\n        }\n\n        if (typeof input === 'string') {\n            config._i = input = config._locale.preparse(input);\n        }\n\n        if (isMoment(input)) {\n            return new Moment(checkOverflow(input));\n        } else if (isDate(input)) {\n            config._d = input;\n        } else if (isArray(format)) {\n            configFromStringAndArray(config);\n        } else if (format) {\n            configFromStringAndFormat(config);\n        }  else {\n            configFromInput(config);\n        }\n\n        if (!isValid(config)) {\n            config._d = null;\n        }\n\n        return config;\n    }\n\n    function configFromInput(config) {\n        var input = config._i;\n        if (isUndefined(input)) {\n            config._d = new Date(hooks.now());\n        } else if (isDate(input)) {\n            config._d = new Date(input.valueOf());\n        } else if (typeof input === 'string') {\n            configFromString(config);\n        } else if (isArray(input)) {\n            config._a = map(input.slice(0), function (obj) {\n                return parseInt(obj, 10);\n            });\n            configFromArray(config);\n        } else if (isObject(input)) {\n            configFromObject(config);\n        } else if (isNumber(input)) {\n            // from milliseconds\n            config._d = new Date(input);\n        } else {\n            hooks.createFromInputFallback(config);\n        }\n    }\n\n    function createLocalOrUTC (input, format, locale, strict, isUTC) {\n        var c = {};\n\n        if (locale === true || locale === false) {\n            strict = locale;\n            locale = undefined;\n        }\n\n        if ((isObject(input) && isObjectEmpty(input)) ||\n                (isArray(input) && input.length === 0)) {\n            input = undefined;\n        }\n        // object construction must be done this way.\n        // https://github.com/moment/moment/issues/1423\n        c._isAMomentObject = true;\n        c._useUTC = c._isUTC = isUTC;\n        c._l = locale;\n        c._i = input;\n        c._f = format;\n        c._strict = strict;\n\n        return createFromConfig(c);\n    }\n\n    function createLocal (input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, false);\n    }\n\n    var prototypeMin = deprecate(\n        'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\n        function () {\n            var other = createLocal.apply(null, arguments);\n            if (this.isValid() && other.isValid()) {\n                return other < this ? this : other;\n            } else {\n                return createInvalid();\n            }\n        }\n    );\n\n    var prototypeMax = deprecate(\n        'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\n        function () {\n            var other = createLocal.apply(null, arguments);\n            if (this.isValid() && other.isValid()) {\n                return other > this ? this : other;\n            } else {\n                return createInvalid();\n            }\n        }\n    );\n\n    // Pick a moment m from moments so that m[fn](other) is true for all\n    // other. This relies on the function fn to be transitive.\n    //\n    // moments should either be an array of moment objects or an array, whose\n    // first element is an array of moment objects.\n    function pickBy(fn, moments) {\n        var res, i;\n        if (moments.length === 1 && isArray(moments[0])) {\n            moments = moments[0];\n        }\n        if (!moments.length) {\n            return createLocal();\n        }\n        res = moments[0];\n        for (i = 1; i < moments.length; ++i) {\n            if (!moments[i].isValid() || moments[i][fn](res)) {\n                res = moments[i];\n            }\n        }\n        return res;\n    }\n\n    // TODO: Use [].sort instead?\n    function min () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isBefore', args);\n    }\n\n    function max () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isAfter', args);\n    }\n\n    var now = function () {\n        return Date.now ? Date.now() : +(new Date());\n    };\n\n    var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\n    function isDurationValid(m) {\n        for (var key in m) {\n            if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n                return false;\n            }\n        }\n\n        var unitHasDecimal = false;\n        for (var i = 0; i < ordering.length; ++i) {\n            if (m[ordering[i]]) {\n                if (unitHasDecimal) {\n                    return false; // only allow non-integers for smallest unit\n                }\n                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n                    unitHasDecimal = true;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    function isValid$1() {\n        return this._isValid;\n    }\n\n    function createInvalid$1() {\n        return createDuration(NaN);\n    }\n\n    function Duration (duration) {\n        var normalizedInput = normalizeObjectUnits(duration),\n            years = normalizedInput.year || 0,\n            quarters = normalizedInput.quarter || 0,\n            months = normalizedInput.month || 0,\n            weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n            days = normalizedInput.day || 0,\n            hours = normalizedInput.hour || 0,\n            minutes = normalizedInput.minute || 0,\n            seconds = normalizedInput.second || 0,\n            milliseconds = normalizedInput.millisecond || 0;\n\n        this._isValid = isDurationValid(normalizedInput);\n\n        // representation for dateAddRemove\n        this._milliseconds = +milliseconds +\n            seconds * 1e3 + // 1000\n            minutes * 6e4 + // 1000 * 60\n            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n        // Because of dateAddRemove treats 24 hours as different from a\n        // day when working around DST, we need to store them separately\n        this._days = +days +\n            weeks * 7;\n        // It is impossible to translate months into days without knowing\n        // which months you are are talking about, so we have to store\n        // it separately.\n        this._months = +months +\n            quarters * 3 +\n            years * 12;\n\n        this._data = {};\n\n        this._locale = getLocale();\n\n        this._bubble();\n    }\n\n    function isDuration (obj) {\n        return obj instanceof Duration;\n    }\n\n    function absRound (number) {\n        if (number < 0) {\n            return Math.round(-1 * number) * -1;\n        } else {\n            return Math.round(number);\n        }\n    }\n\n    // FORMATTING\n\n    function offset (token, separator) {\n        addFormatToken(token, 0, 0, function () {\n            var offset = this.utcOffset();\n            var sign = '+';\n            if (offset < 0) {\n                offset = -offset;\n                sign = '-';\n            }\n            return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\n        });\n    }\n\n    offset('Z', ':');\n    offset('ZZ', '');\n\n    // PARSING\n\n    addRegexToken('Z',  matchShortOffset);\n    addRegexToken('ZZ', matchShortOffset);\n    addParseToken(['Z', 'ZZ'], function (input, array, config) {\n        config._useUTC = true;\n        config._tzm = offsetFromString(matchShortOffset, input);\n    });\n\n    // HELPERS\n\n    // timezone chunker\n    // '+10:00' > ['10',  '00']\n    // '-1530'  > ['-15', '30']\n    var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n    function offsetFromString(matcher, string) {\n        var matches = (string || '').match(matcher);\n\n        if (matches === null) {\n            return null;\n        }\n\n        var chunk   = matches[matches.length - 1] || [];\n        var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n        var minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n        return minutes === 0 ?\n          0 :\n          parts[0] === '+' ? minutes : -minutes;\n    }\n\n    // Return a moment from input, that is local/utc/zone equivalent to model.\n    function cloneWithOffset(input, model) {\n        var res, diff;\n        if (model._isUTC) {\n            res = model.clone();\n            diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();\n            // Use low-level api, because this fn is low-level api.\n            res._d.setTime(res._d.valueOf() + diff);\n            hooks.updateOffset(res, false);\n            return res;\n        } else {\n            return createLocal(input).local();\n        }\n    }\n\n    function getDateOffset (m) {\n        // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n        // https://github.com/moment/moment/pull/1871\n        return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n    }\n\n    // HOOKS\n\n    // This function will be called whenever a moment is mutated.\n    // It is intended to keep the offset in sync with the timezone.\n    hooks.updateOffset = function () {};\n\n    // MOMENTS\n\n    // keepLocalTime = true means only change the timezone, without\n    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n    // +0200, so we adjust the time as needed, to be valid.\n    //\n    // Keeping the time actually adds/subtracts (one hour)\n    // from the actual represented time. That is why we call updateOffset\n    // a second time. In case it wants us to change the offset again\n    // _changeInProgress == true case, then we have to adjust, because\n    // there is no such time in the given timezone.\n    function getSetOffset (input, keepLocalTime, keepMinutes) {\n        var offset = this._offset || 0,\n            localAdjust;\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        if (input != null) {\n            if (typeof input === 'string') {\n                input = offsetFromString(matchShortOffset, input);\n                if (input === null) {\n                    return this;\n                }\n            } else if (Math.abs(input) < 16 && !keepMinutes) {\n                input = input * 60;\n            }\n            if (!this._isUTC && keepLocalTime) {\n                localAdjust = getDateOffset(this);\n            }\n            this._offset = input;\n            this._isUTC = true;\n            if (localAdjust != null) {\n                this.add(localAdjust, 'm');\n            }\n            if (offset !== input) {\n                if (!keepLocalTime || this._changeInProgress) {\n                    addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n                } else if (!this._changeInProgress) {\n                    this._changeInProgress = true;\n                    hooks.updateOffset(this, true);\n                    this._changeInProgress = null;\n                }\n            }\n            return this;\n        } else {\n            return this._isUTC ? offset : getDateOffset(this);\n        }\n    }\n\n    function getSetZone (input, keepLocalTime) {\n        if (input != null) {\n            if (typeof input !== 'string') {\n                input = -input;\n            }\n\n            this.utcOffset(input, keepLocalTime);\n\n            return this;\n        } else {\n            return -this.utcOffset();\n        }\n    }\n\n    function setOffsetToUTC (keepLocalTime) {\n        return this.utcOffset(0, keepLocalTime);\n    }\n\n    function setOffsetToLocal (keepLocalTime) {\n        if (this._isUTC) {\n            this.utcOffset(0, keepLocalTime);\n            this._isUTC = false;\n\n            if (keepLocalTime) {\n                this.subtract(getDateOffset(this), 'm');\n            }\n        }\n        return this;\n    }\n\n    function setOffsetToParsedOffset () {\n        if (this._tzm != null) {\n            this.utcOffset(this._tzm, false, true);\n        } else if (typeof this._i === 'string') {\n            var tZone = offsetFromString(matchOffset, this._i);\n            if (tZone != null) {\n                this.utcOffset(tZone);\n            }\n            else {\n                this.utcOffset(0, true);\n            }\n        }\n        return this;\n    }\n\n    function hasAlignedHourOffset (input) {\n        if (!this.isValid()) {\n            return false;\n        }\n        input = input ? createLocal(input).utcOffset() : 0;\n\n        return (this.utcOffset() - input) % 60 === 0;\n    }\n\n    function isDaylightSavingTime () {\n        return (\n            this.utcOffset() > this.clone().month(0).utcOffset() ||\n            this.utcOffset() > this.clone().month(5).utcOffset()\n        );\n    }\n\n    function isDaylightSavingTimeShifted () {\n        if (!isUndefined(this._isDSTShifted)) {\n            return this._isDSTShifted;\n        }\n\n        var c = {};\n\n        copyConfig(c, this);\n        c = prepareConfig(c);\n\n        if (c._a) {\n            var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n            this._isDSTShifted = this.isValid() &&\n                compareArrays(c._a, other.toArray()) > 0;\n        } else {\n            this._isDSTShifted = false;\n        }\n\n        return this._isDSTShifted;\n    }\n\n    function isLocal () {\n        return this.isValid() ? !this._isUTC : false;\n    }\n\n    function isUtcOffset () {\n        return this.isValid() ? this._isUTC : false;\n    }\n\n    function isUtc () {\n        return this.isValid() ? this._isUTC && this._offset === 0 : false;\n    }\n\n    // ASP.NET json date format regex\n    var aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/;\n\n    // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n    // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n    // and further modified to allow for strings containing both week and day\n    var isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n    function createDuration (input, key) {\n        var duration = input,\n            // matching against regexp is expensive, do it on demand\n            match = null,\n            sign,\n            ret,\n            diffRes;\n\n        if (isDuration(input)) {\n            duration = {\n                ms : input._milliseconds,\n                d  : input._days,\n                M  : input._months\n            };\n        } else if (isNumber(input)) {\n            duration = {};\n            if (key) {\n                duration[key] = input;\n            } else {\n                duration.milliseconds = input;\n            }\n        } else if (!!(match = aspNetRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : 1;\n            duration = {\n                y  : 0,\n                d  : toInt(match[DATE])                         * sign,\n                h  : toInt(match[HOUR])                         * sign,\n                m  : toInt(match[MINUTE])                       * sign,\n                s  : toInt(match[SECOND])                       * sign,\n                ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n            };\n        } else if (!!(match = isoRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : 1;\n            duration = {\n                y : parseIso(match[2], sign),\n                M : parseIso(match[3], sign),\n                w : parseIso(match[4], sign),\n                d : parseIso(match[5], sign),\n                h : parseIso(match[6], sign),\n                m : parseIso(match[7], sign),\n                s : parseIso(match[8], sign)\n            };\n        } else if (duration == null) {// checks for null or undefined\n            duration = {};\n        } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n            diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n\n            duration = {};\n            duration.ms = diffRes.milliseconds;\n            duration.M = diffRes.months;\n        }\n\n        ret = new Duration(duration);\n\n        if (isDuration(input) && hasOwnProp(input, '_locale')) {\n            ret._locale = input._locale;\n        }\n\n        return ret;\n    }\n\n    createDuration.fn = Duration.prototype;\n    createDuration.invalid = createInvalid$1;\n\n    function parseIso (inp, sign) {\n        // We'd normally use ~~inp for this, but unfortunately it also\n        // converts floats to ints.\n        // inp may be undefined, so careful calling replace on it.\n        var res = inp && parseFloat(inp.replace(',', '.'));\n        // apply sign while we're at it\n        return (isNaN(res) ? 0 : res) * sign;\n    }\n\n    function positiveMomentsDifference(base, other) {\n        var res = {};\n\n        res.months = other.month() - base.month() +\n            (other.year() - base.year()) * 12;\n        if (base.clone().add(res.months, 'M').isAfter(other)) {\n            --res.months;\n        }\n\n        res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\n\n        return res;\n    }\n\n    function momentsDifference(base, other) {\n        var res;\n        if (!(base.isValid() && other.isValid())) {\n            return {milliseconds: 0, months: 0};\n        }\n\n        other = cloneWithOffset(other, base);\n        if (base.isBefore(other)) {\n            res = positiveMomentsDifference(base, other);\n        } else {\n            res = positiveMomentsDifference(other, base);\n            res.milliseconds = -res.milliseconds;\n            res.months = -res.months;\n        }\n\n        return res;\n    }\n\n    // TODO: remove 'name' arg after deprecation is removed\n    function createAdder(direction, name) {\n        return function (val, period) {\n            var dur, tmp;\n            //invert the arguments, but complain about it\n            if (period !== null && !isNaN(+period)) {\n                deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +\n                'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n                tmp = val; val = period; period = tmp;\n            }\n\n            val = typeof val === 'string' ? +val : val;\n            dur = createDuration(val, period);\n            addSubtract(this, dur, direction);\n            return this;\n        };\n    }\n\n    function addSubtract (mom, duration, isAdding, updateOffset) {\n        var milliseconds = duration._milliseconds,\n            days = absRound(duration._days),\n            months = absRound(duration._months);\n\n        if (!mom.isValid()) {\n            // No op\n            return;\n        }\n\n        updateOffset = updateOffset == null ? true : updateOffset;\n\n        if (months) {\n            setMonth(mom, get(mom, 'Month') + months * isAdding);\n        }\n        if (days) {\n            set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n        }\n        if (milliseconds) {\n            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n        }\n        if (updateOffset) {\n            hooks.updateOffset(mom, days || months);\n        }\n    }\n\n    var add      = createAdder(1, 'add');\n    var subtract = createAdder(-1, 'subtract');\n\n    function getCalendarFormat(myMoment, now) {\n        var diff = myMoment.diff(now, 'days', true);\n        return diff < -6 ? 'sameElse' :\n                diff < -1 ? 'lastWeek' :\n                diff < 0 ? 'lastDay' :\n                diff < 1 ? 'sameDay' :\n                diff < 2 ? 'nextDay' :\n                diff < 7 ? 'nextWeek' : 'sameElse';\n    }\n\n    function calendar$1 (time, formats) {\n        // We want to compare the start of today, vs this.\n        // Getting start-of-today depends on whether we're local/utc/offset or not.\n        var now = time || createLocal(),\n            sod = cloneWithOffset(now, this).startOf('day'),\n            format = hooks.calendarFormat(this, sod) || 'sameElse';\n\n        var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n\n        return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n    }\n\n    function clone () {\n        return new Moment(this);\n    }\n\n    function isAfter (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() > localInput.valueOf();\n        } else {\n            return localInput.valueOf() < this.clone().startOf(units).valueOf();\n        }\n    }\n\n    function isBefore (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() < localInput.valueOf();\n        } else {\n            return this.clone().endOf(units).valueOf() < localInput.valueOf();\n        }\n    }\n\n    function isBetween (from, to, units, inclusivity) {\n        var localFrom = isMoment(from) ? from : createLocal(from),\n            localTo = isMoment(to) ? to : createLocal(to);\n        if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n            return false;\n        }\n        inclusivity = inclusivity || '()';\n        return (inclusivity[0] === '(' ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) &&\n            (inclusivity[1] === ')' ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));\n    }\n\n    function isSame (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input),\n            inputMs;\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() === localInput.valueOf();\n        } else {\n            inputMs = localInput.valueOf();\n            return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n        }\n    }\n\n    function isSameOrAfter (input, units) {\n        return this.isSame(input, units) || this.isAfter(input, units);\n    }\n\n    function isSameOrBefore (input, units) {\n        return this.isSame(input, units) || this.isBefore(input, units);\n    }\n\n    function diff (input, units, asFloat) {\n        var that,\n            zoneDelta,\n            output;\n\n        if (!this.isValid()) {\n            return NaN;\n        }\n\n        that = cloneWithOffset(input, this);\n\n        if (!that.isValid()) {\n            return NaN;\n        }\n\n        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\n        units = normalizeUnits(units);\n\n        switch (units) {\n            case 'year': output = monthDiff(this, that) / 12; break;\n            case 'month': output = monthDiff(this, that); break;\n            case 'quarter': output = monthDiff(this, that) / 3; break;\n            case 'second': output = (this - that) / 1e3; break; // 1000\n            case 'minute': output = (this - that) / 6e4; break; // 1000 * 60\n            case 'hour': output = (this - that) / 36e5; break; // 1000 * 60 * 60\n            case 'day': output = (this - that - zoneDelta) / 864e5; break; // 1000 * 60 * 60 * 24, negate dst\n            case 'week': output = (this - that - zoneDelta) / 6048e5; break; // 1000 * 60 * 60 * 24 * 7, negate dst\n            default: output = this - that;\n        }\n\n        return asFloat ? output : absFloor(output);\n    }\n\n    function monthDiff (a, b) {\n        // difference in months\n        var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),\n            // b is in (anchor - 1 month, anchor + 1 month)\n            anchor = a.clone().add(wholeMonthDiff, 'months'),\n            anchor2, adjust;\n\n        if (b - anchor < 0) {\n            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor - anchor2);\n        } else {\n            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor2 - anchor);\n        }\n\n        //check for negative zero, return zero if negative zero\n        return -(wholeMonthDiff + adjust) || 0;\n    }\n\n    hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n    hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n    function toString () {\n        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n    }\n\n    function toISOString(keepOffset) {\n        if (!this.isValid()) {\n            return null;\n        }\n        var utc = keepOffset !== true;\n        var m = utc ? this.clone().utc() : this;\n        if (m.year() < 0 || m.year() > 9999) {\n            return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n        }\n        if (isFunction(Date.prototype.toISOString)) {\n            // native implementation is ~50x faster, use it when we can\n            if (utc) {\n                return this.toDate().toISOString();\n            } else {\n                return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));\n            }\n        }\n        return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n\n    /**\n     * Return a human readable representation of a moment that can\n     * also be evaluated to get a new moment which is the same\n     *\n     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n     */\n    function inspect () {\n        if (!this.isValid()) {\n            return 'moment.invalid(/* ' + this._i + ' */)';\n        }\n        var func = 'moment';\n        var zone = '';\n        if (!this.isLocal()) {\n            func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n            zone = 'Z';\n        }\n        var prefix = '[' + func + '(\"]';\n        var year = (0 <= this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';\n        var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n        var suffix = zone + '[\")]';\n\n        return this.format(prefix + year + datetime + suffix);\n    }\n\n    function format (inputString) {\n        if (!inputString) {\n            inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n        }\n        var output = formatMoment(this, inputString);\n        return this.localeData().postformat(output);\n    }\n\n    function from (time, withoutSuffix) {\n        if (this.isValid() &&\n                ((isMoment(time) && time.isValid()) ||\n                 createLocal(time).isValid())) {\n            return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function fromNow (withoutSuffix) {\n        return this.from(createLocal(), withoutSuffix);\n    }\n\n    function to (time, withoutSuffix) {\n        if (this.isValid() &&\n                ((isMoment(time) && time.isValid()) ||\n                 createLocal(time).isValid())) {\n            return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function toNow (withoutSuffix) {\n        return this.to(createLocal(), withoutSuffix);\n    }\n\n    // If passed a locale key, it will set the locale for this\n    // instance.  Otherwise, it will return the locale configuration\n    // variables for this instance.\n    function locale (key) {\n        var newLocaleData;\n\n        if (key === undefined) {\n            return this._locale._abbr;\n        } else {\n            newLocaleData = getLocale(key);\n            if (newLocaleData != null) {\n                this._locale = newLocaleData;\n            }\n            return this;\n        }\n    }\n\n    var lang = deprecate(\n        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n        function (key) {\n            if (key === undefined) {\n                return this.localeData();\n            } else {\n                return this.locale(key);\n            }\n        }\n    );\n\n    function localeData () {\n        return this._locale;\n    }\n\n    var MS_PER_SECOND = 1000;\n    var MS_PER_MINUTE = 60 * MS_PER_SECOND;\n    var MS_PER_HOUR = 60 * MS_PER_MINUTE;\n    var MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR;\n\n    // actual modulo - handles negative numbers (for dates before 1970):\n    function mod$1(dividend, divisor) {\n        return (dividend % divisor + divisor) % divisor;\n    }\n\n    function localStartOfDate(y, m, d) {\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n        } else {\n            return new Date(y, m, d).valueOf();\n        }\n    }\n\n    function utcStartOfDate(y, m, d) {\n        // Date.UTC remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n        } else {\n            return Date.UTC(y, m, d);\n        }\n    }\n\n    function startOf (units) {\n        var time;\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond' || !this.isValid()) {\n            return this;\n        }\n\n        var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n        switch (units) {\n            case 'year':\n                time = startOfDate(this.year(), 0, 1);\n                break;\n            case 'quarter':\n                time = startOfDate(this.year(), this.month() - this.month() % 3, 1);\n                break;\n            case 'month':\n                time = startOfDate(this.year(), this.month(), 1);\n                break;\n            case 'week':\n                time = startOfDate(this.year(), this.month(), this.date() - this.weekday());\n                break;\n            case 'isoWeek':\n                time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));\n                break;\n            case 'day':\n            case 'date':\n                time = startOfDate(this.year(), this.month(), this.date());\n                break;\n            case 'hour':\n                time = this._d.valueOf();\n                time -= mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR);\n                break;\n            case 'minute':\n                time = this._d.valueOf();\n                time -= mod$1(time, MS_PER_MINUTE);\n                break;\n            case 'second':\n                time = this._d.valueOf();\n                time -= mod$1(time, MS_PER_SECOND);\n                break;\n        }\n\n        this._d.setTime(time);\n        hooks.updateOffset(this, true);\n        return this;\n    }\n\n    function endOf (units) {\n        var time;\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond' || !this.isValid()) {\n            return this;\n        }\n\n        var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n        switch (units) {\n            case 'year':\n                time = startOfDate(this.year() + 1, 0, 1) - 1;\n                break;\n            case 'quarter':\n                time = startOfDate(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;\n                break;\n            case 'month':\n                time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n                break;\n            case 'week':\n                time = startOfDate(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;\n                break;\n            case 'isoWeek':\n                time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;\n                break;\n            case 'day':\n            case 'date':\n                time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n                break;\n            case 'hour':\n                time = this._d.valueOf();\n                time += MS_PER_HOUR - mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR) - 1;\n                break;\n            case 'minute':\n                time = this._d.valueOf();\n                time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n                break;\n            case 'second':\n                time = this._d.valueOf();\n                time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n                break;\n        }\n\n        this._d.setTime(time);\n        hooks.updateOffset(this, true);\n        return this;\n    }\n\n    function valueOf () {\n        return this._d.valueOf() - ((this._offset || 0) * 60000);\n    }\n\n    function unix () {\n        return Math.floor(this.valueOf() / 1000);\n    }\n\n    function toDate () {\n        return new Date(this.valueOf());\n    }\n\n    function toArray () {\n        var m = this;\n        return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n    }\n\n    function toObject () {\n        var m = this;\n        return {\n            years: m.year(),\n            months: m.month(),\n            date: m.date(),\n            hours: m.hours(),\n            minutes: m.minutes(),\n            seconds: m.seconds(),\n            milliseconds: m.milliseconds()\n        };\n    }\n\n    function toJSON () {\n        // new Date(NaN).toJSON() === null\n        return this.isValid() ? this.toISOString() : null;\n    }\n\n    function isValid$2 () {\n        return isValid(this);\n    }\n\n    function parsingFlags () {\n        return extend({}, getParsingFlags(this));\n    }\n\n    function invalidAt () {\n        return getParsingFlags(this).overflow;\n    }\n\n    function creationData() {\n        return {\n            input: this._i,\n            format: this._f,\n            locale: this._locale,\n            isUTC: this._isUTC,\n            strict: this._strict\n        };\n    }\n\n    // FORMATTING\n\n    addFormatToken(0, ['gg', 2], 0, function () {\n        return this.weekYear() % 100;\n    });\n\n    addFormatToken(0, ['GG', 2], 0, function () {\n        return this.isoWeekYear() % 100;\n    });\n\n    function addWeekYearFormatToken (token, getter) {\n        addFormatToken(0, [token, token.length], 0, getter);\n    }\n\n    addWeekYearFormatToken('gggg',     'weekYear');\n    addWeekYearFormatToken('ggggg',    'weekYear');\n    addWeekYearFormatToken('GGGG',  'isoWeekYear');\n    addWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n    // ALIASES\n\n    addUnitAlias('weekYear', 'gg');\n    addUnitAlias('isoWeekYear', 'GG');\n\n    // PRIORITY\n\n    addUnitPriority('weekYear', 1);\n    addUnitPriority('isoWeekYear', 1);\n\n\n    // PARSING\n\n    addRegexToken('G',      matchSigned);\n    addRegexToken('g',      matchSigned);\n    addRegexToken('GG',     match1to2, match2);\n    addRegexToken('gg',     match1to2, match2);\n    addRegexToken('GGGG',   match1to4, match4);\n    addRegexToken('gggg',   match1to4, match4);\n    addRegexToken('GGGGG',  match1to6, match6);\n    addRegexToken('ggggg',  match1to6, match6);\n\n    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n        week[token.substr(0, 2)] = toInt(input);\n    });\n\n    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n        week[token] = hooks.parseTwoDigitYear(input);\n    });\n\n    // MOMENTS\n\n    function getSetWeekYear (input) {\n        return getSetWeekYearHelper.call(this,\n                input,\n                this.week(),\n                this.weekday(),\n                this.localeData()._week.dow,\n                this.localeData()._week.doy);\n    }\n\n    function getSetISOWeekYear (input) {\n        return getSetWeekYearHelper.call(this,\n                input, this.isoWeek(), this.isoWeekday(), 1, 4);\n    }\n\n    function getISOWeeksInYear () {\n        return weeksInYear(this.year(), 1, 4);\n    }\n\n    function getWeeksInYear () {\n        var weekInfo = this.localeData()._week;\n        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n    }\n\n    function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n        var weeksTarget;\n        if (input == null) {\n            return weekOfYear(this, dow, doy).year;\n        } else {\n            weeksTarget = weeksInYear(input, dow, doy);\n            if (week > weeksTarget) {\n                week = weeksTarget;\n            }\n            return setWeekAll.call(this, input, week, weekday, dow, doy);\n        }\n    }\n\n    function setWeekAll(weekYear, week, weekday, dow, doy) {\n        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\n        this.year(date.getUTCFullYear());\n        this.month(date.getUTCMonth());\n        this.date(date.getUTCDate());\n        return this;\n    }\n\n    // FORMATTING\n\n    addFormatToken('Q', 0, 'Qo', 'quarter');\n\n    // ALIASES\n\n    addUnitAlias('quarter', 'Q');\n\n    // PRIORITY\n\n    addUnitPriority('quarter', 7);\n\n    // PARSING\n\n    addRegexToken('Q', match1);\n    addParseToken('Q', function (input, array) {\n        array[MONTH] = (toInt(input) - 1) * 3;\n    });\n\n    // MOMENTS\n\n    function getSetQuarter (input) {\n        return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n    }\n\n    // FORMATTING\n\n    addFormatToken('D', ['DD', 2], 'Do', 'date');\n\n    // ALIASES\n\n    addUnitAlias('date', 'D');\n\n    // PRIORITY\n    addUnitPriority('date', 9);\n\n    // PARSING\n\n    addRegexToken('D',  match1to2);\n    addRegexToken('DD', match1to2, match2);\n    addRegexToken('Do', function (isStrict, locale) {\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        return isStrict ?\n          (locale._dayOfMonthOrdinalParse || locale._ordinalParse) :\n          locale._dayOfMonthOrdinalParseLenient;\n    });\n\n    addParseToken(['D', 'DD'], DATE);\n    addParseToken('Do', function (input, array) {\n        array[DATE] = toInt(input.match(match1to2)[0]);\n    });\n\n    // MOMENTS\n\n    var getSetDayOfMonth = makeGetSet('Date', true);\n\n    // FORMATTING\n\n    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n    // ALIASES\n\n    addUnitAlias('dayOfYear', 'DDD');\n\n    // PRIORITY\n    addUnitPriority('dayOfYear', 4);\n\n    // PARSING\n\n    addRegexToken('DDD',  match1to3);\n    addRegexToken('DDDD', match3);\n    addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n        config._dayOfYear = toInt(input);\n    });\n\n    // HELPERS\n\n    // MOMENTS\n\n    function getSetDayOfYear (input) {\n        var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n        return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('m', ['mm', 2], 0, 'minute');\n\n    // ALIASES\n\n    addUnitAlias('minute', 'm');\n\n    // PRIORITY\n\n    addUnitPriority('minute', 14);\n\n    // PARSING\n\n    addRegexToken('m',  match1to2);\n    addRegexToken('mm', match1to2, match2);\n    addParseToken(['m', 'mm'], MINUTE);\n\n    // MOMENTS\n\n    var getSetMinute = makeGetSet('Minutes', false);\n\n    // FORMATTING\n\n    addFormatToken('s', ['ss', 2], 0, 'second');\n\n    // ALIASES\n\n    addUnitAlias('second', 's');\n\n    // PRIORITY\n\n    addUnitPriority('second', 15);\n\n    // PARSING\n\n    addRegexToken('s',  match1to2);\n    addRegexToken('ss', match1to2, match2);\n    addParseToken(['s', 'ss'], SECOND);\n\n    // MOMENTS\n\n    var getSetSecond = makeGetSet('Seconds', false);\n\n    // FORMATTING\n\n    addFormatToken('S', 0, 0, function () {\n        return ~~(this.millisecond() / 100);\n    });\n\n    addFormatToken(0, ['SS', 2], 0, function () {\n        return ~~(this.millisecond() / 10);\n    });\n\n    addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n    addFormatToken(0, ['SSSS', 4], 0, function () {\n        return this.millisecond() * 10;\n    });\n    addFormatToken(0, ['SSSSS', 5], 0, function () {\n        return this.millisecond() * 100;\n    });\n    addFormatToken(0, ['SSSSSS', 6], 0, function () {\n        return this.millisecond() * 1000;\n    });\n    addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n        return this.millisecond() * 10000;\n    });\n    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n        return this.millisecond() * 100000;\n    });\n    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n        return this.millisecond() * 1000000;\n    });\n\n\n    // ALIASES\n\n    addUnitAlias('millisecond', 'ms');\n\n    // PRIORITY\n\n    addUnitPriority('millisecond', 16);\n\n    // PARSING\n\n    addRegexToken('S',    match1to3, match1);\n    addRegexToken('SS',   match1to3, match2);\n    addRegexToken('SSS',  match1to3, match3);\n\n    var token;\n    for (token = 'SSSS'; token.length <= 9; token += 'S') {\n        addRegexToken(token, matchUnsigned);\n    }\n\n    function parseMs(input, array) {\n        array[MILLISECOND] = toInt(('0.' + input) * 1000);\n    }\n\n    for (token = 'S'; token.length <= 9; token += 'S') {\n        addParseToken(token, parseMs);\n    }\n    // MOMENTS\n\n    var getSetMillisecond = makeGetSet('Milliseconds', false);\n\n    // FORMATTING\n\n    addFormatToken('z',  0, 0, 'zoneAbbr');\n    addFormatToken('zz', 0, 0, 'zoneName');\n\n    // MOMENTS\n\n    function getZoneAbbr () {\n        return this._isUTC ? 'UTC' : '';\n    }\n\n    function getZoneName () {\n        return this._isUTC ? 'Coordinated Universal Time' : '';\n    }\n\n    var proto = Moment.prototype;\n\n    proto.add               = add;\n    proto.calendar          = calendar$1;\n    proto.clone             = clone;\n    proto.diff              = diff;\n    proto.endOf             = endOf;\n    proto.format            = format;\n    proto.from              = from;\n    proto.fromNow           = fromNow;\n    proto.to                = to;\n    proto.toNow             = toNow;\n    proto.get               = stringGet;\n    proto.invalidAt         = invalidAt;\n    proto.isAfter           = isAfter;\n    proto.isBefore          = isBefore;\n    proto.isBetween         = isBetween;\n    proto.isSame            = isSame;\n    proto.isSameOrAfter     = isSameOrAfter;\n    proto.isSameOrBefore    = isSameOrBefore;\n    proto.isValid           = isValid$2;\n    proto.lang              = lang;\n    proto.locale            = locale;\n    proto.localeData        = localeData;\n    proto.max               = prototypeMax;\n    proto.min               = prototypeMin;\n    proto.parsingFlags      = parsingFlags;\n    proto.set               = stringSet;\n    proto.startOf           = startOf;\n    proto.subtract          = subtract;\n    proto.toArray           = toArray;\n    proto.toObject          = toObject;\n    proto.toDate            = toDate;\n    proto.toISOString       = toISOString;\n    proto.inspect           = inspect;\n    proto.toJSON            = toJSON;\n    proto.toString          = toString;\n    proto.unix              = unix;\n    proto.valueOf           = valueOf;\n    proto.creationData      = creationData;\n    proto.year       = getSetYear;\n    proto.isLeapYear = getIsLeapYear;\n    proto.weekYear    = getSetWeekYear;\n    proto.isoWeekYear = getSetISOWeekYear;\n    proto.quarter = proto.quarters = getSetQuarter;\n    proto.month       = getSetMonth;\n    proto.daysInMonth = getDaysInMonth;\n    proto.week           = proto.weeks        = getSetWeek;\n    proto.isoWeek        = proto.isoWeeks     = getSetISOWeek;\n    proto.weeksInYear    = getWeeksInYear;\n    proto.isoWeeksInYear = getISOWeeksInYear;\n    proto.date       = getSetDayOfMonth;\n    proto.day        = proto.days             = getSetDayOfWeek;\n    proto.weekday    = getSetLocaleDayOfWeek;\n    proto.isoWeekday = getSetISODayOfWeek;\n    proto.dayOfYear  = getSetDayOfYear;\n    proto.hour = proto.hours = getSetHour;\n    proto.minute = proto.minutes = getSetMinute;\n    proto.second = proto.seconds = getSetSecond;\n    proto.millisecond = proto.milliseconds = getSetMillisecond;\n    proto.utcOffset            = getSetOffset;\n    proto.utc                  = setOffsetToUTC;\n    proto.local                = setOffsetToLocal;\n    proto.parseZone            = setOffsetToParsedOffset;\n    proto.hasAlignedHourOffset = hasAlignedHourOffset;\n    proto.isDST                = isDaylightSavingTime;\n    proto.isLocal              = isLocal;\n    proto.isUtcOffset          = isUtcOffset;\n    proto.isUtc                = isUtc;\n    proto.isUTC                = isUtc;\n    proto.zoneAbbr = getZoneAbbr;\n    proto.zoneName = getZoneName;\n    proto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n    proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n    proto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n    proto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n    proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\n    function createUnix (input) {\n        return createLocal(input * 1000);\n    }\n\n    function createInZone () {\n        return createLocal.apply(null, arguments).parseZone();\n    }\n\n    function preParsePostFormat (string) {\n        return string;\n    }\n\n    var proto$1 = Locale.prototype;\n\n    proto$1.calendar        = calendar;\n    proto$1.longDateFormat  = longDateFormat;\n    proto$1.invalidDate     = invalidDate;\n    proto$1.ordinal         = ordinal;\n    proto$1.preparse        = preParsePostFormat;\n    proto$1.postformat      = preParsePostFormat;\n    proto$1.relativeTime    = relativeTime;\n    proto$1.pastFuture      = pastFuture;\n    proto$1.set             = set;\n\n    proto$1.months            =        localeMonths;\n    proto$1.monthsShort       =        localeMonthsShort;\n    proto$1.monthsParse       =        localeMonthsParse;\n    proto$1.monthsRegex       = monthsRegex;\n    proto$1.monthsShortRegex  = monthsShortRegex;\n    proto$1.week = localeWeek;\n    proto$1.firstDayOfYear = localeFirstDayOfYear;\n    proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n\n    proto$1.weekdays       =        localeWeekdays;\n    proto$1.weekdaysMin    =        localeWeekdaysMin;\n    proto$1.weekdaysShort  =        localeWeekdaysShort;\n    proto$1.weekdaysParse  =        localeWeekdaysParse;\n\n    proto$1.weekdaysRegex       =        weekdaysRegex;\n    proto$1.weekdaysShortRegex  =        weekdaysShortRegex;\n    proto$1.weekdaysMinRegex    =        weekdaysMinRegex;\n\n    proto$1.isPM = localeIsPM;\n    proto$1.meridiem = localeMeridiem;\n\n    function get$1 (format, index, field, setter) {\n        var locale = getLocale();\n        var utc = createUTC().set(setter, index);\n        return locale[field](utc, format);\n    }\n\n    function listMonthsImpl (format, index, field) {\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n\n        if (index != null) {\n            return get$1(format, index, field, 'month');\n        }\n\n        var i;\n        var out = [];\n        for (i = 0; i < 12; i++) {\n            out[i] = get$1(format, i, field, 'month');\n        }\n        return out;\n    }\n\n    // ()\n    // (5)\n    // (fmt, 5)\n    // (fmt)\n    // (true)\n    // (true, 5)\n    // (true, fmt, 5)\n    // (true, fmt)\n    function listWeekdaysImpl (localeSorted, format, index, field) {\n        if (typeof localeSorted === 'boolean') {\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        } else {\n            format = localeSorted;\n            index = format;\n            localeSorted = false;\n\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        }\n\n        var locale = getLocale(),\n            shift = localeSorted ? locale._week.dow : 0;\n\n        if (index != null) {\n            return get$1(format, (index + shift) % 7, field, 'day');\n        }\n\n        var i;\n        var out = [];\n        for (i = 0; i < 7; i++) {\n            out[i] = get$1(format, (i + shift) % 7, field, 'day');\n        }\n        return out;\n    }\n\n    function listMonths (format, index) {\n        return listMonthsImpl(format, index, 'months');\n    }\n\n    function listMonthsShort (format, index) {\n        return listMonthsImpl(format, index, 'monthsShort');\n    }\n\n    function listWeekdays (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n    }\n\n    function listWeekdaysShort (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n    }\n\n    function listWeekdaysMin (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n    }\n\n    getSetGlobalLocale('en', {\n        dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (toInt(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        }\n    });\n\n    // Side effect imports\n\n    hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n    hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n\n    var mathAbs = Math.abs;\n\n    function abs () {\n        var data           = this._data;\n\n        this._milliseconds = mathAbs(this._milliseconds);\n        this._days         = mathAbs(this._days);\n        this._months       = mathAbs(this._months);\n\n        data.milliseconds  = mathAbs(data.milliseconds);\n        data.seconds       = mathAbs(data.seconds);\n        data.minutes       = mathAbs(data.minutes);\n        data.hours         = mathAbs(data.hours);\n        data.months        = mathAbs(data.months);\n        data.years         = mathAbs(data.years);\n\n        return this;\n    }\n\n    function addSubtract$1 (duration, input, value, direction) {\n        var other = createDuration(input, value);\n\n        duration._milliseconds += direction * other._milliseconds;\n        duration._days         += direction * other._days;\n        duration._months       += direction * other._months;\n\n        return duration._bubble();\n    }\n\n    // supports only 2.0-style add(1, 's') or add(duration)\n    function add$1 (input, value) {\n        return addSubtract$1(this, input, value, 1);\n    }\n\n    // supports only 2.0-style subtract(1, 's') or subtract(duration)\n    function subtract$1 (input, value) {\n        return addSubtract$1(this, input, value, -1);\n    }\n\n    function absCeil (number) {\n        if (number < 0) {\n            return Math.floor(number);\n        } else {\n            return Math.ceil(number);\n        }\n    }\n\n    function bubble () {\n        var milliseconds = this._milliseconds;\n        var days         = this._days;\n        var months       = this._months;\n        var data         = this._data;\n        var seconds, minutes, hours, years, monthsFromDays;\n\n        // if we have a mix of positive and negative values, bubble down first\n        // check: https://github.com/moment/moment/issues/2166\n        if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||\n                (milliseconds <= 0 && days <= 0 && months <= 0))) {\n            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n            days = 0;\n            months = 0;\n        }\n\n        // The following code bubbles up values, see the tests for\n        // examples of what that means.\n        data.milliseconds = milliseconds % 1000;\n\n        seconds           = absFloor(milliseconds / 1000);\n        data.seconds      = seconds % 60;\n\n        minutes           = absFloor(seconds / 60);\n        data.minutes      = minutes % 60;\n\n        hours             = absFloor(minutes / 60);\n        data.hours        = hours % 24;\n\n        days += absFloor(hours / 24);\n\n        // convert days to months\n        monthsFromDays = absFloor(daysToMonths(days));\n        months += monthsFromDays;\n        days -= absCeil(monthsToDays(monthsFromDays));\n\n        // 12 months -> 1 year\n        years = absFloor(months / 12);\n        months %= 12;\n\n        data.days   = days;\n        data.months = months;\n        data.years  = years;\n\n        return this;\n    }\n\n    function daysToMonths (days) {\n        // 400 years have 146097 days (taking into account leap year rules)\n        // 400 years have 12 months === 4800\n        return days * 4800 / 146097;\n    }\n\n    function monthsToDays (months) {\n        // the reverse of daysToMonths\n        return months * 146097 / 4800;\n    }\n\n    function as (units) {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        var days;\n        var months;\n        var milliseconds = this._milliseconds;\n\n        units = normalizeUnits(units);\n\n        if (units === 'month' || units === 'quarter' || units === 'year') {\n            days = this._days + milliseconds / 864e5;\n            months = this._months + daysToMonths(days);\n            switch (units) {\n                case 'month':   return months;\n                case 'quarter': return months / 3;\n                case 'year':    return months / 12;\n            }\n        } else {\n            // handle milliseconds separately because of floating point math errors (issue #1867)\n            days = this._days + Math.round(monthsToDays(this._months));\n            switch (units) {\n                case 'week'   : return days / 7     + milliseconds / 6048e5;\n                case 'day'    : return days         + milliseconds / 864e5;\n                case 'hour'   : return days * 24    + milliseconds / 36e5;\n                case 'minute' : return days * 1440  + milliseconds / 6e4;\n                case 'second' : return days * 86400 + milliseconds / 1000;\n                // Math.floor prevents floating point math errors here\n                case 'millisecond': return Math.floor(days * 864e5) + milliseconds;\n                default: throw new Error('Unknown unit ' + units);\n            }\n        }\n    }\n\n    // TODO: Use this.as('ms')?\n    function valueOf$1 () {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        return (\n            this._milliseconds +\n            this._days * 864e5 +\n            (this._months % 12) * 2592e6 +\n            toInt(this._months / 12) * 31536e6\n        );\n    }\n\n    function makeAs (alias) {\n        return function () {\n            return this.as(alias);\n        };\n    }\n\n    var asMilliseconds = makeAs('ms');\n    var asSeconds      = makeAs('s');\n    var asMinutes      = makeAs('m');\n    var asHours        = makeAs('h');\n    var asDays         = makeAs('d');\n    var asWeeks        = makeAs('w');\n    var asMonths       = makeAs('M');\n    var asQuarters     = makeAs('Q');\n    var asYears        = makeAs('y');\n\n    function clone$1 () {\n        return createDuration(this);\n    }\n\n    function get$2 (units) {\n        units = normalizeUnits(units);\n        return this.isValid() ? this[units + 's']() : NaN;\n    }\n\n    function makeGetter(name) {\n        return function () {\n            return this.isValid() ? this._data[name] : NaN;\n        };\n    }\n\n    var milliseconds = makeGetter('milliseconds');\n    var seconds      = makeGetter('seconds');\n    var minutes      = makeGetter('minutes');\n    var hours        = makeGetter('hours');\n    var days         = makeGetter('days');\n    var months       = makeGetter('months');\n    var years        = makeGetter('years');\n\n    function weeks () {\n        return absFloor(this.days() / 7);\n    }\n\n    var round = Math.round;\n    var thresholds = {\n        ss: 44,         // a few seconds to seconds\n        s : 45,         // seconds to minute\n        m : 45,         // minutes to hour\n        h : 22,         // hours to day\n        d : 26,         // days to month\n        M : 11          // months to year\n    };\n\n    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n    }\n\n    function relativeTime$1 (posNegDuration, withoutSuffix, locale) {\n        var duration = createDuration(posNegDuration).abs();\n        var seconds  = round(duration.as('s'));\n        var minutes  = round(duration.as('m'));\n        var hours    = round(duration.as('h'));\n        var days     = round(duration.as('d'));\n        var months   = round(duration.as('M'));\n        var years    = round(duration.as('y'));\n\n        var a = seconds <= thresholds.ss && ['s', seconds]  ||\n                seconds < thresholds.s   && ['ss', seconds] ||\n                minutes <= 1             && ['m']           ||\n                minutes < thresholds.m   && ['mm', minutes] ||\n                hours   <= 1             && ['h']           ||\n                hours   < thresholds.h   && ['hh', hours]   ||\n                days    <= 1             && ['d']           ||\n                days    < thresholds.d   && ['dd', days]    ||\n                months  <= 1             && ['M']           ||\n                months  < thresholds.M   && ['MM', months]  ||\n                years   <= 1             && ['y']           || ['yy', years];\n\n        a[2] = withoutSuffix;\n        a[3] = +posNegDuration > 0;\n        a[4] = locale;\n        return substituteTimeAgo.apply(null, a);\n    }\n\n    // This function allows you to set the rounding function for relative time strings\n    function getSetRelativeTimeRounding (roundingFunction) {\n        if (roundingFunction === undefined) {\n            return round;\n        }\n        if (typeof(roundingFunction) === 'function') {\n            round = roundingFunction;\n            return true;\n        }\n        return false;\n    }\n\n    // This function allows you to set a threshold for relative time strings\n    function getSetRelativeTimeThreshold (threshold, limit) {\n        if (thresholds[threshold] === undefined) {\n            return false;\n        }\n        if (limit === undefined) {\n            return thresholds[threshold];\n        }\n        thresholds[threshold] = limit;\n        if (threshold === 's') {\n            thresholds.ss = limit - 1;\n        }\n        return true;\n    }\n\n    function humanize (withSuffix) {\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var locale = this.localeData();\n        var output = relativeTime$1(this, !withSuffix, locale);\n\n        if (withSuffix) {\n            output = locale.pastFuture(+this, output);\n        }\n\n        return locale.postformat(output);\n    }\n\n    var abs$1 = Math.abs;\n\n    function sign(x) {\n        return ((x > 0) - (x < 0)) || +x;\n    }\n\n    function toISOString$1() {\n        // for ISO strings we do not use the normal bubbling rules:\n        //  * milliseconds bubble up until they become hours\n        //  * days do not bubble at all\n        //  * months bubble up until they become years\n        // This is because there is no context-free conversion between hours and days\n        // (think of clock changes)\n        // and also not between days and months (28-31 days per month)\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var seconds = abs$1(this._milliseconds) / 1000;\n        var days         = abs$1(this._days);\n        var months       = abs$1(this._months);\n        var minutes, hours, years;\n\n        // 3600 seconds -> 60 minutes -> 1 hour\n        minutes           = absFloor(seconds / 60);\n        hours             = absFloor(minutes / 60);\n        seconds %= 60;\n        minutes %= 60;\n\n        // 12 months -> 1 year\n        years  = absFloor(months / 12);\n        months %= 12;\n\n\n        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n        var Y = years;\n        var M = months;\n        var D = days;\n        var h = hours;\n        var m = minutes;\n        var s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n        var total = this.asSeconds();\n\n        if (!total) {\n            // this is the same as C#'s (Noda) and python (isodate)...\n            // but not other JS (goog.date)\n            return 'P0D';\n        }\n\n        var totalSign = total < 0 ? '-' : '';\n        var ymSign = sign(this._months) !== sign(total) ? '-' : '';\n        var daysSign = sign(this._days) !== sign(total) ? '-' : '';\n        var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n\n        return totalSign + 'P' +\n            (Y ? ymSign + Y + 'Y' : '') +\n            (M ? ymSign + M + 'M' : '') +\n            (D ? daysSign + D + 'D' : '') +\n            ((h || m || s) ? 'T' : '') +\n            (h ? hmsSign + h + 'H' : '') +\n            (m ? hmsSign + m + 'M' : '') +\n            (s ? hmsSign + s + 'S' : '');\n    }\n\n    var proto$2 = Duration.prototype;\n\n    proto$2.isValid        = isValid$1;\n    proto$2.abs            = abs;\n    proto$2.add            = add$1;\n    proto$2.subtract       = subtract$1;\n    proto$2.as             = as;\n    proto$2.asMilliseconds = asMilliseconds;\n    proto$2.asSeconds      = asSeconds;\n    proto$2.asMinutes      = asMinutes;\n    proto$2.asHours        = asHours;\n    proto$2.asDays         = asDays;\n    proto$2.asWeeks        = asWeeks;\n    proto$2.asMonths       = asMonths;\n    proto$2.asQuarters     = asQuarters;\n    proto$2.asYears        = asYears;\n    proto$2.valueOf        = valueOf$1;\n    proto$2._bubble        = bubble;\n    proto$2.clone          = clone$1;\n    proto$2.get            = get$2;\n    proto$2.milliseconds   = milliseconds;\n    proto$2.seconds        = seconds;\n    proto$2.minutes        = minutes;\n    proto$2.hours          = hours;\n    proto$2.days           = days;\n    proto$2.weeks          = weeks;\n    proto$2.months         = months;\n    proto$2.years          = years;\n    proto$2.humanize       = humanize;\n    proto$2.toISOString    = toISOString$1;\n    proto$2.toString       = toISOString$1;\n    proto$2.toJSON         = toISOString$1;\n    proto$2.locale         = locale;\n    proto$2.localeData     = localeData;\n\n    proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n    proto$2.lang = lang;\n\n    // Side effect imports\n\n    // FORMATTING\n\n    addFormatToken('X', 0, 0, 'unix');\n    addFormatToken('x', 0, 0, 'valueOf');\n\n    // PARSING\n\n    addRegexToken('x', matchSigned);\n    addRegexToken('X', matchTimestamp);\n    addParseToken('X', function (input, array, config) {\n        config._d = new Date(parseFloat(input, 10) * 1000);\n    });\n    addParseToken('x', function (input, array, config) {\n        config._d = new Date(toInt(input));\n    });\n\n    // Side effect imports\n\n\n    hooks.version = '2.24.0';\n\n    setHookCallback(createLocal);\n\n    hooks.fn                    = proto;\n    hooks.min                   = min;\n    hooks.max                   = max;\n    hooks.now                   = now;\n    hooks.utc                   = createUTC;\n    hooks.unix                  = createUnix;\n    hooks.months                = listMonths;\n    hooks.isDate                = isDate;\n    hooks.locale                = getSetGlobalLocale;\n    hooks.invalid               = createInvalid;\n    hooks.duration              = createDuration;\n    hooks.isMoment              = isMoment;\n    hooks.weekdays              = listWeekdays;\n    hooks.parseZone             = createInZone;\n    hooks.localeData            = getLocale;\n    hooks.isDuration            = isDuration;\n    hooks.monthsShort           = listMonthsShort;\n    hooks.weekdaysMin           = listWeekdaysMin;\n    hooks.defineLocale          = defineLocale;\n    hooks.updateLocale          = updateLocale;\n    hooks.locales               = listLocales;\n    hooks.weekdaysShort         = listWeekdaysShort;\n    hooks.normalizeUnits        = normalizeUnits;\n    hooks.relativeTimeRounding  = getSetRelativeTimeRounding;\n    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n    hooks.calendarFormat        = getCalendarFormat;\n    hooks.prototype             = proto;\n\n    // currently HTML5 input type only supports 24-hour formats\n    hooks.HTML5_FMT = {\n        DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',             // <input type=\"datetime-local\" />\n        DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',  // <input type=\"datetime-local\" step=\"1\" />\n        DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',   // <input type=\"datetime-local\" step=\"0.001\" />\n        DATE: 'YYYY-MM-DD',                             // <input type=\"date\" />\n        TIME: 'HH:mm',                                  // <input type=\"time\" />\n        TIME_SECONDS: 'HH:mm:ss',                       // <input type=\"time\" step=\"1\" />\n        TIME_MS: 'HH:mm:ss.SSS',                        // <input type=\"time\" step=\"0.001\" />\n        WEEK: 'GGGG-[W]WW',                             // <input type=\"week\" />\n        MONTH: 'YYYY-MM'                                // <input type=\"month\" />\n    };\n\n    return hooks;\n\n})));\n});\n\nvar FORMATS = {\n\tdatetime: 'MMM D, YYYY, h:mm:ss a',\n\tmillisecond: 'h:mm:ss.SSS a',\n\tsecond: 'h:mm:ss a',\n\tminute: 'h:mm a',\n\thour: 'hA',\n\tday: 'MMM D',\n\tweek: 'll',\n\tmonth: 'MMM YYYY',\n\tquarter: '[Q]Q - YYYY',\n\tyear: 'YYYY'\n};\n\ncore_adapters._date.override(typeof moment === 'function' ? {\n\t_id: 'moment', // DEBUG ONLY\n\n\tformats: function() {\n\t\treturn FORMATS;\n\t},\n\n\tparse: function(value, format) {\n\t\tif (typeof value === 'string' && typeof format === 'string') {\n\t\t\tvalue = moment(value, format);\n\t\t} else if (!(value instanceof moment)) {\n\t\t\tvalue = moment(value);\n\t\t}\n\t\treturn value.isValid() ? value.valueOf() : null;\n\t},\n\n\tformat: function(time, format) {\n\t\treturn moment(time).format(format);\n\t},\n\n\tadd: function(time, amount, unit) {\n\t\treturn moment(time).add(amount, unit).valueOf();\n\t},\n\n\tdiff: function(max, min, unit) {\n\t\treturn moment.duration(moment(max).diff(moment(min))).as(unit);\n\t},\n\n\tstartOf: function(time, unit, weekday) {\n\t\ttime = moment(time);\n\t\tif (unit === 'isoWeek') {\n\t\t\treturn time.isoWeekday(weekday).valueOf();\n\t\t}\n\t\treturn time.startOf(unit).valueOf();\n\t},\n\n\tendOf: function(time, unit) {\n\t\treturn moment(time).endOf(unit).valueOf();\n\t},\n\n\t// DEPRECATIONS\n\n\t/**\n\t * Provided for backward compatibility with scale.getValueForPixel().\n\t * @deprecated since version 2.8.0\n\t * @todo remove at version 3\n\t * @private\n\t */\n\t_create: function(time) {\n\t\treturn moment(time);\n\t},\n} : {});\n\ncore_defaults._set('global', {\n\tplugins: {\n\t\tfiller: {\n\t\t\tpropagate: true\n\t\t}\n\t}\n});\n\nvar mappers = {\n\tdataset: function(source) {\n\t\tvar index = source.fill;\n\t\tvar chart = source.chart;\n\t\tvar meta = chart.getDatasetMeta(index);\n\t\tvar visible = meta && chart.isDatasetVisible(index);\n\t\tvar points = (visible && meta.dataset._children) || [];\n\t\tvar length = points.length || 0;\n\n\t\treturn !length ? null : function(point, i) {\n\t\t\treturn (i < length && points[i]._view) || null;\n\t\t};\n\t},\n\n\tboundary: function(source) {\n\t\tvar boundary = source.boundary;\n\t\tvar x = boundary ? boundary.x : null;\n\t\tvar y = boundary ? boundary.y : null;\n\n\t\treturn function(point) {\n\t\t\treturn {\n\t\t\t\tx: x === null ? point.x : x,\n\t\t\t\ty: y === null ? point.y : y,\n\t\t\t};\n\t\t};\n\t}\n};\n\n// @todo if (fill[0] === '#')\nfunction decodeFill(el, index, count) {\n\tvar model = el._model || {};\n\tvar fill = model.fill;\n\tvar target;\n\n\tif (fill === undefined) {\n\t\tfill = !!model.backgroundColor;\n\t}\n\n\tif (fill === false || fill === null) {\n\t\treturn false;\n\t}\n\n\tif (fill === true) {\n\t\treturn 'origin';\n\t}\n\n\ttarget = parseFloat(fill, 10);\n\tif (isFinite(target) && Math.floor(target) === target) {\n\t\tif (fill[0] === '-' || fill[0] === '+') {\n\t\t\ttarget = index + target;\n\t\t}\n\n\t\tif (target === index || target < 0 || target >= count) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn target;\n\t}\n\n\tswitch (fill) {\n\t// compatibility\n\tcase 'bottom':\n\t\treturn 'start';\n\tcase 'top':\n\t\treturn 'end';\n\tcase 'zero':\n\t\treturn 'origin';\n\t// supported boundaries\n\tcase 'origin':\n\tcase 'start':\n\tcase 'end':\n\t\treturn fill;\n\t// invalid fill values\n\tdefault:\n\t\treturn false;\n\t}\n}\n\nfunction computeBoundary(source) {\n\tvar model = source.el._model || {};\n\tvar scale = source.el._scale || {};\n\tvar fill = source.fill;\n\tvar target = null;\n\tvar horizontal;\n\n\tif (isFinite(fill)) {\n\t\treturn null;\n\t}\n\n\t// Backward compatibility: until v3, we still need to support boundary values set on\n\t// the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n\t// controllers might still use it (e.g. the Smith chart).\n\n\tif (fill === 'start') {\n\t\ttarget = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n\t} else if (fill === 'end') {\n\t\ttarget = model.scaleTop === undefined ? scale.top : model.scaleTop;\n\t} else if (model.scaleZero !== undefined) {\n\t\ttarget = model.scaleZero;\n\t} else if (scale.getBasePosition) {\n\t\ttarget = scale.getBasePosition();\n\t} else if (scale.getBasePixel) {\n\t\ttarget = scale.getBasePixel();\n\t}\n\n\tif (target !== undefined && target !== null) {\n\t\tif (target.x !== undefined && target.y !== undefined) {\n\t\t\treturn target;\n\t\t}\n\n\t\tif (helpers$1.isFinite(target)) {\n\t\t\thorizontal = scale.isHorizontal();\n\t\t\treturn {\n\t\t\t\tx: horizontal ? target : null,\n\t\t\t\ty: horizontal ? null : target\n\t\t\t};\n\t\t}\n\t}\n\n\treturn null;\n}\n\nfunction resolveTarget(sources, index, propagate) {\n\tvar source = sources[index];\n\tvar fill = source.fill;\n\tvar visited = [index];\n\tvar target;\n\n\tif (!propagate) {\n\t\treturn fill;\n\t}\n\n\twhile (fill !== false && visited.indexOf(fill) === -1) {\n\t\tif (!isFinite(fill)) {\n\t\t\treturn fill;\n\t\t}\n\n\t\ttarget = sources[fill];\n\t\tif (!target) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (target.visible) {\n\t\t\treturn fill;\n\t\t}\n\n\t\tvisited.push(fill);\n\t\tfill = target.fill;\n\t}\n\n\treturn false;\n}\n\nfunction createMapper(source) {\n\tvar fill = source.fill;\n\tvar type = 'dataset';\n\n\tif (fill === false) {\n\t\treturn null;\n\t}\n\n\tif (!isFinite(fill)) {\n\t\ttype = 'boundary';\n\t}\n\n\treturn mappers[type](source);\n}\n\nfunction isDrawable(point) {\n\treturn point && !point.skip;\n}\n\nfunction drawArea(ctx, curve0, curve1, len0, len1) {\n\tvar i;\n\n\tif (!len0 || !len1) {\n\t\treturn;\n\t}\n\n\t// building first area curve (normal)\n\tctx.moveTo(curve0[0].x, curve0[0].y);\n\tfor (i = 1; i < len0; ++i) {\n\t\thelpers$1.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n\t}\n\n\t// joining the two area curves\n\tctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y);\n\n\t// building opposite area curve (reverse)\n\tfor (i = len1 - 1; i > 0; --i) {\n\t\thelpers$1.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n\t}\n}\n\nfunction doFill(ctx, points, mapper, view, color, loop) {\n\tvar count = points.length;\n\tvar span = view.spanGaps;\n\tvar curve0 = [];\n\tvar curve1 = [];\n\tvar len0 = 0;\n\tvar len1 = 0;\n\tvar i, ilen, index, p0, p1, d0, d1;\n\n\tctx.beginPath();\n\n\tfor (i = 0, ilen = (count + !!loop); i < ilen; ++i) {\n\t\tindex = i % count;\n\t\tp0 = points[index]._view;\n\t\tp1 = mapper(p0, index, view);\n\t\td0 = isDrawable(p0);\n\t\td1 = isDrawable(p1);\n\n\t\tif (d0 && d1) {\n\t\t\tlen0 = curve0.push(p0);\n\t\t\tlen1 = curve1.push(p1);\n\t\t} else if (len0 && len1) {\n\t\t\tif (!span) {\n\t\t\t\tdrawArea(ctx, curve0, curve1, len0, len1);\n\t\t\t\tlen0 = len1 = 0;\n\t\t\t\tcurve0 = [];\n\t\t\t\tcurve1 = [];\n\t\t\t} else {\n\t\t\t\tif (d0) {\n\t\t\t\t\tcurve0.push(p0);\n\t\t\t\t}\n\t\t\t\tif (d1) {\n\t\t\t\t\tcurve1.push(p1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdrawArea(ctx, curve0, curve1, len0, len1);\n\n\tctx.closePath();\n\tctx.fillStyle = color;\n\tctx.fill();\n}\n\nvar plugin_filler = {\n\tid: 'filler',\n\n\tafterDatasetsUpdate: function(chart, options) {\n\t\tvar count = (chart.data.datasets || []).length;\n\t\tvar propagate = options.propagate;\n\t\tvar sources = [];\n\t\tvar meta, i, el, source;\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\tel = meta.dataset;\n\t\t\tsource = null;\n\n\t\t\tif (el && el._model && el instanceof elements.Line) {\n\t\t\t\tsource = {\n\t\t\t\t\tvisible: chart.isDatasetVisible(i),\n\t\t\t\t\tfill: decodeFill(el, i, count),\n\t\t\t\t\tchart: chart,\n\t\t\t\t\tel: el\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tmeta.$filler = source;\n\t\t\tsources.push(source);\n\t\t}\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\tsource = sources[i];\n\t\t\tif (!source) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tsource.fill = resolveTarget(sources, i, propagate);\n\t\t\tsource.boundary = computeBoundary(source);\n\t\t\tsource.mapper = createMapper(source);\n\t\t}\n\t},\n\n\tbeforeDatasetDraw: function(chart, args) {\n\t\tvar meta = args.meta.$filler;\n\t\tif (!meta) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar ctx = chart.ctx;\n\t\tvar el = meta.el;\n\t\tvar view = el._view;\n\t\tvar points = el._children || [];\n\t\tvar mapper = meta.mapper;\n\t\tvar color = view.backgroundColor || core_defaults.global.defaultColor;\n\n\t\tif (mapper && color && points.length) {\n\t\t\thelpers$1.canvas.clipArea(ctx, chart.chartArea);\n\t\t\tdoFill(ctx, points, mapper, view, color, el._loop);\n\t\t\thelpers$1.canvas.unclipArea(ctx);\n\t\t}\n\t}\n};\n\nvar noop$1 = helpers$1.noop;\nvar valueOrDefault$d = helpers$1.valueOrDefault;\n\ncore_defaults._set('global', {\n\tlegend: {\n\t\tdisplay: true,\n\t\tposition: 'top',\n\t\tfullWidth: true,\n\t\treverse: false,\n\t\tweight: 1000,\n\n\t\t// a callback that will handle\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.datasetIndex;\n\t\t\tvar ci = this.chart;\n\t\t\tvar meta = ci.getDatasetMeta(index);\n\n\t\t\t// See controller.isDatasetVisible comment\n\t\t\tmeta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null;\n\n\t\t\t// We hid a dataset ... rerender the chart\n\t\t\tci.update();\n\t\t},\n\n\t\tonHover: null,\n\t\tonLeave: null,\n\n\t\tlabels: {\n\t\t\tboxWidth: 40,\n\t\t\tpadding: 10,\n\t\t\t// Generates labels shown in the legend\n\t\t\t// Valid properties to return:\n\t\t\t// text : text to display\n\t\t\t// fillStyle : fill of coloured box\n\t\t\t// strokeStyle: stroke of coloured box\n\t\t\t// hidden : if this legend item refers to a hidden item\n\t\t\t// lineCap : cap style for line\n\t\t\t// lineDash\n\t\t\t// lineDashOffset :\n\t\t\t// lineJoin :\n\t\t\t// lineWidth :\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\treturn helpers$1.isArray(data.datasets) ? data.datasets.map(function(dataset, i) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttext: dataset.label,\n\t\t\t\t\t\tfillStyle: (!helpers$1.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0]),\n\t\t\t\t\t\thidden: !chart.isDatasetVisible(i),\n\t\t\t\t\t\tlineCap: dataset.borderCapStyle,\n\t\t\t\t\t\tlineDash: dataset.borderDash,\n\t\t\t\t\t\tlineDashOffset: dataset.borderDashOffset,\n\t\t\t\t\t\tlineJoin: dataset.borderJoinStyle,\n\t\t\t\t\t\tlineWidth: dataset.borderWidth,\n\t\t\t\t\t\tstrokeStyle: dataset.borderColor,\n\t\t\t\t\t\tpointStyle: dataset.pointStyle,\n\n\t\t\t\t\t\t// Below is extra data used for toggling the datasets\n\t\t\t\t\t\tdatasetIndex: i\n\t\t\t\t\t};\n\t\t\t\t}, this) : [];\n\t\t\t}\n\t\t}\n\t},\n\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\t\tfor (var i = 0; i < chart.data.datasets.length; i++) {\n\t\t\ttext.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\t\t\tif (chart.data.datasets[i].label) {\n\t\t\t\ttext.push(chart.data.datasets[i].label);\n\t\t\t}\n\t\t\ttext.push('</li>');\n\t\t}\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t}\n});\n\n/**\n * Helper function to get the box width based on the usePointStyle option\n * @param {object} labelopts - the label options on the legend\n * @param {number} fontSize - the label font size\n * @return {number} width of the color box area\n */\nfunction getBoxWidth(labelOpts, fontSize) {\n\treturn labelOpts.usePointStyle && labelOpts.boxWidth > fontSize ?\n\t\tfontSize :\n\t\tlabelOpts.boxWidth;\n}\n\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\nvar Legend = core_element.extend({\n\n\tinitialize: function(config) {\n\t\thelpers$1.extend(this, config);\n\n\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\tthis.legendHitBoxes = [];\n\n\t\t/**\n \t\t * @private\n \t\t */\n\t\tthis._hoveredItem = null;\n\n\t\t// Are we in doughnut mode which has a different data type\n\t\tthis.doughnutMode = false;\n\t},\n\n\t// These methods are ordered by lifecycle. Utilities then follow.\n\t// Any function defined here is inherited by all legend types.\n\t// Any function can be extended by the legend type\n\n\tbeforeUpdate: noop$1,\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = margins;\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\t\t// Labels\n\t\tme.beforeBuildLabels();\n\t\tme.buildLabels();\n\t\tme.afterBuildLabels();\n\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\t},\n\tafterUpdate: noop$1,\n\n\t//\n\n\tbeforeSetDimensions: noop$1,\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\n\t\t// Reset minSize\n\t\tme.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\t},\n\tafterSetDimensions: noop$1,\n\n\t//\n\n\tbeforeBuildLabels: noop$1,\n\tbuildLabels: function() {\n\t\tvar me = this;\n\t\tvar labelOpts = me.options.labels || {};\n\t\tvar legendItems = helpers$1.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n\t\tif (labelOpts.filter) {\n\t\t\tlegendItems = legendItems.filter(function(item) {\n\t\t\t\treturn labelOpts.filter(item, me.chart.data);\n\t\t\t});\n\t\t}\n\n\t\tif (me.options.reverse) {\n\t\t\tlegendItems.reverse();\n\t\t}\n\n\t\tme.legendItems = legendItems;\n\t},\n\tafterBuildLabels: noop$1,\n\n\t//\n\n\tbeforeFit: noop$1,\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar labelOpts = opts.labels;\n\t\tvar display = opts.display;\n\n\t\tvar ctx = me.ctx;\n\n\t\tvar labelFont = helpers$1.options._parseFont(labelOpts);\n\t\tvar fontSize = labelFont.size;\n\n\t\t// Reset hit boxes\n\t\tvar hitboxes = me.legendHitBoxes = [];\n\n\t\tvar minSize = me.minSize;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tif (isHorizontal) {\n\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\tminSize.height = display ? 10 : 0;\n\t\t} else {\n\t\t\tminSize.width = display ? 10 : 0;\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\t// Increase sizes here\n\t\tif (display) {\n\t\t\tctx.font = labelFont.string;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\t// Labels\n\n\t\t\t\t// Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n\t\t\t\tvar lineWidths = me.lineWidths = [0];\n\t\t\t\tvar totalHeight = 0;\n\n\t\t\t\tctx.textAlign = 'left';\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\thelpers$1.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\tvar width = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\tif (i === 0 || lineWidths[lineWidths.length - 1] + width + labelOpts.padding > minSize.width) {\n\t\t\t\t\t\ttotalHeight += fontSize + labelOpts.padding;\n\t\t\t\t\t\tlineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = labelOpts.padding;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\twidth: width,\n\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t};\n\n\t\t\t\t\tlineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n\t\t\t\t});\n\n\t\t\t\tminSize.height += totalHeight;\n\n\t\t\t} else {\n\t\t\t\tvar vPadding = labelOpts.padding;\n\t\t\t\tvar columnWidths = me.columnWidths = [];\n\t\t\t\tvar totalWidth = labelOpts.padding;\n\t\t\t\tvar currentColWidth = 0;\n\t\t\t\tvar currentColHeight = 0;\n\t\t\t\tvar itemHeight = fontSize + vPadding;\n\n\t\t\t\thelpers$1.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\tvar itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\t// If too tall, go to new column\n\t\t\t\t\tif (i > 0 && currentColHeight + itemHeight > minSize.height - vPadding) {\n\t\t\t\t\t\ttotalWidth += currentColWidth + labelOpts.padding;\n\t\t\t\t\t\tcolumnWidths.push(currentColWidth); // previous column width\n\n\t\t\t\t\t\tcurrentColWidth = 0;\n\t\t\t\t\t\tcurrentColHeight = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Get max width\n\t\t\t\t\tcurrentColWidth = Math.max(currentColWidth, itemWidth);\n\t\t\t\t\tcurrentColHeight += itemHeight;\n\n\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\twidth: itemWidth,\n\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t\ttotalWidth += currentColWidth;\n\t\t\t\tcolumnWidths.push(currentColWidth);\n\t\t\t\tminSize.width += totalWidth;\n\t\t\t}\n\t\t}\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\t},\n\tafterFit: noop$1,\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t},\n\n\t// Actually draw the legend on the canvas\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar labelOpts = opts.labels;\n\t\tvar globalDefaults = core_defaults.global;\n\t\tvar defaultColor = globalDefaults.defaultColor;\n\t\tvar lineDefault = globalDefaults.elements.line;\n\t\tvar legendWidth = me.width;\n\t\tvar lineWidths = me.lineWidths;\n\n\t\tif (opts.display) {\n\t\t\tvar ctx = me.ctx;\n\t\t\tvar fontColor = valueOrDefault$d(labelOpts.fontColor, globalDefaults.defaultFontColor);\n\t\t\tvar labelFont = helpers$1.options._parseFont(labelOpts);\n\t\t\tvar fontSize = labelFont.size;\n\t\t\tvar cursor;\n\n\t\t\t// Canvas setup\n\t\t\tctx.textAlign = 'left';\n\t\t\tctx.textBaseline = 'middle';\n\t\t\tctx.lineWidth = 0.5;\n\t\t\tctx.strokeStyle = fontColor; // for strikethrough effect\n\t\t\tctx.fillStyle = fontColor; // render in correct colour\n\t\t\tctx.font = labelFont.string;\n\n\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\tvar hitboxes = me.legendHitBoxes;\n\n\t\t\t// current position\n\t\t\tvar drawLegendBox = function(x, y, legendItem) {\n\t\t\t\tif (isNaN(boxWidth) || boxWidth <= 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Set the ctx for the box\n\t\t\t\tctx.save();\n\n\t\t\t\tvar lineWidth = valueOrDefault$d(legendItem.lineWidth, lineDefault.borderWidth);\n\t\t\t\tctx.fillStyle = valueOrDefault$d(legendItem.fillStyle, defaultColor);\n\t\t\t\tctx.lineCap = valueOrDefault$d(legendItem.lineCap, lineDefault.borderCapStyle);\n\t\t\t\tctx.lineDashOffset = valueOrDefault$d(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n\t\t\t\tctx.lineJoin = valueOrDefault$d(legendItem.lineJoin, lineDefault.borderJoinStyle);\n\t\t\t\tctx.lineWidth = lineWidth;\n\t\t\t\tctx.strokeStyle = valueOrDefault$d(legendItem.strokeStyle, defaultColor);\n\n\t\t\t\tif (ctx.setLineDash) {\n\t\t\t\t\t// IE 9 and 10 do not support line dash\n\t\t\t\t\tctx.setLineDash(valueOrDefault$d(legendItem.lineDash, lineDefault.borderDash));\n\t\t\t\t}\n\n\t\t\t\tif (opts.labels && opts.labels.usePointStyle) {\n\t\t\t\t\t// Recalculate x and y for drawPoint() because its expecting\n\t\t\t\t\t// x and y to be center of figure (instead of top left)\n\t\t\t\t\tvar radius = boxWidth * Math.SQRT2 / 2;\n\t\t\t\t\tvar centerX = x + boxWidth / 2;\n\t\t\t\t\tvar centerY = y + fontSize / 2;\n\n\t\t\t\t\t// Draw pointStyle as legend symbol\n\t\t\t\t\thelpers$1.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n\t\t\t\t} else {\n\t\t\t\t\t// Draw box as legend symbol\n\t\t\t\t\tif (lineWidth !== 0) {\n\t\t\t\t\t\tctx.strokeRect(x, y, boxWidth, fontSize);\n\t\t\t\t\t}\n\t\t\t\t\tctx.fillRect(x, y, boxWidth, fontSize);\n\t\t\t\t}\n\n\t\t\t\tctx.restore();\n\t\t\t};\n\t\t\tvar fillText = function(x, y, legendItem, textWidth) {\n\t\t\t\tvar halfFontSize = fontSize / 2;\n\t\t\t\tvar xLeft = boxWidth + halfFontSize + x;\n\t\t\t\tvar yMiddle = y + halfFontSize;\n\n\t\t\t\tctx.fillText(legendItem.text, xLeft, yMiddle);\n\n\t\t\t\tif (legendItem.hidden) {\n\t\t\t\t\t// Strikethrough the text if hidden\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.lineWidth = 2;\n\t\t\t\t\tctx.moveTo(xLeft, yMiddle);\n\t\t\t\t\tctx.lineTo(xLeft + textWidth, yMiddle);\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Horizontal\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tif (isHorizontal) {\n\t\t\t\tcursor = {\n\t\t\t\t\tx: me.left + ((legendWidth - lineWidths[0]) / 2) + labelOpts.padding,\n\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\tline: 0\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tcursor = {\n\t\t\t\t\tx: me.left + labelOpts.padding,\n\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\tline: 0\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar itemHeight = fontSize + labelOpts.padding;\n\t\t\thelpers$1.each(me.legendItems, function(legendItem, i) {\n\t\t\t\tvar textWidth = ctx.measureText(legendItem.text).width;\n\t\t\t\tvar width = boxWidth + (fontSize / 2) + textWidth;\n\t\t\t\tvar x = cursor.x;\n\t\t\t\tvar y = cursor.y;\n\n\t\t\t\t// Use (me.left + me.minSize.width) and (me.top + me.minSize.height)\n\t\t\t\t// instead of me.right and me.bottom because me.width and me.height\n\t\t\t\t// may have been changed since me.minSize was calculated\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tif (i > 0 && x + width + labelOpts.padding > me.left + me.minSize.width) {\n\t\t\t\t\t\ty = cursor.y += itemHeight;\n\t\t\t\t\t\tcursor.line++;\n\t\t\t\t\t\tx = cursor.x = me.left + ((legendWidth - lineWidths[cursor.line]) / 2) + labelOpts.padding;\n\t\t\t\t\t}\n\t\t\t\t} else if (i > 0 && y + itemHeight > me.top + me.minSize.height) {\n\t\t\t\t\tx = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n\t\t\t\t\ty = cursor.y = me.top + labelOpts.padding;\n\t\t\t\t\tcursor.line++;\n\t\t\t\t}\n\n\t\t\t\tdrawLegendBox(x, y, legendItem);\n\n\t\t\t\thitboxes[i].left = x;\n\t\t\t\thitboxes[i].top = y;\n\n\t\t\t\t// Fill the actual label\n\t\t\t\tfillText(x, y, legendItem, textWidth);\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tcursor.x += width + labelOpts.padding;\n\t\t\t\t} else {\n\t\t\t\t\tcursor.y += itemHeight;\n\t\t\t\t}\n\n\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getLegendItemAt: function(x, y) {\n\t\tvar me = this;\n\t\tvar i, hitBox, lh;\n\n\t\tif (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n\t\t\t// See if we are touching one of the dataset boxes\n\t\t\tlh = me.legendHitBoxes;\n\t\t\tfor (i = 0; i < lh.length; ++i) {\n\t\t\t\thitBox = lh[i];\n\n\t\t\t\tif (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n\t\t\t\t\t// Touching an element\n\t\t\t\t\treturn me.legendItems[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t},\n\n\t/**\n\t * Handle an event\n\t * @private\n\t * @param {IEvent} event - The event to handle\n\t */\n\thandleEvent: function(e) {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar type = e.type === 'mouseup' ? 'click' : e.type;\n\t\tvar hoveredItem;\n\n\t\tif (type === 'mousemove') {\n\t\t\tif (!opts.onHover && !opts.onLeave) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else if (type === 'click') {\n\t\t\tif (!opts.onClick) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\n\t\t// Chart event already has relative position in it\n\t\thoveredItem = me._getLegendItemAt(e.x, e.y);\n\n\t\tif (type === 'click') {\n\t\t\tif (hoveredItem && opts.onClick) {\n\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\topts.onClick.call(me, e.native, hoveredItem);\n\t\t\t}\n\t\t} else {\n\t\t\tif (opts.onLeave && hoveredItem !== me._hoveredItem) {\n\t\t\t\tif (me._hoveredItem) {\n\t\t\t\t\topts.onLeave.call(me, e.native, me._hoveredItem);\n\t\t\t\t}\n\t\t\t\tme._hoveredItem = hoveredItem;\n\t\t\t}\n\n\t\t\tif (opts.onHover && hoveredItem) {\n\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\topts.onHover.call(me, e.native, hoveredItem);\n\t\t\t}\n\t\t}\n\t}\n});\n\nfunction createNewLegendAndAttach(chart, legendOpts) {\n\tvar legend = new Legend({\n\t\tctx: chart.ctx,\n\t\toptions: legendOpts,\n\t\tchart: chart\n\t});\n\n\tcore_layouts.configure(chart, legend, legendOpts);\n\tcore_layouts.addBox(chart, legend);\n\tchart.legend = legend;\n}\n\nvar plugin_legend = {\n\tid: 'legend',\n\n\t/**\n\t * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n\t * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n\t * the plugin, which one will be re-exposed in the chart.js file.\n\t * https://github.com/chartjs/Chart.js/pull/2640\n\t * @private\n\t */\n\t_element: Legend,\n\n\tbeforeInit: function(chart) {\n\t\tvar legendOpts = chart.options.legend;\n\n\t\tif (legendOpts) {\n\t\t\tcreateNewLegendAndAttach(chart, legendOpts);\n\t\t}\n\t},\n\n\tbeforeUpdate: function(chart) {\n\t\tvar legendOpts = chart.options.legend;\n\t\tvar legend = chart.legend;\n\n\t\tif (legendOpts) {\n\t\t\thelpers$1.mergeIf(legendOpts, core_defaults.global.legend);\n\n\t\t\tif (legend) {\n\t\t\t\tcore_layouts.configure(chart, legend, legendOpts);\n\t\t\t\tlegend.options = legendOpts;\n\t\t\t} else {\n\t\t\t\tcreateNewLegendAndAttach(chart, legendOpts);\n\t\t\t}\n\t\t} else if (legend) {\n\t\t\tcore_layouts.removeBox(chart, legend);\n\t\t\tdelete chart.legend;\n\t\t}\n\t},\n\n\tafterEvent: function(chart, e) {\n\t\tvar legend = chart.legend;\n\t\tif (legend) {\n\t\t\tlegend.handleEvent(e);\n\t\t}\n\t}\n};\n\nvar noop$2 = helpers$1.noop;\n\ncore_defaults._set('global', {\n\ttitle: {\n\t\tdisplay: false,\n\t\tfontStyle: 'bold',\n\t\tfullWidth: true,\n\t\tpadding: 10,\n\t\tposition: 'top',\n\t\ttext: '',\n\t\tweight: 2000         // by default greater than legend (1000) to be above\n\t}\n});\n\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\nvar Title = core_element.extend({\n\tinitialize: function(config) {\n\t\tvar me = this;\n\t\thelpers$1.extend(me, config);\n\n\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\tme.legendHitBoxes = [];\n\t},\n\n\t// These methods are ordered by lifecycle. Utilities then follow.\n\n\tbeforeUpdate: noop$2,\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = margins;\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\t\t// Labels\n\t\tme.beforeBuildLabels();\n\t\tme.buildLabels();\n\t\tme.afterBuildLabels();\n\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\n\t},\n\tafterUpdate: noop$2,\n\n\t//\n\n\tbeforeSetDimensions: noop$2,\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\n\t\t// Reset minSize\n\t\tme.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\t},\n\tafterSetDimensions: noop$2,\n\n\t//\n\n\tbeforeBuildLabels: noop$2,\n\tbuildLabels: noop$2,\n\tafterBuildLabels: noop$2,\n\n\t//\n\n\tbeforeFit: noop$2,\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar display = opts.display;\n\t\tvar minSize = me.minSize;\n\t\tvar lineCount = helpers$1.isArray(opts.text) ? opts.text.length : 1;\n\t\tvar fontOpts = helpers$1.options._parseFont(opts);\n\t\tvar textSize = display ? (lineCount * fontOpts.lineHeight) + (opts.padding * 2) : 0;\n\n\t\tif (me.isHorizontal()) {\n\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\tminSize.height = textSize;\n\t\t} else {\n\t\t\tminSize.width = textSize;\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\n\t},\n\tafterFit: noop$2,\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\tvar pos = this.options.position;\n\t\treturn pos === 'top' || pos === 'bottom';\n\t},\n\n\t// Actually draw the title block on the canvas\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar ctx = me.ctx;\n\t\tvar opts = me.options;\n\n\t\tif (opts.display) {\n\t\t\tvar fontOpts = helpers$1.options._parseFont(opts);\n\t\t\tvar lineHeight = fontOpts.lineHeight;\n\t\t\tvar offset = lineHeight / 2 + opts.padding;\n\t\t\tvar rotation = 0;\n\t\t\tvar top = me.top;\n\t\t\tvar left = me.left;\n\t\t\tvar bottom = me.bottom;\n\t\t\tvar right = me.right;\n\t\t\tvar maxWidth, titleX, titleY;\n\n\t\t\tctx.fillStyle = helpers$1.valueOrDefault(opts.fontColor, core_defaults.global.defaultFontColor); // render in correct colour\n\t\t\tctx.font = fontOpts.string;\n\n\t\t\t// Horizontal\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\ttitleX = left + ((right - left) / 2); // midpoint of the width\n\t\t\t\ttitleY = top + offset;\n\t\t\t\tmaxWidth = right - left;\n\t\t\t} else {\n\t\t\t\ttitleX = opts.position === 'left' ? left + offset : right - offset;\n\t\t\t\ttitleY = top + ((bottom - top) / 2);\n\t\t\t\tmaxWidth = bottom - top;\n\t\t\t\trotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n\t\t\t}\n\n\t\t\tctx.save();\n\t\t\tctx.translate(titleX, titleY);\n\t\t\tctx.rotate(rotation);\n\t\t\tctx.textAlign = 'center';\n\t\t\tctx.textBaseline = 'middle';\n\n\t\t\tvar text = opts.text;\n\t\t\tif (helpers$1.isArray(text)) {\n\t\t\t\tvar y = 0;\n\t\t\t\tfor (var i = 0; i < text.length; ++i) {\n\t\t\t\t\tctx.fillText(text[i], 0, y, maxWidth);\n\t\t\t\t\ty += lineHeight;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tctx.fillText(text, 0, 0, maxWidth);\n\t\t\t}\n\n\t\t\tctx.restore();\n\t\t}\n\t}\n});\n\nfunction createNewTitleBlockAndAttach(chart, titleOpts) {\n\tvar title = new Title({\n\t\tctx: chart.ctx,\n\t\toptions: titleOpts,\n\t\tchart: chart\n\t});\n\n\tcore_layouts.configure(chart, title, titleOpts);\n\tcore_layouts.addBox(chart, title);\n\tchart.titleBlock = title;\n}\n\nvar plugin_title = {\n\tid: 'title',\n\n\t/**\n\t * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n\t * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n\t * the plugin, which one will be re-exposed in the chart.js file.\n\t * https://github.com/chartjs/Chart.js/pull/2640\n\t * @private\n\t */\n\t_element: Title,\n\n\tbeforeInit: function(chart) {\n\t\tvar titleOpts = chart.options.title;\n\n\t\tif (titleOpts) {\n\t\t\tcreateNewTitleBlockAndAttach(chart, titleOpts);\n\t\t}\n\t},\n\n\tbeforeUpdate: function(chart) {\n\t\tvar titleOpts = chart.options.title;\n\t\tvar titleBlock = chart.titleBlock;\n\n\t\tif (titleOpts) {\n\t\t\thelpers$1.mergeIf(titleOpts, core_defaults.global.title);\n\n\t\t\tif (titleBlock) {\n\t\t\t\tcore_layouts.configure(chart, titleBlock, titleOpts);\n\t\t\t\ttitleBlock.options = titleOpts;\n\t\t\t} else {\n\t\t\t\tcreateNewTitleBlockAndAttach(chart, titleOpts);\n\t\t\t}\n\t\t} else if (titleBlock) {\n\t\t\tcore_layouts.removeBox(chart, titleBlock);\n\t\t\tdelete chart.titleBlock;\n\t\t}\n\t}\n};\n\nvar plugins = {};\nvar filler = plugin_filler;\nvar legend = plugin_legend;\nvar title = plugin_title;\nplugins.filler = filler;\nplugins.legend = legend;\nplugins.title = title;\n\n/**\n * @namespace Chart\n */\n\n\ncore_controller.helpers = helpers$1;\n\n// @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\ncore_helpers(core_controller);\n\ncore_controller._adapters = core_adapters;\ncore_controller.Animation = core_animation;\ncore_controller.animationService = core_animations;\ncore_controller.controllers = controllers;\ncore_controller.DatasetController = core_datasetController;\ncore_controller.defaults = core_defaults;\ncore_controller.Element = core_element;\ncore_controller.elements = elements;\ncore_controller.Interaction = core_interaction;\ncore_controller.layouts = core_layouts;\ncore_controller.platform = platform;\ncore_controller.plugins = core_plugins;\ncore_controller.Scale = core_scale;\ncore_controller.scaleService = core_scaleService;\ncore_controller.Ticks = core_ticks;\ncore_controller.Tooltip = core_tooltip;\n\n// Register built-in scales\n\ncore_controller.helpers.each(scales, function(scale, type) {\n\tcore_controller.scaleService.registerScaleType(type, scale, scale._defaults);\n});\n\n// Load to register built-in adapters (as side effects)\n\n\n// Loading built-in plugins\n\nfor (var k in plugins) {\n\tif (plugins.hasOwnProperty(k)) {\n\t\tcore_controller.plugins.register(plugins[k]);\n\t}\n}\n\ncore_controller.platform.initialize();\n\nvar src = core_controller;\nif (typeof window !== 'undefined') {\n\twindow.Chart = core_controller;\n}\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Chart\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\ncore_controller.Chart = core_controller;\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Legend\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\ncore_controller.Legend = plugins.legend._element;\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Title\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\ncore_controller.Title = plugins.title._element;\n\n/**\n * Provided for backward compatibility, use Chart.plugins instead\n * @namespace Chart.pluginService\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\ncore_controller.pluginService = core_controller.plugins;\n\n/**\n * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n * effect, instead simply create/register plugins via plain JavaScript objects.\n * @interface Chart.PluginBase\n * @deprecated since version 2.5.0\n * @todo remove at version 3\n * @private\n */\ncore_controller.PluginBase = core_controller.Element.extend({});\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas instead.\n * @namespace Chart.canvasHelpers\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\ncore_controller.canvasHelpers = core_controller.helpers.canvas;\n\n/**\n * Provided for backward compatibility, use Chart.layouts instead.\n * @namespace Chart.layoutService\n * @deprecated since version 2.7.3\n * @todo remove at version 3\n * @private\n */\ncore_controller.layoutService = core_controller.layouts;\n\n/**\n * Provided for backward compatibility, not available anymore.\n * @namespace Chart.LinearScaleBase\n * @deprecated since version 2.8\n * @todo remove at version 3\n * @private\n */\ncore_controller.LinearScaleBase = scale_linearbase;\n\n/**\n * Provided for backward compatibility, instead we should create a new Chart\n * by setting the type in the config (`new Chart(id, {type: '{chart-type}'}`).\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n */\ncore_controller.helpers.each(\n\t[\n\t\t'Bar',\n\t\t'Bubble',\n\t\t'Doughnut',\n\t\t'Line',\n\t\t'PolarArea',\n\t\t'Radar',\n\t\t'Scatter'\n\t],\n\tfunction(klass) {\n\t\tcore_controller[klass] = function(ctx, cfg) {\n\t\t\treturn new core_controller(ctx, core_controller.helpers.merge(cfg || {}, {\n\t\t\t\ttype: klass.charAt(0).toLowerCase() + klass.slice(1)\n\t\t\t}));\n\t\t};\n\t}\n);\n\nreturn src;\n\n})));\n","; (function ($, window, document, undefined) {\r\n\tvar pluginName = \"cryodex\",\r\n\t\tdefaults = {\r\n\t\t\tbaseColours: {\r\n\t\t\t\tfirst: '#1abc9c',\r\n\t\t\t\tsecond: '#e74c3c',\r\n\t\t\t\tthird: '#3498db',\r\n\t\t\t\tfourth: '#9b59b6',\r\n\t\t\t\tfifth: '#34495e',\r\n\t\t\t\tsixth: '#2ecc71',\r\n\t\t\t\tseventh: '#e67e22',\r\n\t\t\t\teighth: '#f1c40f',\r\n\t\t\t\tninth: '#7f8c8d',\r\n\t\t\t\ttenth: '#d35400' \r\n\t\t\t},\r\n\t\t\tlegend: {}\r\n\t\t};\r\n\r\n\tfunction Cryodex(element, options) {\r\n\t\tthis.element = element;\r\n\r\n\t\t$('body').append('<div id=\"cryodex-js-colour-config\"></div>');\r\n\t\tcolours =  jQuery.parseJSON($('#cryodex-js-colour-config').css('content').replace(/\"/g,'').replace(/'/g,'\"'));\r\n\r\n\t\tif (typeof(colours) == 'object') {\r\n\t\t\tdefaults.colours = colours;\r\n\t\t} else {\r\n\t\t\tdefaults.colours = defaults.baseColours;\r\n\t\t}\r\n\r\n\t\tthis.options = $.extend({}, defaults, options);\r\n\r\n\t\tthis._defaults = defaults;\r\n\t\tthis._name = pluginName;\r\n\r\n\t\tthis._counter = 0 ;\r\n\r\n\t\tthis.init();\r\n\t}\r\n\r\n\tCryodex.prototype = {\r\n\r\n\t\tinit: function () {\r\n\t\t\tswitch ($(this.element).attr('data-cryodex-widget')) {\r\n\t\t\t\tcase 'gauge':\r\n\t\t\t\t\tthis._gauge();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'doughnut':\r\n\t\t\t\t\tthis._doughnut();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'bar':\r\n\t\t\t\t\tthis._bar('bar');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'horizontal-bar':\r\n\t\t\t\t\tthis._bar('horizontalBar');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'line':\r\n\t\t\t\t\tthis._line();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'progress':\r\n\t\t\t\t\tthis._progress();\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t$(this.element).addClass('cryodex-loaded');\r\n\t\t},\r\n\r\n\t\t_getColour: function(colour) {\r\n\t\t\tif (typeof (colour) == 'undefined' || colour == '') {\r\n\t\t\t\tcolour = this.options.colours[Object.keys(this.options.colours)[this._counter % Object.keys(this.options.colours).length]];\r\n\t\t\t} else if (typeof (this.options.colours[colour]) != 'undefined') {\r\n\t\t\t\tcolour = this.options.colours[colour];\r\n\t\t\t} else if (typeof (this._defaults.baseColours[colour]) != 'undefined') {\r\n\t\t\t\tcolour = this._defaults.baseColours[colour];\r\n\t\t\t}\r\n\t\t\treturn colour;\r\n\t\t},\r\n\r\n\t\t_getColourAlpha: function (colour, opacity) {\r\n\t\t\tcolour = this._getColour(colour);\r\n\t\t\tif (colour.substr(0, 5) == 'rgba(') {\r\n\t\t\t\trgb = colour.replace('rgba(', '').replace(')', '');\r\n\t\t\t\trgb = rgb.split(',');\r\n\t\t\t\tcolour = 'rgba(' + rgb[0] + ',' + rgb[1] + ',' + rgb[2] + ',' + opacity + ')';\r\n\t\t\t} else if (colour.substr(0, 4) == 'rgb(') {\r\n\t\t\t\trgb = colour.replace('rgb(', '').replace(')', '');\r\n\t\t\t\trgb = rgb.split(',');\r\n\t\t\t\tcolour = 'rgba(' + rgb[0] + ',' + rgb[1] + ',' + rgb[2] + ',' + opacity + ')';\r\n\t\t\t} else if (/^#([A-Fa-f0-9]{3}){1,2}$/.test(colour)) {\r\n\t\t\t\tc = colour.substring(1).split('');\r\n\t\t\t\tif (c.length == 3) {\r\n\t\t\t\t\tc = [c[0], c[0], c[1], c[1], c[2], c[2]];\r\n\t\t\t\t}\r\n\t\t\t\tc = '0x' + c.join('');\r\n\t\t\t\tcolour = 'rgba(' + [(c >> 16) & 255, (c >> 8) & 255, c & 255].join(',') + ',' + opacity + ')';\r\n\t\t\t}\r\n\r\n\t\t\treturn colour;\r\n\t\t},\r\n\r\n\t\t_gauge: function () {\r\n\t\t\tthis._counter = 0;\r\n\r\n\t\t\tvar value1 = $(this.element).attr('data-percent') * 0.75;\r\n\t\t\tvar value2 = 75 - value1;\r\n\t\t\tvar colour = this._getColour($(this.element).attr('data-colour'));\r\n\r\n\t\t\t$(this.element).append('<canvas />');\r\n\t\t\tthis.chart = new Chart($('canvas', this.element), {\r\n\t\t\t\ttype: 'doughnut',\r\n\t\t\t\tresponsive: true,\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tlabels: ['Complete', null],\r\n\t\t\t\t\tdatasets: [{\r\n\t\t\t\t\t\tlabel: 'progress',\r\n\t\t\t\t\t\tdata: [value1, value2, 25],\r\n\t\t\t\t\t\tbackgroundColor: [\r\n\t\t\t\t\t\t\tcolour,\r\n\t\t\t\t\t\t\t'#ddd',\r\n\t\t\t\t\t\t\t'transparent'\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\thoverBackgroundColor: [\r\n\t\t\t\t\t\t\tcolour,\r\n\t\t\t\t\t\t\t'#ddd',\r\n\t\t\t\t\t\t\t'transparent'\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\tborderWidth: 0\r\n\t\t\t\t\t}]\r\n\t\t\t\t},\r\n\t\t\t\toptions: {\r\n\t\t\t\t\tlegend: { display: false },\r\n\t\t\t\t\ttooltips: { enabled: false },\r\n\t\t\t\t\tcutoutPercentage: 70,\r\n\t\t\t\t\trotation: 0.75 * Math.PI,\r\n\t\t\t\t\tonClick: window[$(this.element).attr('data-click')]\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t_doughnut: function () {\r\n\t\t\tvar base = this;\r\n\t\t\tbase._counter = 0;\r\n\r\n\t\t\tvar table = $('table', this.element).eq(0).hide();\r\n\r\n\t\t\tvar labels = new Array();\r\n\t\t\t$('thead th', table).each(function () {\r\n\t\t\t\tlabels.push($(this).text());\r\n\t\t\t});\r\n\r\n\t\t\tvar datasets = new Array();\r\n\t\t\t$('tbody tr', table).each(function () {\r\n\t\t\t\tvar dataset_item = new Object();\r\n\t\t\t\tdataset_item.label = $(this).attr('data-label');\r\n\t\t\t\tdataset_item.data = new Array();\r\n\t\t\t\tdataset_item.backgroundColor = new Array();\r\n\t\t\t\t$('td', this).each(function () {\r\n\t\t\t\t\tdataset_item.data.push($(this).text());\r\n\t\t\t\t\tdataset_item.backgroundColor.push(base._getColour($(this).attr('data-colour')));\r\n\t\t\t\t\tbase._counter ++;\r\n\t\t\t\t});\r\n\t\t\t\tdataset_item.borderWidth = 0;\r\n\t\t\t\tdatasets.push(dataset_item);\r\n\t\t\t});\r\n\t\t\tvar legend = this.options.legend;\r\n\t\t\t//legend.position = 'left';\r\n\t\t\tlegend.display = false;\r\n\t\t\tif ($(this.element).attr('data-legend-click')) {\r\n\t\t\t\tlegend.onClick = window[$(this.element).attr('data-legend-click')];\r\n\t\t\t}\r\n\r\n\t\t\t$(this.element).append('<div class=\"cryodex-chart-wrapper\"><div class=\"cryodex-legend\" /><div class=\"cryodex-chart\"><canvas /></div></div>');\r\n\t\t\tthis.chart = new Chart($('canvas', this.element), {\r\n\t\t\t\ttype: 'doughnut',\r\n\t\t\t\tresponsive: true,\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tlabels: labels,\r\n\t\t\t\t\tdatasets: datasets\r\n\t\t\t\t},\r\n\t\t\t\toptions: {\r\n\t\t\t\t\tlegend: legend,\r\n\t\t\t\t\tonClick: window[$(this.element).attr('data-click')],\r\n\t\t\t\t\tlegendCallback: function(chart) {\r\n\t\t\t\t\t\tconsole.log(chart.data);\r\n\t\t\t\t\t\tvar text = [];\r\n\t\t\t\t\t\ttext.push('<ul>');\r\n\t\t\t\t\t\tfor (var i=0; i<chart.data.datasets[0].data.length; i++) {\r\n\t\t\t\t\t\t\ttext.push('<li>');\r\n\t\t\t\t\t\t\tconsole.log($(base.element).attr('data-legend-click'));\r\n\t\t\t\t\t\t\tif ($(base.element).attr('data-legend-click')) {\r\n\t\t\t\t\t\t\t\ttext.push('<a href=\"javascript:' + $(base.element).attr('data-legend-click') + '(null, {index: ' + i +', text: \\'' + chart.data.labels[i] + '\\'});\">');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\ttext.push('<span style=\"background-color:' + chart.data.datasets[0].backgroundColor[i] + '\">&nbsp;</span>');\r\n\t\t\t\t\t\t\tif (chart.data.labels[i]) {\r\n\t\t\t\t\t\t\t\ttext.push(chart.data.labels[i]);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif ($(base.element).attr('data-legend-click')) {\r\n\t\t\t\t\t\t\t\ttext.push('</a>');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\ttext.push('</li>');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\ttext.push('</ul>');\r\n\t\t\t\t\t\treturn text.join(\"\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t});\r\n\t\t\t$('.cryodex-legend', this.element).html(this.chart.generateLegend());\r\n\t\t},\r\n\r\n\t\t_bar: function (charttype) {\r\n\t\t\tvar base = this;\r\n\t\t\tbase._counter = 0;\r\n\r\n\t\t\tvar table = $('table', this.element).eq(0).hide();\r\n\r\n\t\t\tvar labels = new Array();\r\n\t\t\t$('thead th', table).each(function () {\r\n\t\t\t\tlabels.push($(this).text());\r\n\t\t\t});\r\n\r\n\t\t\tvar datasets = new Array();\r\n\t\t\t$('tbody tr', table).each(function () {\r\n\t\t\t\tvar dataset_item = new Object();\r\n\t\t\t\tdataset_item.label = $(this).attr('data-label');\r\n\t\t\t\tdataset_item.data = new Array();\r\n\t\t\t\tdataset_item.backgroundColor = new Array();\r\n\t\t\t\t$('td', this).each(function () {\r\n\t\t\t\t\tdataset_item.data.push($(this).text());\r\n\t\t\t\t\tdataset_item.backgroundColor.push(base._getColour($(this).attr('data-colour')));\r\n\t\t\t\t\tbase._counter ++;\r\n\t\t\t\t});\r\n\t\t\t\tdataset_item.borderWidth = 0;\r\n\t\t\t\tdatasets.push(dataset_item);\r\n\t\t\t});\r\n\r\n\t\t\tvar chartoptions = {\r\n\t\t\t\tlegend: { display: false },\r\n\t\t\t\tonClick: window[$(this.element).attr('data-click')]\r\n\t\t\t}\r\n\r\n\t\t\tif ($(this.element).attr('data-stacked')) {\r\n\t\t\t\tchartoptions.scales = {\r\n\t\t\t\t\txAxes: [{ stacked: true }],\r\n\t\t\t\t\tyAxes: [{ stacked: true }]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t$(this.element).append('<canvas />');\r\n\t\t\tthis.chart = new Chart($('canvas', this.element), {\r\n\t\t\t\ttype: charttype,\r\n\t\t\t\tresponsive: true,\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tlabels: labels,\r\n\t\t\t\t\tdatasets: datasets\r\n\t\t\t\t},\r\n\t\t\t\toptions: chartoptions\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t_line: function () {\r\n\t\t\tvar base = this;\r\n\t\t\tbase._counter = 0;\r\n\r\n\t\t\tvar table = $('table', this.element).eq(0).hide();\r\n\r\n\t\t\tvar labels = new Array();\r\n\t\t\t$('thead th', table).each(function () {\r\n\t\t\t\tlabels.push($(this).text());\r\n\t\t\t});\r\n\r\n\t\t\tvar datasets = new Array();\r\n\t\t\t$('tbody tr', table).each(function () {\r\n\t\t\t\tvar dataset_item = new Object();\r\n\t\t\t\tdataset_item.label = $(this).attr('data-label');\r\n\t\t\t\tdataset_item.data = new Array();\r\n\t\t\t\tdataset_item.pointRadius = 3;\r\n\t\t\t\tdataset_item.pointHoverRadius = 5;\r\n\t\t\t\tvar colour = base._getColour($(this).attr('data-colour'));\r\n\t\t\t\tdataset_item.pointBackgroundColor = colour;\r\n\t\t\t\tdataset_item.borderColor = colour;\r\n\t\t\t\tdataset_item.pointBorderColor = '#fff';\r\n\t\t\t\tdataset_item.pointHitRadius = 20;\r\n\t\t\t\tif (typeof ($(this).attr('data-fill')) != 'undefined') {\r\n\t\t\t\t\tdataset_item.backgroundColor = base._getColourAlpha($(this).attr('data-colour'), 0.6);\r\n\t\t\t\t}\r\n\t\t\t\t$('td', this).each(function () {\r\n\t\t\t\t\tdataset_item.data.push($(this).text());\r\n\t\t\t\t});\r\n\t\t\t\tdatasets.push(dataset_item);\r\n\t\t\t\tbase._counter ++;\r\n\t\t\t});\r\n\r\n\t\t\t$(this.element).append('<canvas />');\r\n\t\t\tthis.chart = new Chart($('canvas', this.element), {\r\n\t\t\t\ttype: 'line',\r\n\t\t\t\tresponsive: true,\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tlabels: labels,\r\n\t\t\t\t\tdatasets: datasets\r\n\t\t\t\t},\r\n\t\t\t\toptions: {\r\n\t\t\t\t\tlegend: { display: false },\r\n\t\t\t\t\ttooltips: { mode: 'x-axis' },\r\n\t\t\t\t\thover: { mode: 'x-axis' },\r\n\t\t\t\t\tonClick: window[$(this.element).attr('data-click')]\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t_progress: function() {\r\n\t\t\t$(this.element).attr('data-value', $(this.element).html());\r\n\t\t},\r\n\t};\r\n\r\n\t// A really lightweight plugin wrapper around the constructor,\r\n\t// preventing against multiple instantiations\r\n\t$.fn[pluginName] = function (options) {\r\n\t\treturn $('[data-cryodex-widget]', this).each(function () {\r\n\t\t\tif (!$.data(this, \"plugin_\" + pluginName)) {\r\n\t\t\t\t$.data(this, \"plugin_\" + pluginName,\r\n\t\t\t\tnew Cryodex(this, options));\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n})(jQuery, window, document);"]}