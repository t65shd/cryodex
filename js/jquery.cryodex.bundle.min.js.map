{"version":3,"sources":["Chart.bundle.js","jquery.cryodex.js"],"names":["global","factory","exports","module","define","amd","Chart","this","conversions","rgb2hsl","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","rgb2xyz","rgb2lab","rgb2lch","args","lab2lch","hsl2rgb","hsl2hsv","hsl","h","s","l","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","hsv2hsl","hsv","sl","v","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2rgb","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab2rgb","lch2lab","lch2xyz","lch2rgb","rgb","r","g","b","min","Math","max","delta","k","reverseKeywords","JSON","stringify","pow","xyz","x","y","z","t1","t2","t3","val","i","hi","floor","f","p","q","t","hwb","n","wh","bl","ratio","cmyk","c","m","lab","y2","a","atan2","PI","sqrt","lch","hr","cos","sin","keyword","cssKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","key","convert","Converter","func","arg","Array","prototype","slice","call","arguments","pair","exec","from","to","length","round","convs","routeSpace","space","values","getValues","setValues","vals","fspace","forEach","colorConvert","colorName","colorString","getRgba","getHsla","getRgb","string","rgba","getHsl","hsla","getHwb","getAlpha","hexString","hexDouble","rgbString","alpha","rgbaString","percentString","percentaString","hslString","hslaString","hwbString","reverseNames","match","hexAlpha","parseInt","parseFloat","scale","isNaN","num","str","toString","toUpperCase","name","Color","obj","valid","lightness","value","w","whiteness","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","concat","cmykArray","rgbaArray","hslaArray","setChannel","hue","saturation","saturationv","blackness","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","w1","w2","toJSON","clone","type","result","source","target","prop","hasOwnProperty","console","error","spaces","maxes","charAt","capped","chans","sname","index","svalues","window","id","chartjsColor","helpers","noop","uid","isNullOrUndef","isArray","Object","substr","isObject","isFinite","Number","valueOrDefault","defaultValue","valueAtIndexOrDefault","callback","fn","thisArg","apply","each","loopable","reverse","len","keys","arrayEquals","a0","a1","ilen","v0","v1","map","klen","_merger","options","tval","sval","merge","_mergerIf","mergeIf","sources","merger","extend","setFn","inherits","extensions","Surrogate","constructor","ChartElement","me","__super__","helpers_core","callCallback","indexOf","array","item","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","helpers_easing","easingEffects","RAD_PER_DEG","DOUBLE_PI","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","exports$1","clear","chart","ctx","clearRect","width","height","roundedRect","radius","left","top","right","bottom","moveTo","arc","closePath","rect","drawPoint","style","rotation","xOffset","yOffset","size","cornerRadius","rad","beginPath","lineTo","SQRT1_2","fill","stroke","drawImage","_isPointInArea","point","area","clipArea","save","clip","unclipArea","restore","previous","flip","stepped","steppedLine","midpoint","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","helpers_canvas","drawRoundedRectangle","defaults","_set","scope","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","defaultLineHeight","showLines","core_defaults","helpers_options","toLineHeight","matches","toPadding","_parseFont","font","globalDefaults","fontSize","family","fontFamily","lineHeight","fontStyle","resolve","inputs","context","helpers$1","easing","canvas","Element","configuration","initialize","hidden","pivot","_view","_model","_start","transition","ease","model","start","view","actual","origin","c0","c1","tooltipPosition","hasValue","isNumber","core_element","exports$2","currentStep","numSteps","render","onAnimationProgress","onAnimationComplete","core_animation","defineProperty","get","set","animation","duration","onProgress","onComplete","core_animations","animations","request","addAnimation","lazy","startTime","Date","now","animating","push","requestAnimationFrame","cancelAnimation","findIndex","splice","requestAnimFrame","startDigest","advance","nextStep","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","DatasetController","datasetIndex","datasetElementType","dataElementType","linkScales","addElements","updateIndex","meta","getMeta","dataset","getDataset","xAxisID","scales","xAxes","yAxisID","yAxes","data","datasets","getDatasetMeta","getScaleForId","scaleID","_getValueScaleId","_getIndexScaleId","_getValueScale","_getIndexScale","reset","update","destroy","_data","createMetaDataset","_chart","_datasetIndex","createMetaData","_index","metaData","addElementAndReset","element","updateElement","buildOrUpdateElements","isExtensible","configurable","enumerable","method","base","res","object","resyncElements","easingValue","elements","draw","removeHoverStyle","$previousStyle","setHoverStyle","custom","getHoverColor","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","numMeta","numData","insertElements","count","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","core_datasetController","borderAlign","element_arc","inLabelRange","mouseX","vm","hoverRadius","inRange","chartX","chartY","pointRelativePosition","getAngleFromPoint","angle","distance","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","getCenterPoint","halfAngle","halfRadius","getArea","centreAngle","rangeFromCentre","angleMargin","sA","eA","pixelMargin","fillStyle","lineWidth","lineJoin","strokeStyle","valueOrDefault$1","line","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","capBezierPoints","element_line","current","currentVM","spanGaps","points","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","setLineDash","lineDashOffset","previousItem","skip","valueOrDefault$2","defaultColor$1","xRange","abs","hitRadius","pointStyle","element_point","mouseY","inXRange","inYRange","padding","chartArea","defaultColor$2","isVertical","getBarBounds","x1","x2","y1","half","swap","orig","v2","skipX","skipY","bounds","rectangle","borderSkipped","element_rectangle","border","rects","maxW","maxH","edge","horizontal","parseBorderWidth","outer","inner","fillRect","Arc","Line","Point","Rectangle","resolve$1","hover","mode","categoryPercentage","barPercentage","offset","gridLines","offsetGridLines","controller_bar","stack","bar","_ruler","getRuler","_resolveElementOptions","_xScale","_yScale","datasetLabel","label","labels","_updateElementGeometry","vscale","getBasePixel","isHorizontal","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","center","_getStacks","last","stacked","stacks","isDatasetVisible","getStackCount","getStackIndex","stackCount","end","pixels","getPixelForValue","barThickness","prev","curr","ticks","getTicks","getPixelForTick","imeta","ivalue","getRightValue","minBarLength","controller","thickness","next","percent","range","chunk","stackIndex","maxBarThickness","Infinity","dataIndex","valueOrDefault$3","resolve$2","position","tooltips","callbacks","title","dataPoint","xLabel","yLabel","controller_bubble","xScale","yScale","dsIndex","getPixelForDecimal","NaN","_options","resolve$3","valueOrDefault$4","animateRotate","animateScale","legendCallback","text","join","legend","generateLabels","ds","arcOpts","onClick","e","legendItem","cutoutPercentage","circumference","tooltipItem","dataLabel","controller_doughnut","getRingIndex","ringIndex","j","opts","availableWidth","availableHeight","minSize","arcs","chartWeight","_getRingWeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","_getVisibleDatasetWeightTotal","offsetX","offsetY","total","calculateTotal","_getRingWeightOffset","animationOpts","centerX","centerY","calculateCircumference","hoverWidth","ringWeightOffset","dataSetIndex","axis","controller_horizontalBar","valueOrDefault$5","resolve$4","isPointInArea","lineEnabled","showLine","controller_line","lineTension","_scale","_resolveLineOptions","updateBezierControlPoints","lineModel","_resolvePointOptions","calculatePointY","ELEMENT_OPTIONS","elementOptions","dsMeta","sumPos","sumNeg","stackedRightValue","rightValue","controlPoints","capControlPoint","pt","filter","cubicInterpolationMode","splineCurveMonotone","splineCurve","nextItem","halfBorderWidth","resolve$5","angleLines","display","circular","pointLabels","beginAtZero","controller_polarArea","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getDistanceFromCenterForValue","resetRadius","doughnut","controller_pie","valueOrDefault$6","resolve$6","controller_radar","pointPosition","getPointPositionForValue","controllers","bubble","horizontalBar","polarArea","pie","radar","scatter","getRelativePosition","native","parseVisibleItems","handler","jlen","getIntersectItems","getNearestItems","intersect","distanceMetric","minDistance","POSITIVE_INFINITY","nearestItems","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","indexMode","items","core_interaction","modes","single","x-axis","nearest","intersectsItem","filterByPosition","where","sortByWeight","_tmpIndex_","sort","addSizeByPosition","boxes","box","layout","core_layouts","addBox","fullWidth","removeBox","layoutItem","configure","props","layoutOptions","leftPadding","rightPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","maxPadding","verticalBoxes","horizontalBoxes","outerBoxes","chartWidth","chartHeight","verticalBoxWidth","maxChartAreaWidth","maxChartAreaHeight","outerBoxSizes","minBoxSizes","getPadding","boxPadding","fitBox","minBoxSize","findNextWhere","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","minBox","self","stylesheet","freeze","default","EXPANDO_KEY","CSS_SIZE_MONITOR","CSS_PREFIX","CSS_RENDER_MONITOR","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","property","getStyle","eventListenerOptions","supports","addEventListener","passive","addListener","node","removeListener","removeEventListener","createEvent","nativeEvent","createDiv","cls","el","document","createElement","className","addResizeListener","ticking","expando","proxy","resizer","expand","shrink","appendChild","_reset","scrollLeft","scrollTop","onScroll","bind","container","maintainAspectRatio","parentNode","clientWidth","renderProxy","animationName","insertBefore","firstChild","reflow","offsetParent","classList","add","removeResizeListener","remove","removeChild","platform_dom$2","disableCSSInjection","_enabled","_ensureLoaded","platform","css","_loaded","_style","setAttribute","getElementsByTagName","createTextNode","acquireContext","config","getElementById","getContext","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","releaseContext","removeAttribute","proxies","event","pos","addEvent","removeEvent","implementation","plugins","core_plugins","_plugins","_cacheId","register","plugin","unregister","idx","getAll","notify","hook","descriptor","params","descriptors","cache","$plugins","_invalidate","core_scaleService","constructors","registerScaleType","scaleConstructor","scaleDefaults","getScaleConstructor","getScaleDefaults","updateScaleDefaults","additions","addScalesToLayout","valueOrDefault$7","enabled","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","eventPosition","nearestElement","d","distanceBetweenPoints","tp","pushOrConcat","toPush","splitNewlines","String","split","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","opacity","legendColorBackground","getAlignedX","align","getBeforeAfterBodyLines","exports$3","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","changed","indexScale","valueScale","alignment","paddingAndSize","radiusAndPadding","existingModel","active","_active","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","_eventPosition","getLabelForIndex","itemSort","body","dataPoints","tooltip","combinedBodyLength","reduce","titleLineCount","footerLineCount","maxLineWidth","measureText","widthPadding","fontString","lf","rf","olf","orf","yf","midX","midY","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","textAlign","textBaseline","fillText","drawBody","textColor","drawColorBoxes","xLinePadding","colorX","fillLineOfText","strokeRect","drawFooter","drawBackground","quadraticCurveTo","hasTooltipContent","globalAlpha","handleEvent","getElementsAtEventForMode","positioners_1","core_tooltip","valueOrDefault$8","mergeScaleConfig","slen","mergeConfig","positionIsHorizontal","events","onHover","animationDuration","responsive","responsiveAnimationDuration","construct","_bufferedRender","instances","retinaScale","devicePixelRatio","bindEvents","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","stop","silent","newWidth","getMaximumWidth","newHeight","getMaximumHeight","newSize","onResize","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","mergeTicksOptions","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","ControllerClass","Error","resetElements","newOptions","updateConfig","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","drawDatasets","_drawTooltip","drawDataset","getElementAtEvent","getElementsAtEvent","getElementsAtXAxis","getDatasetAtEvent","_meta","generateLegend","unbindEvents","toBase64Image","toDataURL","_chartInstance","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","core_controller","abstract","DateAdapter","Controller","types","configMerge","scaleMerge","formats","parse","format","diff","startOf","endOf","_create","override","members","core_adapters","_date","core_ticks","formatters","tickValue","logDelta","log10","tickString","logTick","toExponential","numDecimal","toFixed","logarithmic","remain","valueOrDefault$9","labelsFromTicks","computeTextSize","tick","longestText","color","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","minor","major","core_scale","paddingLeft","paddingTop","paddingRight","paddingBottom","_ticks","beforeUpdate","maxWidth","maxHeight","margins","_maxLabelLines","longestLabelWidth","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","toRadians","scaleLabelOpts","gridLineOpts","_isVisible","parseFont","isFullWidth","scaleLabelFont","scaleLabelPadding","deltaHeight","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","tickPadding","labelHeight","firstLabelWidth","lastLabelWidth","offsetLeft","offsetRight","handleMargins","rawValue","getValueForPixel","pixel","innerHeight","decimal","valueOffset","getBaseValue","_autoSkip","optionTicks","tickCount","skipRatio","maxTicks","maxTicksLimit","ticksLength","_tickSize","axisLength","PaddingBottom","rot","borderValue","tickStart","tickEnd","optionMajorTicks","isRotated","isMirrored","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","labelRotationRadians","itemsToDraw","axisWidth","alignPixel","_alignPixel","lineColor","tx1","ty1","tx2","ty2","labelX","labelY","textOffset","zeroLineIndex","lineValue","labelYOffset","labelXOffset","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","translate","scaleLabelX","scaleLabelY","halfLineHeight","isLeft","firstLineWidth","lastLineWidth","scale_category","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","_defaults","scale_linearbase","handleTickRangeOptions","minSign","sign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","stepSize","ceil","_computeTickLimit","handleDirectionalChanges","numericGeneratorOptions","precision","fixedStepSize","generationOptions","dataRange","factor","niceMin","niceMax","numSpaces","unit","maxNumSpaces","rmin","rmax","spacing","niceNum","_decimalPlaces","almostWhole","almostEquals","ticksAsNumbers","defaultConfig$1","scale_linear","IDMatches","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","innerDimension","_defaults$1","valueOrDefault$a","defaultConfig$2","nonNegativeOrDefault","scale_logarithmic","minNotZero","exp","significand","tickVal","endExp","endSignificand","lastTick","tickValues","_getFirstTickValue","firstTickValue","_defaults$2","valueOrDefault$b","valueAtIndexOrDefault$1","resolve$7","defaultConfig$3","animate","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","getValueCount","getTickBackdropHeight","determineLimits","numberOrZero","param","scale_radialLinear","drawingArea","NEGATIVE_INFINITY","textSize","plFont","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","toDegrees","hLimits","vLimits","setReductions","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","scalingFactor","distanceFromCenter","thisAngle","getBasePosition","angleLineOpts","pointLabelOpts","tickBackdropHeight","outerDistance","outerPosition","extra","pointLabelPosition","pointLabelFontColor","yCenterOffset","_defaults$3","valueOrDefault$c","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","MAX_SAFE_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","hash","out","interpolate$1","table","skey","tkey","mid","i0","i1","lo","span","toTimestamp","input","adapter","_adapter","time","parser","determineMajorUnit","scale_time","adapters","date","warn","displayFormats","timestamp","timeOpts","timestamps","dataLabels","_horizontal","_table","_timestamps","first","capacity","minUnit","interval","unitStepSize","weekday","isoWeekday","majorTicksEnabled","milliseconds","generate","getLabelCapacity","_unit","_majorUnit","distribution","_offsets","majorUnit","tooltipFormat","datetime","tickFormatFunction","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","isReverse","getLabelWidth","ticksOpts","tickLabelWidth","sinRotation","exampleTime","exampleLabel","innerWidth","displayFormat","category","radialLinear","moment","hookCallback","some","hooks","isUndefined","isDate","arr","hasOwnProp","valueOf","createUTC","locale","strict","createLocalOrUTC","utc","getParsingFlags","_pf","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","_isValid","flags","parsedParts","isNowValid","_d","getTime","invalidWeekday","_strict","bigHour","isFrozen","createInvalid","fun","momentProperties","copyConfig","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","updateInProgress","Moment","updateOffset","isMoment","absFloor","number","toInt","argumentForCoercion","coercedNumber","compareArrays","array1","array2","dontConvert","lengthDiff","diffs","msg","suppressDeprecationWarnings","deprecate","firstTime","deprecationHandler","deprecations","deprecateSimple","isFunction","Function","mergeConfigs","parentConfig","childConfig","Locale","aliases","addUnitAlias","shorthand","lowerCase","toLowerCase","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","priorities","addUnitPriority","priority","zeroFill","targetLength","forceSign","absNumber","zerosToFill","formattingTokens","localFormattingTokens","formatFunctions","formatTokenFunctions","addFormatToken","token","padded","ordinal","localeData","formatMoment","expandFormat","replace","mom","output","invalidDate","replaceLongDateFormatTokens","longDateFormat","lastIndex","test","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchOffset","matchShortOffset","matchWord","regexes","addRegexToken","regex","strictRegex","isStrict","regexEscape","tokens","addParseToken","addWeekParseToken","_w","YEAR","MONTH","DATE","HOUR","MINUTE","SECOND","MILLISECOND","WEEK","WEEKDAY","daysInYear","isLeapYear","parseTwoDigitYear","getSetYear","makeGetSet","keepTime","set$1","daysInMonth","modMonth","o","monthsShort","months","monthsShortRegex","monthsRegex","monthsParse","MONTHS_IN_FORMAT","defaultLocaleMonths","defaultLocaleMonthsShort","setMonth","dayOfMonth","getSetMonth","defaultMonthsShortRegex","defaultMonthsRegex","computeMonthsParse","cmpLenRev","shortPieces","longPieces","mixedPieces","_monthsRegex","RegExp","_monthsShortRegex","_monthsStrictRegex","_monthsShortStrictRegex","createUTCDate","UTC","getUTCFullYear","setUTCFullYear","firstWeekOffset","dow","doy","fwd","getUTCDay","dayOfYearFromWeeks","resYear","resDayOfYear","dayOfYear","weekOfYear","resWeek","weekOffset","weeksInYear","weekOffsetNext","shiftWeekdays","ws","weekdaysMin","weekdaysShort","weekdays","weekdaysMinRegex","weekdaysShortRegex","weekdaysRegex","weekdaysParse","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","defaultWeekdaysRegex","defaultWeekdaysShortRegex","defaultWeekdaysMinRegex","computeWeekdaysParse","minp","shortp","longp","minPieces","_weekdaysRegex","_weekdaysShortRegex","_weekdaysMinRegex","_weekdaysStrictRegex","_weekdaysShortStrictRegex","_weekdaysMinStrictRegex","hFormat","hours","lowercase","minutes","matchMeridiem","_meridiemParse","seconds","kInput","_isPm","isPM","_meridiem","pos1","pos2","globalLocale","getSetHour","baseConfig","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","LTS","LT","L","LL","LLL","LLLL","dayOfMonthOrdinalParse","relativeTime","future","past","ss","mm","hh","dd","M","MM","yy","meridiemParse","locales","localeFamilies","normalizeLocale","loadLocale","oldLocale","_abbr","commonjsRequire","getSetGlobalLocale","getLocale","defineLocale","abbr","_config","parentLocale","names","checkOverflow","_a","_overflowDayOfYear","_overflowWeeks","_overflowWeekday","configFromArray","currentDate","expectedWeekday","yearToUse","nowValue","_useUTC","getUTCMonth","getUTCDate","getFullYear","getMonth","getDate","weekYear","temp","weekdayOverflow","GG","W","E","createLocal","_week","curWeek","gg","_dayOfYear","_nextDay","ms","setFullYear","getDay","setUTCMinutes","getUTCMinutes","extendedIsoRegex","basicIsoRegex","tzRegex","isoDates","isoTimes","aspNetJsonRegex","configFromISO","allowTime","dateFormat","timeFormat","tzFormat","configFromStringAndFormat","obsOffsets","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","configFromRFC2822","yearStr","monthStr","dayStr","hourStr","minuteStr","secondStr","parsedArray","untruncateYear","weekdayStr","parsedInput","obsOffset","militaryOffset","numOffset","hm","ISO_8601","RFC_2822","skipped","stringLength","totalParsedInputLength","matched","p1","p2","p3","p4","isPm","meridiemHour","prepareConfig","preparse","tempConfig","bestMoment","scoreToBeat","currentScore","score","createFromInputFallback","isUTC","getOwnPropertyNames","prototypeMin","other","prototypeMax","pickBy","moments","ordering","Duration","years","quarters","weeks","isoWeek","days","unitHasDecimal","_milliseconds","_days","_months","_bubble","isDuration","absRound","separator","utcOffset","offsetFromString","chunkOffset","matcher","parts","cloneWithOffset","setTime","local","getDateOffset","getTimezoneOffset","isUtc","aspNetRegex","isoRegex","createDuration","ret","diffRes","parseIso","isBefore","positiveMomentsDifference","inp","isAfter","createAdder","direction","period","addSubtract","isAdding","invalid","subtract","monthDiff","wholeMonthDiff","anchor","newLocaleData","defaultFormat","defaultFormatUtc","lang","MS_PER_400_YEARS","mod$1","dividend","divisor","localStartOfDate","utcStartOfDate","addWeekYearFormatToken","getter","getSetWeekYearHelper","weeksTarget","dayOfYearData","isoWeekYear","_dayOfMonthOrdinalParse","_ordinalParse","_dayOfMonthOrdinalParseLenient","getSetDayOfMonth","getSetMinute","getSetSecond","parseMs","getSetMillisecond","proto","preParsePostFormat","sod","calendarFormat","asFloat","that","zoneDelta","startOfDate","inputString","postformat","withoutSuffix","humanize","fromNow","toNow","invalidAt","localInput","isBetween","inclusivity","localFrom","localTo","isSame","inputMs","isSameOrAfter","isSameOrBefore","parsingFlags","prioritized","unitsObj","u","toArray","toObject","toDate","toISOString","keepOffset","inspect","zone","isLocal","prefix","suffix","unix","creationData","isoWeeks","weekInfo","isoWeeksInYear","keepLocalTime","keepMinutes","localAdjust","_changeInProgress","parseZone","tZone","hasAlignedHourOffset","isDST","isUtcOffset","zoneAbbr","zoneName","dates","isDSTShifted","_isDSTShifted","proto$1","get$1","field","setter","listMonthsImpl","listWeekdaysImpl","localeSorted","_calendar","_longDateFormat","formatUpper","_invalidDate","_ordinal","isFuture","_relativeTime","pastFuture","isFormat","standalone","_monthsShort","monthName","_monthsParseExact","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","firstDayOfYear","firstDayOfWeek","_weekdays","_weekdaysMin","_weekdaysShort","weekdayName","_weekdaysParseExact","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","_fullWeekdaysParse","isLower","langData","mathAbs","addSubtract$1","absCeil","daysToMonths","monthsToDays","makeAs","alias","as","asMilliseconds","asSeconds","asMinutes","asHours","asDays","asWeeks","asMonths","asQuarters","asYears","makeGetter","thresholds","abs$1","toISOString$1","Y","D","totalSign","ymSign","daysSign","hmsSign","proto$2","monthsFromDays","withSuffix","posNegDuration","toIsoString","version","updateLocale","tmpLocale","relativeTimeRounding","roundingFunction","relativeTimeThreshold","threshold","limit","myMoment","HTML5_FMT","DATETIME_LOCAL","DATETIME_LOCAL_SECONDS","DATETIME_LOCAL_MS","TIME","TIME_SECONDS","TIME_MS","FORMATS","_id","amount","filler","propagate","mappers","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","visible","isDrawable","drawArea","curve0","curve1","len0","len1","plugin_filler","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","loop","p0","d0","d1","noop$1","valueOrDefault$d","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","onLeave","lineDash","Legend","legendHitBoxes","_hoveredItem","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","textWidth","halfFontSize","xLeft","yMiddle","SQRT2","_getLegendItemAt","hitBox","lh","hoveredItem","createNewLegendAndAttach","legendOpts","plugin_legend","_element","beforeInit","afterEvent","noop$2","Title","lineCount","fontOpts","titleX","titleY","createNewTitleBlockAndAttach","titleOpts","titleBlock","collection","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","epsilon","rounded","exponent","log","LOG10E","powerOf10","radians","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","aliasPixel","pixelWidth","currentDevicePixelRatio","halfWidth","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","originalEvent","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","getConstraintWidth","domNode","getConstraintDimension","getConstraintHeight","_calculatePadding","parentDimension","_getParentNode","parent","host","cw","clientHeight","ch","currentStyle","defaultView","getComputedStyle","getPropertyValue","forceRatio","pixelRatio","pixelSize","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","numberOfLines","CanvasGradient","colorValue","CanvasPattern","_adapters","Animation","animationService","Interaction","layouts","Scale","scaleService","Ticks","Tooltip","parseMaxStyle","styleValue","parentProperty","valueInPixels","isConstrainedValue","maxStyle","percentageProperty","constrainedNode","constrainedContainer","hasCNode","hasCContainer","infinity","src","pluginService","PluginBase","canvasHelpers","layoutService","LinearScaleBase","klass","cfg","$","pluginName","baseColours","third","fourth","fifth","sixth","seventh","eighth","ninth","tenth","Cryodex","append","colours","jQuery","parseJSON","_name","_counter","init","attr","_gauge","_doughnut","_bar","_line","_progress","addClass","_getColour","colour","_getColourAlpha","substring","value1","value2","eq","hide","dataset_item","html","charttype","chartoptions","pointRadius","pointHoverRadius","pointBackgroundColor","pointBorderColor","pointHitRadius"],"mappings":"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","file":"jquery.cryodex.bundle.min.js","sourcesContent":["/*!\n * Chart.js v2.8.0\n * https://www.chartjs.org\n * (c) 2019 Chart.js Contributors\n * Released under the MIT License\n */\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\ntypeof define === 'function' && define.amd ? define(factory) :\n(global.Chart = factory());\n}(this, (function () { 'use strict';\n\n/* MIT license */\n\nvar conversions = {\n  rgb2hsl: rgb2hsl,\n  rgb2hsv: rgb2hsv,\n  rgb2hwb: rgb2hwb,\n  rgb2cmyk: rgb2cmyk,\n  rgb2keyword: rgb2keyword,\n  rgb2xyz: rgb2xyz,\n  rgb2lab: rgb2lab,\n  rgb2lch: rgb2lch,\n\n  hsl2rgb: hsl2rgb,\n  hsl2hsv: hsl2hsv,\n  hsl2hwb: hsl2hwb,\n  hsl2cmyk: hsl2cmyk,\n  hsl2keyword: hsl2keyword,\n\n  hsv2rgb: hsv2rgb,\n  hsv2hsl: hsv2hsl,\n  hsv2hwb: hsv2hwb,\n  hsv2cmyk: hsv2cmyk,\n  hsv2keyword: hsv2keyword,\n\n  hwb2rgb: hwb2rgb,\n  hwb2hsl: hwb2hsl,\n  hwb2hsv: hwb2hsv,\n  hwb2cmyk: hwb2cmyk,\n  hwb2keyword: hwb2keyword,\n\n  cmyk2rgb: cmyk2rgb,\n  cmyk2hsl: cmyk2hsl,\n  cmyk2hsv: cmyk2hsv,\n  cmyk2hwb: cmyk2hwb,\n  cmyk2keyword: cmyk2keyword,\n\n  keyword2rgb: keyword2rgb,\n  keyword2hsl: keyword2hsl,\n  keyword2hsv: keyword2hsv,\n  keyword2hwb: keyword2hwb,\n  keyword2cmyk: keyword2cmyk,\n  keyword2lab: keyword2lab,\n  keyword2xyz: keyword2xyz,\n\n  xyz2rgb: xyz2rgb,\n  xyz2lab: xyz2lab,\n  xyz2lch: xyz2lch,\n\n  lab2xyz: lab2xyz,\n  lab2rgb: lab2rgb,\n  lab2lch: lab2lch,\n\n  lch2lab: lch2lab,\n  lch2xyz: lch2xyz,\n  lch2rgb: lch2rgb\n};\n\n\nfunction rgb2hsl(rgb) {\n  var r = rgb[0]/255,\n      g = rgb[1]/255,\n      b = rgb[2]/255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, l;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g)/ delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  l = (min + max) / 2;\n\n  if (max == min)\n    s = 0;\n  else if (l <= 0.5)\n    s = delta / (max + min);\n  else\n    s = delta / (2 - max - min);\n\n  return [h, s * 100, l * 100];\n}\n\nfunction rgb2hsv(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, v;\n\n  if (max == 0)\n    s = 0;\n  else\n    s = (delta/max * 1000)/10;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g) / delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  v = ((max / 255) * 1000) / 10;\n\n  return [h, s, v];\n}\n\nfunction rgb2hwb(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      h = rgb2hsl(rgb)[0],\n      w = 1/255 * Math.min(r, Math.min(g, b)),\n      b = 1 - 1/255 * Math.max(r, Math.max(g, b));\n\n  return [h, w * 100, b * 100];\n}\n\nfunction rgb2cmyk(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      c, m, y, k;\n\n  k = Math.min(1 - r, 1 - g, 1 - b);\n  c = (1 - r - k) / (1 - k) || 0;\n  m = (1 - g - k) / (1 - k) || 0;\n  y = (1 - b - k) / (1 - k) || 0;\n  return [c * 100, m * 100, y * 100, k * 100];\n}\n\nfunction rgb2keyword(rgb) {\n  return reverseKeywords[JSON.stringify(rgb)];\n}\n\nfunction rgb2xyz(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255;\n\n  // assume sRGB\n  r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n  g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n  b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n  var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n  var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n  var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n  return [x * 100, y *100, z * 100];\n}\n\nfunction rgb2lab(rgb) {\n  var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction rgb2lch(args) {\n  return lab2lch(rgb2lab(args));\n}\n\nfunction hsl2rgb(hsl) {\n  var h = hsl[0] / 360,\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      t1, t2, t3, rgb, val;\n\n  if (s == 0) {\n    val = l * 255;\n    return [val, val, val];\n  }\n\n  if (l < 0.5)\n    t2 = l * (1 + s);\n  else\n    t2 = l + s - l * s;\n  t1 = 2 * l - t2;\n\n  rgb = [0, 0, 0];\n  for (var i = 0; i < 3; i++) {\n    t3 = h + 1 / 3 * - (i - 1);\n    t3 < 0 && t3++;\n    t3 > 1 && t3--;\n\n    if (6 * t3 < 1)\n      val = t1 + (t2 - t1) * 6 * t3;\n    else if (2 * t3 < 1)\n      val = t2;\n    else if (3 * t3 < 2)\n      val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n    else\n      val = t1;\n\n    rgb[i] = val * 255;\n  }\n\n  return rgb;\n}\n\nfunction hsl2hsv(hsl) {\n  var h = hsl[0],\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      sv, v;\n\n  if(l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n  }\n\n  l *= 2;\n  s *= (l <= 1) ? l : 2 - l;\n  v = (l + s) / 2;\n  sv = (2 * s) / (l + s);\n  return [h, sv * 100, v * 100];\n}\n\nfunction hsl2hwb(args) {\n  return rgb2hwb(hsl2rgb(args));\n}\n\nfunction hsl2cmyk(args) {\n  return rgb2cmyk(hsl2rgb(args));\n}\n\nfunction hsl2keyword(args) {\n  return rgb2keyword(hsl2rgb(args));\n}\n\n\nfunction hsv2rgb(hsv) {\n  var h = hsv[0] / 60,\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      hi = Math.floor(h) % 6;\n\n  var f = h - Math.floor(h),\n      p = 255 * v * (1 - s),\n      q = 255 * v * (1 - (s * f)),\n      t = 255 * v * (1 - (s * (1 - f))),\n      v = 255 * v;\n\n  switch(hi) {\n    case 0:\n      return [v, t, p];\n    case 1:\n      return [q, v, p];\n    case 2:\n      return [p, v, t];\n    case 3:\n      return [p, q, v];\n    case 4:\n      return [t, p, v];\n    case 5:\n      return [v, p, q];\n  }\n}\n\nfunction hsv2hsl(hsv) {\n  var h = hsv[0],\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      sl, l;\n\n  l = (2 - s) * v;\n  sl = s * v;\n  sl /= (l <= 1) ? l : 2 - l;\n  sl = sl || 0;\n  l /= 2;\n  return [h, sl * 100, l * 100];\n}\n\nfunction hsv2hwb(args) {\n  return rgb2hwb(hsv2rgb(args))\n}\n\nfunction hsv2cmyk(args) {\n  return rgb2cmyk(hsv2rgb(args));\n}\n\nfunction hsv2keyword(args) {\n  return rgb2keyword(hsv2rgb(args));\n}\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nfunction hwb2rgb(hwb) {\n  var h = hwb[0] / 360,\n      wh = hwb[1] / 100,\n      bl = hwb[2] / 100,\n      ratio = wh + bl,\n      i, v, f, n;\n\n  // wh + bl cant be > 1\n  if (ratio > 1) {\n    wh /= ratio;\n    bl /= ratio;\n  }\n\n  i = Math.floor(6 * h);\n  v = 1 - bl;\n  f = 6 * h - i;\n  if ((i & 0x01) != 0) {\n    f = 1 - f;\n  }\n  n = wh + f * (v - wh);  // linear interpolation\n\n  switch (i) {\n    default:\n    case 6:\n    case 0: r = v; g = n; b = wh; break;\n    case 1: r = n; g = v; b = wh; break;\n    case 2: r = wh; g = v; b = n; break;\n    case 3: r = wh; g = n; b = v; break;\n    case 4: r = n; g = wh; b = v; break;\n    case 5: r = v; g = wh; b = n; break;\n  }\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction hwb2hsl(args) {\n  return rgb2hsl(hwb2rgb(args));\n}\n\nfunction hwb2hsv(args) {\n  return rgb2hsv(hwb2rgb(args));\n}\n\nfunction hwb2cmyk(args) {\n  return rgb2cmyk(hwb2rgb(args));\n}\n\nfunction hwb2keyword(args) {\n  return rgb2keyword(hwb2rgb(args));\n}\n\nfunction cmyk2rgb(cmyk) {\n  var c = cmyk[0] / 100,\n      m = cmyk[1] / 100,\n      y = cmyk[2] / 100,\n      k = cmyk[3] / 100,\n      r, g, b;\n\n  r = 1 - Math.min(1, c * (1 - k) + k);\n  g = 1 - Math.min(1, m * (1 - k) + k);\n  b = 1 - Math.min(1, y * (1 - k) + k);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction cmyk2hsl(args) {\n  return rgb2hsl(cmyk2rgb(args));\n}\n\nfunction cmyk2hsv(args) {\n  return rgb2hsv(cmyk2rgb(args));\n}\n\nfunction cmyk2hwb(args) {\n  return rgb2hwb(cmyk2rgb(args));\n}\n\nfunction cmyk2keyword(args) {\n  return rgb2keyword(cmyk2rgb(args));\n}\n\n\nfunction xyz2rgb(xyz) {\n  var x = xyz[0] / 100,\n      y = xyz[1] / 100,\n      z = xyz[2] / 100,\n      r, g, b;\n\n  r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n  g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n  b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n  // assume sRGB\n  r = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n    : r = (r * 12.92);\n\n  g = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n    : g = (g * 12.92);\n\n  b = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n    : b = (b * 12.92);\n\n  r = Math.min(Math.max(0, r), 1);\n  g = Math.min(Math.max(0, g), 1);\n  b = Math.min(Math.max(0, b), 1);\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction xyz2lab(xyz) {\n  var x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction xyz2lch(args) {\n  return lab2lch(xyz2lab(args));\n}\n\nfunction lab2xyz(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      x, y, z, y2;\n\n  if (l <= 8) {\n    y = (l * 100) / 903.3;\n    y2 = (7.787 * (y / 100)) + (16 / 116);\n  } else {\n    y = 100 * Math.pow((l + 16) / 116, 3);\n    y2 = Math.pow(y / 100, 1/3);\n  }\n\n  x = x / 95.047 <= 0.008856 ? x = (95.047 * ((a / 500) + y2 - (16 / 116))) / 7.787 : 95.047 * Math.pow((a / 500) + y2, 3);\n\n  z = z / 108.883 <= 0.008859 ? z = (108.883 * (y2 - (b / 200) - (16 / 116))) / 7.787 : 108.883 * Math.pow(y2 - (b / 200), 3);\n\n  return [x, y, z];\n}\n\nfunction lab2lch(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      hr, h, c;\n\n  hr = Math.atan2(b, a);\n  h = hr * 360 / 2 / Math.PI;\n  if (h < 0) {\n    h += 360;\n  }\n  c = Math.sqrt(a * a + b * b);\n  return [l, c, h];\n}\n\nfunction lab2rgb(args) {\n  return xyz2rgb(lab2xyz(args));\n}\n\nfunction lch2lab(lch) {\n  var l = lch[0],\n      c = lch[1],\n      h = lch[2],\n      a, b, hr;\n\n  hr = h / 360 * 2 * Math.PI;\n  a = c * Math.cos(hr);\n  b = c * Math.sin(hr);\n  return [l, a, b];\n}\n\nfunction lch2xyz(args) {\n  return lab2xyz(lch2lab(args));\n}\n\nfunction lch2rgb(args) {\n  return lab2rgb(lch2lab(args));\n}\n\nfunction keyword2rgb(keyword) {\n  return cssKeywords[keyword];\n}\n\nfunction keyword2hsl(args) {\n  return rgb2hsl(keyword2rgb(args));\n}\n\nfunction keyword2hsv(args) {\n  return rgb2hsv(keyword2rgb(args));\n}\n\nfunction keyword2hwb(args) {\n  return rgb2hwb(keyword2rgb(args));\n}\n\nfunction keyword2cmyk(args) {\n  return rgb2cmyk(keyword2rgb(args));\n}\n\nfunction keyword2lab(args) {\n  return rgb2lab(keyword2rgb(args));\n}\n\nfunction keyword2xyz(args) {\n  return rgb2xyz(keyword2rgb(args));\n}\n\nvar cssKeywords = {\n  aliceblue:  [240,248,255],\n  antiquewhite: [250,235,215],\n  aqua: [0,255,255],\n  aquamarine: [127,255,212],\n  azure:  [240,255,255],\n  beige:  [245,245,220],\n  bisque: [255,228,196],\n  black:  [0,0,0],\n  blanchedalmond: [255,235,205],\n  blue: [0,0,255],\n  blueviolet: [138,43,226],\n  brown:  [165,42,42],\n  burlywood:  [222,184,135],\n  cadetblue:  [95,158,160],\n  chartreuse: [127,255,0],\n  chocolate:  [210,105,30],\n  coral:  [255,127,80],\n  cornflowerblue: [100,149,237],\n  cornsilk: [255,248,220],\n  crimson:  [220,20,60],\n  cyan: [0,255,255],\n  darkblue: [0,0,139],\n  darkcyan: [0,139,139],\n  darkgoldenrod:  [184,134,11],\n  darkgray: [169,169,169],\n  darkgreen:  [0,100,0],\n  darkgrey: [169,169,169],\n  darkkhaki:  [189,183,107],\n  darkmagenta:  [139,0,139],\n  darkolivegreen: [85,107,47],\n  darkorange: [255,140,0],\n  darkorchid: [153,50,204],\n  darkred:  [139,0,0],\n  darksalmon: [233,150,122],\n  darkseagreen: [143,188,143],\n  darkslateblue:  [72,61,139],\n  darkslategray:  [47,79,79],\n  darkslategrey:  [47,79,79],\n  darkturquoise:  [0,206,209],\n  darkviolet: [148,0,211],\n  deeppink: [255,20,147],\n  deepskyblue:  [0,191,255],\n  dimgray:  [105,105,105],\n  dimgrey:  [105,105,105],\n  dodgerblue: [30,144,255],\n  firebrick:  [178,34,34],\n  floralwhite:  [255,250,240],\n  forestgreen:  [34,139,34],\n  fuchsia:  [255,0,255],\n  gainsboro:  [220,220,220],\n  ghostwhite: [248,248,255],\n  gold: [255,215,0],\n  goldenrod:  [218,165,32],\n  gray: [128,128,128],\n  green:  [0,128,0],\n  greenyellow:  [173,255,47],\n  grey: [128,128,128],\n  honeydew: [240,255,240],\n  hotpink:  [255,105,180],\n  indianred:  [205,92,92],\n  indigo: [75,0,130],\n  ivory:  [255,255,240],\n  khaki:  [240,230,140],\n  lavender: [230,230,250],\n  lavenderblush:  [255,240,245],\n  lawngreen:  [124,252,0],\n  lemonchiffon: [255,250,205],\n  lightblue:  [173,216,230],\n  lightcoral: [240,128,128],\n  lightcyan:  [224,255,255],\n  lightgoldenrodyellow: [250,250,210],\n  lightgray:  [211,211,211],\n  lightgreen: [144,238,144],\n  lightgrey:  [211,211,211],\n  lightpink:  [255,182,193],\n  lightsalmon:  [255,160,122],\n  lightseagreen:  [32,178,170],\n  lightskyblue: [135,206,250],\n  lightslategray: [119,136,153],\n  lightslategrey: [119,136,153],\n  lightsteelblue: [176,196,222],\n  lightyellow:  [255,255,224],\n  lime: [0,255,0],\n  limegreen:  [50,205,50],\n  linen:  [250,240,230],\n  magenta:  [255,0,255],\n  maroon: [128,0,0],\n  mediumaquamarine: [102,205,170],\n  mediumblue: [0,0,205],\n  mediumorchid: [186,85,211],\n  mediumpurple: [147,112,219],\n  mediumseagreen: [60,179,113],\n  mediumslateblue:  [123,104,238],\n  mediumspringgreen:  [0,250,154],\n  mediumturquoise:  [72,209,204],\n  mediumvioletred:  [199,21,133],\n  midnightblue: [25,25,112],\n  mintcream:  [245,255,250],\n  mistyrose:  [255,228,225],\n  moccasin: [255,228,181],\n  navajowhite:  [255,222,173],\n  navy: [0,0,128],\n  oldlace:  [253,245,230],\n  olive:  [128,128,0],\n  olivedrab:  [107,142,35],\n  orange: [255,165,0],\n  orangered:  [255,69,0],\n  orchid: [218,112,214],\n  palegoldenrod:  [238,232,170],\n  palegreen:  [152,251,152],\n  paleturquoise:  [175,238,238],\n  palevioletred:  [219,112,147],\n  papayawhip: [255,239,213],\n  peachpuff:  [255,218,185],\n  peru: [205,133,63],\n  pink: [255,192,203],\n  plum: [221,160,221],\n  powderblue: [176,224,230],\n  purple: [128,0,128],\n  rebeccapurple: [102, 51, 153],\n  red:  [255,0,0],\n  rosybrown:  [188,143,143],\n  royalblue:  [65,105,225],\n  saddlebrown:  [139,69,19],\n  salmon: [250,128,114],\n  sandybrown: [244,164,96],\n  seagreen: [46,139,87],\n  seashell: [255,245,238],\n  sienna: [160,82,45],\n  silver: [192,192,192],\n  skyblue:  [135,206,235],\n  slateblue:  [106,90,205],\n  slategray:  [112,128,144],\n  slategrey:  [112,128,144],\n  snow: [255,250,250],\n  springgreen:  [0,255,127],\n  steelblue:  [70,130,180],\n  tan:  [210,180,140],\n  teal: [0,128,128],\n  thistle:  [216,191,216],\n  tomato: [255,99,71],\n  turquoise:  [64,224,208],\n  violet: [238,130,238],\n  wheat:  [245,222,179],\n  white:  [255,255,255],\n  whitesmoke: [245,245,245],\n  yellow: [255,255,0],\n  yellowgreen:  [154,205,50]\n};\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n  reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n}\n\nvar convert = function() {\n   return new Converter();\n};\n\nfor (var func in conversions) {\n  // export Raw versions\n  convert[func + \"Raw\"] =  (function(func) {\n    // accept array or plain args\n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      return conversions[func](arg);\n    }\n  })(func);\n\n  var pair = /(\\w+)2(\\w+)/.exec(func),\n      from = pair[1],\n      to = pair[2];\n\n  // export rgb2hsl and [\"rgb\"][\"hsl\"]\n  convert[from] = convert[from] || {};\n\n  convert[from][to] = convert[func] = (function(func) { \n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      \n      var val = conversions[func](arg);\n      if (typeof val == \"string\" || val === undefined)\n        return val; // keyword\n\n      for (var i = 0; i < val.length; i++)\n        val[i] = Math.round(val[i]);\n      return val;\n    }\n  })(func);\n}\n\n\n/* Converter does lazy conversion and caching */\nvar Converter = function() {\n   this.convs = {};\n};\n\n/* Either get the values for a space or\n  set the values for a space, depending on args */\nConverter.prototype.routeSpace = function(space, args) {\n   var values = args[0];\n   if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n   }\n   // color.rgb(10, 10, 10)\n   if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);        \n   }\n\n   return this.setValues(space, values);\n};\n  \n/* Set the values for a space, invalidating cache */\nConverter.prototype.setValues = function(space, values) {\n   this.space = space;\n   this.convs = {};\n   this.convs[space] = values;\n   return this;\n};\n\n/* Get the values for a space. If there's already\n  a conversion for the space, fetch it, otherwise\n  compute it */\nConverter.prototype.getValues = function(space) {\n   var vals = this.convs[space];\n   if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n\n      this.convs[space] = vals;\n   }\n  return vals;\n};\n\n[\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function(space) {\n   Converter.prototype[space] = function(vals) {\n      return this.routeSpace(space, arguments);\n   };\n});\n\nvar colorConvert = convert;\n\nvar colorName = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\n\n/* MIT license */\n\n\nvar colorString = {\n   getRgba: getRgba,\n   getHsla: getHsla,\n   getRgb: getRgb,\n   getHsl: getHsl,\n   getHwb: getHwb,\n   getAlpha: getAlpha,\n\n   hexString: hexString,\n   rgbString: rgbString,\n   rgbaString: rgbaString,\n   percentString: percentString,\n   percentaString: percentaString,\n   hslString: hslString,\n   hslaString: hslaString,\n   hwbString: hwbString,\n   keyword: keyword\n};\n\nfunction getRgba(string) {\n   if (!string) {\n      return;\n   }\n   var abbr =  /^#([a-fA-F0-9]{3,4})$/i,\n       hex =  /^#([a-fA-F0-9]{6}([a-fA-F0-9]{2})?)$/i,\n       rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n       per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n       keyword = /(\\w+)/;\n\n   var rgb = [0, 0, 0],\n       a = 1,\n       match = string.match(abbr),\n       hexAlpha = \"\";\n   if (match) {\n      match = match[1];\n      hexAlpha = match[3];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n      if (hexAlpha) {\n         a = Math.round((parseInt(hexAlpha + hexAlpha, 16) / 255) * 100) / 100;\n      }\n   }\n   else if (match = string.match(hex)) {\n      hexAlpha = match[2];\n      match = match[1];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n      if (hexAlpha) {\n         a = Math.round((parseInt(hexAlpha, 16) / 255) * 100) / 100;\n      }\n   }\n   else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i + 1]);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n         return [0, 0, 0, 0];\n      }\n      rgb = colorName[match[1]];\n      if (!rgb) {\n         return;\n      }\n   }\n\n   for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n   }\n   if (!a && a != 0) {\n      a = 1;\n   }\n   else {\n      a = scale(a, 0, 1);\n   }\n   rgb[3] = a;\n   return rgb;\n}\n\nfunction getHsla(string) {\n   if (!string) {\n      return;\n   }\n   var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hsl);\n   if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n   }\n}\n\nfunction getHwb(string) {\n   if (!string) {\n      return;\n   }\n   var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hwb);\n   if (match) {\n    var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n   }\n}\n\nfunction getRgb(string) {\n   var rgba = getRgba(string);\n   return rgba && rgba.slice(0, 3);\n}\n\nfunction getHsl(string) {\n  var hsla = getHsla(string);\n  return hsla && hsla.slice(0, 3);\n}\n\nfunction getAlpha(string) {\n   var vals = getRgba(string);\n   if (vals) {\n      return vals[3];\n   }\n   else if (vals = getHsla(string)) {\n      return vals[3];\n   }\n   else if (vals = getHwb(string)) {\n      return vals[3];\n   }\n}\n\n// generators\nfunction hexString(rgba, a) {\n   var a = (a !== undefined && rgba.length === 3) ? a : rgba[3];\n   return \"#\" + hexDouble(rgba[0]) \n              + hexDouble(rgba[1])\n              + hexDouble(rgba[2])\n              + (\n                 (a >= 0 && a < 1)\n                 ? hexDouble(Math.round(a * 255))\n                 : \"\"\n              );\n}\n\nfunction rgbString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return rgbaString(rgba, alpha);\n   }\n   return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n}\n\nfunction rgbaString(rgba, alpha) {\n   if (alpha === undefined) {\n      alpha = (rgba[3] !== undefined ? rgba[3] : 1);\n   }\n   return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2]\n           + \", \" + alpha + \")\";\n}\n\nfunction percentString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return percentaString(rgba, alpha);\n   }\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n\n   return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n}\n\nfunction percentaString(rgba, alpha) {\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n   return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n}\n\nfunction hslString(hsla, alpha) {\n   if (alpha < 1 || (hsla[3] && hsla[3] < 1)) {\n      return hslaString(hsla, alpha);\n   }\n   return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n}\n\nfunction hslaString(hsla, alpha) {\n   if (alpha === undefined) {\n      alpha = (hsla[3] !== undefined ? hsla[3] : 1);\n   }\n   return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \"\n           + alpha + \")\";\n}\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\nfunction hwbString(hwb, alpha) {\n   if (alpha === undefined) {\n      alpha = (hwb[3] !== undefined ? hwb[3] : 1);\n   }\n   return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\"\n           + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n}\n\nfunction keyword(rgb) {\n  return reverseNames[rgb.slice(0, 3)];\n}\n\n// helpers\nfunction scale(num, min, max) {\n   return Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n  var str = num.toString(16).toUpperCase();\n  return (str.length < 2) ? \"0\" + str : str;\n}\n\n\n//create a list of reverse color names\nvar reverseNames = {};\nfor (var name in colorName) {\n   reverseNames[colorName[name]] = name;\n}\n\n/* MIT license */\n\n\n\nvar Color = function (obj) {\n\tif (obj instanceof Color) {\n\t\treturn obj;\n\t}\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(obj);\n\t}\n\n\tthis.valid = false;\n\tthis.values = {\n\t\trgb: [0, 0, 0],\n\t\thsl: [0, 0, 0],\n\t\thsv: [0, 0, 0],\n\t\thwb: [0, 0, 0],\n\t\tcmyk: [0, 0, 0, 0],\n\t\talpha: 1\n\t};\n\n\t// parse Color() argument\n\tvar vals;\n\tif (typeof obj === 'string') {\n\t\tvals = colorString.getRgba(obj);\n\t\tif (vals) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals = colorString.getHsla(obj)) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals = colorString.getHwb(obj)) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t}\n\t} else if (typeof obj === 'object') {\n\t\tvals = obj;\n\t\tif (vals.r !== undefined || vals.red !== undefined) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals.l !== undefined || vals.lightness !== undefined) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals.v !== undefined || vals.value !== undefined) {\n\t\t\tthis.setValues('hsv', vals);\n\t\t} else if (vals.w !== undefined || vals.whiteness !== undefined) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t} else if (vals.c !== undefined || vals.cyan !== undefined) {\n\t\t\tthis.setValues('cmyk', vals);\n\t\t}\n\t}\n};\n\nColor.prototype = {\n\tisValid: function () {\n\t\treturn this.valid;\n\t},\n\trgb: function () {\n\t\treturn this.setSpace('rgb', arguments);\n\t},\n\thsl: function () {\n\t\treturn this.setSpace('hsl', arguments);\n\t},\n\thsv: function () {\n\t\treturn this.setSpace('hsv', arguments);\n\t},\n\thwb: function () {\n\t\treturn this.setSpace('hwb', arguments);\n\t},\n\tcmyk: function () {\n\t\treturn this.setSpace('cmyk', arguments);\n\t},\n\n\trgbArray: function () {\n\t\treturn this.values.rgb;\n\t},\n\thslArray: function () {\n\t\treturn this.values.hsl;\n\t},\n\thsvArray: function () {\n\t\treturn this.values.hsv;\n\t},\n\thwbArray: function () {\n\t\tvar values = this.values;\n\t\tif (values.alpha !== 1) {\n\t\t\treturn values.hwb.concat([values.alpha]);\n\t\t}\n\t\treturn values.hwb;\n\t},\n\tcmykArray: function () {\n\t\treturn this.values.cmyk;\n\t},\n\trgbaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.rgb.concat([values.alpha]);\n\t},\n\thslaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.hsl.concat([values.alpha]);\n\t},\n\talpha: function (val) {\n\t\tif (val === undefined) {\n\t\t\treturn this.values.alpha;\n\t\t}\n\t\tthis.setValues('alpha', val);\n\t\treturn this;\n\t},\n\n\tred: function (val) {\n\t\treturn this.setChannel('rgb', 0, val);\n\t},\n\tgreen: function (val) {\n\t\treturn this.setChannel('rgb', 1, val);\n\t},\n\tblue: function (val) {\n\t\treturn this.setChannel('rgb', 2, val);\n\t},\n\thue: function (val) {\n\t\tif (val) {\n\t\t\tval %= 360;\n\t\t\tval = val < 0 ? 360 + val : val;\n\t\t}\n\t\treturn this.setChannel('hsl', 0, val);\n\t},\n\tsaturation: function (val) {\n\t\treturn this.setChannel('hsl', 1, val);\n\t},\n\tlightness: function (val) {\n\t\treturn this.setChannel('hsl', 2, val);\n\t},\n\tsaturationv: function (val) {\n\t\treturn this.setChannel('hsv', 1, val);\n\t},\n\twhiteness: function (val) {\n\t\treturn this.setChannel('hwb', 1, val);\n\t},\n\tblackness: function (val) {\n\t\treturn this.setChannel('hwb', 2, val);\n\t},\n\tvalue: function (val) {\n\t\treturn this.setChannel('hsv', 2, val);\n\t},\n\tcyan: function (val) {\n\t\treturn this.setChannel('cmyk', 0, val);\n\t},\n\tmagenta: function (val) {\n\t\treturn this.setChannel('cmyk', 1, val);\n\t},\n\tyellow: function (val) {\n\t\treturn this.setChannel('cmyk', 2, val);\n\t},\n\tblack: function (val) {\n\t\treturn this.setChannel('cmyk', 3, val);\n\t},\n\n\thexString: function () {\n\t\treturn colorString.hexString(this.values.rgb);\n\t},\n\trgbString: function () {\n\t\treturn colorString.rgbString(this.values.rgb, this.values.alpha);\n\t},\n\trgbaString: function () {\n\t\treturn colorString.rgbaString(this.values.rgb, this.values.alpha);\n\t},\n\tpercentString: function () {\n\t\treturn colorString.percentString(this.values.rgb, this.values.alpha);\n\t},\n\thslString: function () {\n\t\treturn colorString.hslString(this.values.hsl, this.values.alpha);\n\t},\n\thslaString: function () {\n\t\treturn colorString.hslaString(this.values.hsl, this.values.alpha);\n\t},\n\thwbString: function () {\n\t\treturn colorString.hwbString(this.values.hwb, this.values.alpha);\n\t},\n\tkeyword: function () {\n\t\treturn colorString.keyword(this.values.rgb, this.values.alpha);\n\t},\n\n\trgbNumber: function () {\n\t\tvar rgb = this.values.rgb;\n\t\treturn (rgb[0] << 16) | (rgb[1] << 8) | rgb[2];\n\t},\n\n\tluminosity: function () {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tvar rgb = this.values.rgb;\n\t\tvar lum = [];\n\t\tfor (var i = 0; i < rgb.length; i++) {\n\t\t\tvar chan = rgb[i] / 255;\n\t\t\tlum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\n\t\t}\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast: function (color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tvar lum1 = this.luminosity();\n\t\tvar lum2 = color2.luminosity();\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel: function (color2) {\n\t\tvar contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7.1) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tdark: function () {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tvar rgb = this.values.rgb;\n\t\tvar yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n\t\treturn yiq < 128;\n\t},\n\n\tlight: function () {\n\t\treturn !this.dark();\n\t},\n\n\tnegate: function () {\n\t\tvar rgb = [];\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\trgb[i] = 255 - this.values.rgb[i];\n\t\t}\n\t\tthis.setValues('rgb', rgb);\n\t\treturn this;\n\t},\n\n\tlighten: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] += hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdarken: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] -= hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tsaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] += hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdesaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] -= hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\twhiten: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[1] += hwb[1] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tblacken: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[2] += hwb[2] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tgreyscale: function () {\n\t\tvar rgb = this.values.rgb;\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tvar val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\tthis.setValues('rgb', [val, val, val]);\n\t\treturn this;\n\t},\n\n\tclearer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha - (alpha * ratio));\n\t\treturn this;\n\t},\n\n\topaquer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha + (alpha * ratio));\n\t\treturn this;\n\t},\n\n\trotate: function (degrees) {\n\t\tvar hsl = this.values.hsl;\n\t\tvar hue = (hsl[0] + degrees) % 360;\n\t\thsl[0] = hue < 0 ? 360 + hue : hue;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\t/**\n\t * Ported from sass implementation in C\n\t * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t */\n\tmix: function (mixinColor, weight) {\n\t\tvar color1 = this;\n\t\tvar color2 = mixinColor;\n\t\tvar p = weight === undefined ? 0.5 : weight;\n\n\t\tvar w = 2 * p - 1;\n\t\tvar a = color1.alpha() - color2.alpha();\n\n\t\tvar w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\tvar w2 = 1 - w1;\n\n\t\treturn this\n\t\t\t.rgb(\n\t\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\t\tw1 * color1.blue() + w2 * color2.blue()\n\t\t\t)\n\t\t\t.alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n\t},\n\n\ttoJSON: function () {\n\t\treturn this.rgb();\n\t},\n\n\tclone: function () {\n\t\t// NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n\t\t// making the final build way to big to embed in Chart.js. So let's do it manually,\n\t\t// assuming that values to clone are 1 dimension arrays containing only numbers,\n\t\t// except 'alpha' which is a number.\n\t\tvar result = new Color();\n\t\tvar source = this.values;\n\t\tvar target = result.values;\n\t\tvar value, type;\n\n\t\tfor (var prop in source) {\n\t\t\tif (source.hasOwnProperty(prop)) {\n\t\t\t\tvalue = source[prop];\n\t\t\t\ttype = ({}).toString.call(value);\n\t\t\t\tif (type === '[object Array]') {\n\t\t\t\t\ttarget[prop] = value.slice(0);\n\t\t\t\t} else if (type === '[object Number]') {\n\t\t\t\t\ttarget[prop] = value;\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error('unexpected color value:', value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n};\n\nColor.prototype.spaces = {\n\trgb: ['red', 'green', 'blue'],\n\thsl: ['hue', 'saturation', 'lightness'],\n\thsv: ['hue', 'saturation', 'value'],\n\thwb: ['hue', 'whiteness', 'blackness'],\n\tcmyk: ['cyan', 'magenta', 'yellow', 'black']\n};\n\nColor.prototype.maxes = {\n\trgb: [255, 255, 255],\n\thsl: [360, 100, 100],\n\thsv: [360, 100, 100],\n\thwb: [360, 100, 100],\n\tcmyk: [100, 100, 100, 100]\n};\n\nColor.prototype.getValues = function (space) {\n\tvar values = this.values;\n\tvar vals = {};\n\n\tfor (var i = 0; i < space.length; i++) {\n\t\tvals[space.charAt(i)] = values[space][i];\n\t}\n\n\tif (values.alpha !== 1) {\n\t\tvals.a = values.alpha;\n\t}\n\n\t// {r: 255, g: 255, b: 255, a: 0.4}\n\treturn vals;\n};\n\nColor.prototype.setValues = function (space, vals) {\n\tvar values = this.values;\n\tvar spaces = this.spaces;\n\tvar maxes = this.maxes;\n\tvar alpha = 1;\n\tvar i;\n\n\tthis.valid = true;\n\n\tif (space === 'alpha') {\n\t\talpha = vals;\n\t} else if (vals.length) {\n\t\t// [10, 10, 10]\n\t\tvalues[space] = vals.slice(0, space.length);\n\t\talpha = vals[space.length];\n\t} else if (vals[space.charAt(0)] !== undefined) {\n\t\t// {r: 10, g: 10, b: 10}\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[space.charAt(i)];\n\t\t}\n\n\t\talpha = vals.a;\n\t} else if (vals[spaces[space][0]] !== undefined) {\n\t\t// {red: 10, green: 10, blue: 10}\n\t\tvar chans = spaces[space];\n\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[chans[i]];\n\t\t}\n\n\t\talpha = vals.alpha;\n\t}\n\n\tvalues.alpha = Math.max(0, Math.min(1, (alpha === undefined ? values.alpha : alpha)));\n\n\tif (space === 'alpha') {\n\t\treturn false;\n\t}\n\n\tvar capped;\n\n\t// cap values of the space prior converting all values\n\tfor (i = 0; i < space.length; i++) {\n\t\tcapped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n\t\tvalues[space][i] = Math.round(capped);\n\t}\n\n\t// convert to all the other color spaces\n\tfor (var sname in spaces) {\n\t\tif (sname !== space) {\n\t\t\tvalues[sname] = colorConvert[space][sname](values[space]);\n\t\t}\n\t}\n\n\treturn true;\n};\n\nColor.prototype.setSpace = function (space, args) {\n\tvar vals = args[0];\n\n\tif (vals === undefined) {\n\t\t// color.rgb()\n\t\treturn this.getValues(space);\n\t}\n\n\t// color.rgb(10, 10, 10)\n\tif (typeof vals === 'number') {\n\t\tvals = Array.prototype.slice.call(args);\n\t}\n\n\tthis.setValues(space, vals);\n\treturn this;\n};\n\nColor.prototype.setChannel = function (space, index, val) {\n\tvar svalues = this.values[space];\n\tif (val === undefined) {\n\t\t// color.red()\n\t\treturn svalues[index];\n\t} else if (val === svalues[index]) {\n\t\t// color.red(color.red())\n\t\treturn this;\n\t}\n\n\t// color.red(100)\n\tsvalues[index] = val;\n\tthis.setValues(space, svalues);\n\n\treturn this;\n};\n\nif (typeof window !== 'undefined') {\n\twindow.Color = Color;\n}\n\nvar chartjsColor = Color;\n\n/**\n * @namespace Chart.helpers\n */\nvar helpers = {\n\t/**\n\t * An empty function that can be used, for example, for optional callback.\n\t */\n\tnoop: function() {},\n\n\t/**\n\t * Returns a unique id, sequentially generated from a global variable.\n\t * @returns {number}\n\t * @function\n\t */\n\tuid: (function() {\n\t\tvar id = 0;\n\t\treturn function() {\n\t\t\treturn id++;\n\t\t};\n\t}()),\n\n\t/**\n\t * Returns true if `value` is neither null nor undefined, else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {boolean}\n\t * @since 2.7.0\n\t */\n\tisNullOrUndef: function(value) {\n\t\treturn value === null || typeof value === 'undefined';\n\t},\n\n\t/**\n\t * Returns true if `value` is an array (including typed arrays), else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {boolean}\n\t * @function\n\t */\n\tisArray: function(value) {\n\t\tif (Array.isArray && Array.isArray(value)) {\n\t\t\treturn true;\n\t\t}\n\t\tvar type = Object.prototype.toString.call(value);\n\t\tif (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\t/**\n\t * Returns true if `value` is an object (excluding null), else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {boolean}\n\t * @since 2.7.0\n\t */\n\tisObject: function(value) {\n\t\treturn value !== null && Object.prototype.toString.call(value) === '[object Object]';\n\t},\n\n\t/**\n\t * Returns true if `value` is a finite number, else returns false\n\t * @param {*} value  - The value to test.\n\t * @returns {boolean}\n\t */\n\tisFinite: function(value) {\n\t\treturn (typeof value === 'number' || value instanceof Number) && isFinite(value);\n\t},\n\n\t/**\n\t * Returns `value` if defined, else returns `defaultValue`.\n\t * @param {*} value - The value to return if defined.\n\t * @param {*} defaultValue - The value to return if `value` is undefined.\n\t * @returns {*}\n\t */\n\tvalueOrDefault: function(value, defaultValue) {\n\t\treturn typeof value === 'undefined' ? defaultValue : value;\n\t},\n\n\t/**\n\t * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n\t * @param {Array} value - The array to lookup for value at `index`.\n\t * @param {number} index - The index in `value` to lookup for value.\n\t * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n\t * @returns {*}\n\t */\n\tvalueAtIndexOrDefault: function(value, index, defaultValue) {\n\t\treturn helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n\t},\n\n\t/**\n\t * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n\t * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n\t * @param {function} fn - The function to call.\n\t * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n\t * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n\t * @returns {*}\n\t */\n\tcallback: function(fn, args, thisArg) {\n\t\tif (fn && typeof fn.call === 'function') {\n\t\t\treturn fn.apply(thisArg, args);\n\t\t}\n\t},\n\n\t/**\n\t * Note(SB) for performance sake, this method should only be used when loopable type\n\t * is unknown or in none intensive code (not called often and small loopable). Else\n\t * it's preferable to use a regular for() loop and save extra function calls.\n\t * @param {object|Array} loopable - The object or array to be iterated.\n\t * @param {function} fn - The function to call for each item.\n\t * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n\t * @param {boolean} [reverse] - If true, iterates backward on the loopable.\n\t */\n\teach: function(loopable, fn, thisArg, reverse) {\n\t\tvar i, len, keys;\n\t\tif (helpers.isArray(loopable)) {\n\t\t\tlen = loopable.length;\n\t\t\tif (reverse) {\n\t\t\t\tfor (i = len - 1; i >= 0; i--) {\n\t\t\t\t\tfn.call(thisArg, loopable[i], i);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tfn.call(thisArg, loopable[i], i);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (helpers.isObject(loopable)) {\n\t\t\tkeys = Object.keys(loopable);\n\t\t\tlen = keys.length;\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tfn.call(thisArg, loopable[keys[i]], keys[i]);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n\t * @see https://stackoverflow.com/a/14853974\n\t * @param {Array} a0 - The array to compare\n\t * @param {Array} a1 - The array to compare\n\t * @returns {boolean}\n\t */\n\tarrayEquals: function(a0, a1) {\n\t\tvar i, ilen, v0, v1;\n\n\t\tif (!a0 || !a1 || a0.length !== a1.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (i = 0, ilen = a0.length; i < ilen; ++i) {\n\t\t\tv0 = a0[i];\n\t\t\tv1 = a1[i];\n\n\t\t\tif (v0 instanceof Array && v1 instanceof Array) {\n\t\t\t\tif (!helpers.arrayEquals(v0, v1)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else if (v0 !== v1) {\n\t\t\t\t// NOTE: two different object instances will never be equal: {x:20} != {x:20}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns a deep copy of `source` without keeping references on objects and arrays.\n\t * @param {*} source - The value to clone.\n\t * @returns {*}\n\t */\n\tclone: function(source) {\n\t\tif (helpers.isArray(source)) {\n\t\t\treturn source.map(helpers.clone);\n\t\t}\n\n\t\tif (helpers.isObject(source)) {\n\t\t\tvar target = {};\n\t\t\tvar keys = Object.keys(source);\n\t\t\tvar klen = keys.length;\n\t\t\tvar k = 0;\n\n\t\t\tfor (; k < klen; ++k) {\n\t\t\t\ttarget[keys[k]] = helpers.clone(source[keys[k]]);\n\t\t\t}\n\n\t\t\treturn target;\n\t\t}\n\n\t\treturn source;\n\t},\n\n\t/**\n\t * The default merger when Chart.helpers.merge is called without merger option.\n\t * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n\t * @private\n\t */\n\t_merger: function(key, target, source, options) {\n\t\tvar tval = target[key];\n\t\tvar sval = source[key];\n\n\t\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\n\t\t\thelpers.merge(tval, sval, options);\n\t\t} else {\n\t\t\ttarget[key] = helpers.clone(sval);\n\t\t}\n\t},\n\n\t/**\n\t * Merges source[key] in target[key] only if target[key] is undefined.\n\t * @private\n\t */\n\t_mergerIf: function(key, target, source) {\n\t\tvar tval = target[key];\n\t\tvar sval = source[key];\n\n\t\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\n\t\t\thelpers.mergeIf(tval, sval);\n\t\t} else if (!target.hasOwnProperty(key)) {\n\t\t\ttarget[key] = helpers.clone(sval);\n\t\t}\n\t},\n\n\t/**\n\t * Recursively deep copies `source` properties into `target` with the given `options`.\n\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n\t * @param {object} target - The target object in which all sources are merged into.\n\t * @param {object|object[]} source - Object(s) to merge into `target`.\n\t * @param {object} [options] - Merging options:\n\t * @param {function} [options.merger] - The merge method (key, target, source, options)\n\t * @returns {object} The `target` object.\n\t */\n\tmerge: function(target, source, options) {\n\t\tvar sources = helpers.isArray(source) ? source : [source];\n\t\tvar ilen = sources.length;\n\t\tvar merge, i, keys, klen, k;\n\n\t\tif (!helpers.isObject(target)) {\n\t\t\treturn target;\n\t\t}\n\n\t\toptions = options || {};\n\t\tmerge = options.merger || helpers._merger;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tsource = sources[i];\n\t\t\tif (!helpers.isObject(source)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tkeys = Object.keys(source);\n\t\t\tfor (k = 0, klen = keys.length; k < klen; ++k) {\n\t\t\t\tmerge(keys[k], target, source, options);\n\t\t\t}\n\t\t}\n\n\t\treturn target;\n\t},\n\n\t/**\n\t * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n\t * @param {object} target - The target object in which all sources are merged into.\n\t * @param {object|object[]} source - Object(s) to merge into `target`.\n\t * @returns {object} The `target` object.\n\t */\n\tmergeIf: function(target, source) {\n\t\treturn helpers.merge(target, source, {merger: helpers._mergerIf});\n\t},\n\n\t/**\n\t * Applies the contents of two or more objects together into the first object.\n\t * @param {object} target - The target object in which all objects are merged into.\n\t * @param {object} arg1 - Object containing additional properties to merge in target.\n\t * @param {object} argN - Additional objects containing properties to merge in target.\n\t * @returns {object} The `target` object.\n\t */\n\textend: function(target) {\n\t\tvar setFn = function(value, key) {\n\t\t\ttarget[key] = value;\n\t\t};\n\t\tfor (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n\t\t\thelpers.each(arguments[i], setFn);\n\t\t}\n\t\treturn target;\n\t},\n\n\t/**\n\t * Basic javascript inheritance based on the model created in Backbone.js\n\t */\n\tinherits: function(extensions) {\n\t\tvar me = this;\n\t\tvar ChartElement = (extensions && extensions.hasOwnProperty('constructor')) ? extensions.constructor : function() {\n\t\t\treturn me.apply(this, arguments);\n\t\t};\n\n\t\tvar Surrogate = function() {\n\t\t\tthis.constructor = ChartElement;\n\t\t};\n\n\t\tSurrogate.prototype = me.prototype;\n\t\tChartElement.prototype = new Surrogate();\n\t\tChartElement.extend = helpers.inherits;\n\n\t\tif (extensions) {\n\t\t\thelpers.extend(ChartElement.prototype, extensions);\n\t\t}\n\n\t\tChartElement.__super__ = me.prototype;\n\t\treturn ChartElement;\n\t}\n};\n\nvar helpers_core = helpers;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.callback instead.\n * @function Chart.helpers.callCallback\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\nhelpers.callCallback = helpers.callback;\n\n/**\n * Provided for backward compatibility, use Array.prototype.indexOf instead.\n * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n * @function Chart.helpers.indexOf\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.indexOf = function(array, item, fromIndex) {\n\treturn Array.prototype.indexOf.call(array, item, fromIndex);\n};\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n * @function Chart.helpers.getValueOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.getValueOrDefault = helpers.valueOrDefault;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n * @function Chart.helpers.getValueAtIndexOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easingEffects\n * @see http://www.robertpenner.com/easing/\n */\nvar effects = {\n\tlinear: function(t) {\n\t\treturn t;\n\t},\n\n\teaseInQuad: function(t) {\n\t\treturn t * t;\n\t},\n\n\teaseOutQuad: function(t) {\n\t\treturn -t * (t - 2);\n\t},\n\n\teaseInOutQuad: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t;\n\t\t}\n\t\treturn -0.5 * ((--t) * (t - 2) - 1);\n\t},\n\n\teaseInCubic: function(t) {\n\t\treturn t * t * t;\n\t},\n\n\teaseOutCubic: function(t) {\n\t\treturn (t = t - 1) * t * t + 1;\n\t},\n\n\teaseInOutCubic: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t;\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * t + 2);\n\t},\n\n\teaseInQuart: function(t) {\n\t\treturn t * t * t * t;\n\t},\n\n\teaseOutQuart: function(t) {\n\t\treturn -((t = t - 1) * t * t * t - 1);\n\t},\n\n\teaseInOutQuart: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t * t;\n\t\t}\n\t\treturn -0.5 * ((t -= 2) * t * t * t - 2);\n\t},\n\n\teaseInQuint: function(t) {\n\t\treturn t * t * t * t * t;\n\t},\n\n\teaseOutQuint: function(t) {\n\t\treturn (t = t - 1) * t * t * t * t + 1;\n\t},\n\n\teaseInOutQuint: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t * t * t;\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * t * t * t + 2);\n\t},\n\n\teaseInSine: function(t) {\n\t\treturn -Math.cos(t * (Math.PI / 2)) + 1;\n\t},\n\n\teaseOutSine: function(t) {\n\t\treturn Math.sin(t * (Math.PI / 2));\n\t},\n\n\teaseInOutSine: function(t) {\n\t\treturn -0.5 * (Math.cos(Math.PI * t) - 1);\n\t},\n\n\teaseInExpo: function(t) {\n\t\treturn (t === 0) ? 0 : Math.pow(2, 10 * (t - 1));\n\t},\n\n\teaseOutExpo: function(t) {\n\t\treturn (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1;\n\t},\n\n\teaseInOutExpo: function(t) {\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * Math.pow(2, 10 * (t - 1));\n\t\t}\n\t\treturn 0.5 * (-Math.pow(2, -10 * --t) + 2);\n\t},\n\n\teaseInCirc: function(t) {\n\t\tif (t >= 1) {\n\t\t\treturn t;\n\t\t}\n\t\treturn -(Math.sqrt(1 - t * t) - 1);\n\t},\n\n\teaseOutCirc: function(t) {\n\t\treturn Math.sqrt(1 - (t = t - 1) * t);\n\t},\n\n\teaseInOutCirc: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn -0.5 * (Math.sqrt(1 - t * t) - 1);\n\t\t}\n\t\treturn 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n\t},\n\n\teaseInElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.3;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\treturn -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n\t},\n\n\teaseOutElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.3;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\treturn a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n\t},\n\n\teaseInOutElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif ((t /= 0.5) === 2) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.45;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\tif (t < 1) {\n\t\t\treturn -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n\t\t}\n\t\treturn a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\t},\n\teaseInBack: function(t) {\n\t\tvar s = 1.70158;\n\t\treturn t * t * ((s + 1) * t - s);\n\t},\n\n\teaseOutBack: function(t) {\n\t\tvar s = 1.70158;\n\t\treturn (t = t - 1) * t * ((s + 1) * t + s) + 1;\n\t},\n\n\teaseInOutBack: function(t) {\n\t\tvar s = 1.70158;\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n\t},\n\n\teaseInBounce: function(t) {\n\t\treturn 1 - effects.easeOutBounce(1 - t);\n\t},\n\n\teaseOutBounce: function(t) {\n\t\tif (t < (1 / 2.75)) {\n\t\t\treturn 7.5625 * t * t;\n\t\t}\n\t\tif (t < (2 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (1.5 / 2.75)) * t + 0.75;\n\t\t}\n\t\tif (t < (2.5 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375;\n\t\t}\n\t\treturn 7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375;\n\t},\n\n\teaseInOutBounce: function(t) {\n\t\tif (t < 0.5) {\n\t\t\treturn effects.easeInBounce(t * 2) * 0.5;\n\t\t}\n\t\treturn effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n\t}\n};\n\nvar helpers_easing = {\n\teffects: effects\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n * @function Chart.helpers.easingEffects\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers_core.easingEffects = effects;\n\nvar PI = Math.PI;\nvar RAD_PER_DEG = PI / 180;\nvar DOUBLE_PI = PI * 2;\nvar HALF_PI = PI / 2;\nvar QUARTER_PI = PI / 4;\nvar TWO_THIRDS_PI = PI * 2 / 3;\n\n/**\n * @namespace Chart.helpers.canvas\n */\nvar exports$1 = {\n\t/**\n\t * Clears the entire canvas associated to the given `chart`.\n\t * @param {Chart} chart - The chart for which to clear the canvas.\n\t */\n\tclear: function(chart) {\n\t\tchart.ctx.clearRect(0, 0, chart.width, chart.height);\n\t},\n\n\t/**\n\t * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n\t * given size (width, height) and the same `radius` for all corners.\n\t * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n\t * @param {number} x - The x axis of the coordinate for the rectangle starting point.\n\t * @param {number} y - The y axis of the coordinate for the rectangle starting point.\n\t * @param {number} width - The rectangle's width.\n\t * @param {number} height - The rectangle's height.\n\t * @param {number} radius - The rounded amount (in pixels) for the four corners.\n\t * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n\t */\n\troundedRect: function(ctx, x, y, width, height, radius) {\n\t\tif (radius) {\n\t\t\tvar r = Math.min(radius, height / 2, width / 2);\n\t\t\tvar left = x + r;\n\t\t\tvar top = y + r;\n\t\t\tvar right = x + width - r;\n\t\t\tvar bottom = y + height - r;\n\n\t\t\tctx.moveTo(x, top);\n\t\t\tif (left < right && top < bottom) {\n\t\t\t\tctx.arc(left, top, r, -PI, -HALF_PI);\n\t\t\t\tctx.arc(right, top, r, -HALF_PI, 0);\n\t\t\t\tctx.arc(right, bottom, r, 0, HALF_PI);\n\t\t\t\tctx.arc(left, bottom, r, HALF_PI, PI);\n\t\t\t} else if (left < right) {\n\t\t\t\tctx.moveTo(left, y);\n\t\t\t\tctx.arc(right, top, r, -HALF_PI, HALF_PI);\n\t\t\t\tctx.arc(left, top, r, HALF_PI, PI + HALF_PI);\n\t\t\t} else if (top < bottom) {\n\t\t\t\tctx.arc(left, top, r, -PI, 0);\n\t\t\t\tctx.arc(left, bottom, r, 0, PI);\n\t\t\t} else {\n\t\t\t\tctx.arc(left, top, r, -PI, PI);\n\t\t\t}\n\t\t\tctx.closePath();\n\t\t\tctx.moveTo(x, y);\n\t\t} else {\n\t\t\tctx.rect(x, y, width, height);\n\t\t}\n\t},\n\n\tdrawPoint: function(ctx, style, radius, x, y, rotation) {\n\t\tvar type, xOffset, yOffset, size, cornerRadius;\n\t\tvar rad = (rotation || 0) * RAD_PER_DEG;\n\n\t\tif (style && typeof style === 'object') {\n\t\t\ttype = style.toString();\n\t\t\tif (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n\t\t\t\tctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (isNaN(radius) || radius <= 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tctx.beginPath();\n\n\t\tswitch (style) {\n\t\t// Default includes circle\n\t\tdefault:\n\t\t\tctx.arc(x, y, radius, 0, DOUBLE_PI);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'triangle':\n\t\t\tctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n\t\t\trad += TWO_THIRDS_PI;\n\t\t\tctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n\t\t\trad += TWO_THIRDS_PI;\n\t\t\tctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'rectRounded':\n\t\t\t// NOTE: the rounded rect implementation changed to use `arc` instead of\n\t\t\t// `quadraticCurveTo` since it generates better results when rect is\n\t\t\t// almost a circle. 0.516 (instead of 0.5) produces results with visually\n\t\t\t// closer proportion to the previous impl and it is inscribed in the\n\t\t\t// circle with `radius`. For more details, see the following PRs:\n\t\t\t// https://github.com/chartjs/Chart.js/issues/5597\n\t\t\t// https://github.com/chartjs/Chart.js/issues/5858\n\t\t\tcornerRadius = radius * 0.516;\n\t\t\tsize = radius - cornerRadius;\n\t\t\txOffset = Math.cos(rad + QUARTER_PI) * size;\n\t\t\tyOffset = Math.sin(rad + QUARTER_PI) * size;\n\t\t\tctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n\t\t\tctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n\t\t\tctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n\t\t\tctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'rect':\n\t\t\tif (!rotation) {\n\t\t\t\tsize = Math.SQRT1_2 * radius;\n\t\t\t\tctx.rect(x - size, y - size, 2 * size, 2 * size);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\trad += QUARTER_PI;\n\t\t\t/* falls through */\n\t\tcase 'rectRot':\n\t\t\txOffset = Math.cos(rad) * radius;\n\t\t\tyOffset = Math.sin(rad) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + yOffset, y - xOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.lineTo(x - yOffset, y + xOffset);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'crossRot':\n\t\t\trad += QUARTER_PI;\n\t\t\t/* falls through */\n\t\tcase 'cross':\n\t\t\txOffset = Math.cos(rad) * radius;\n\t\t\tyOffset = Math.sin(rad) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x + yOffset, y - xOffset);\n\t\t\tctx.lineTo(x - yOffset, y + xOffset);\n\t\t\tbreak;\n\t\tcase 'star':\n\t\t\txOffset = Math.cos(rad) * radius;\n\t\t\tyOffset = Math.sin(rad) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x + yOffset, y - xOffset);\n\t\t\tctx.lineTo(x - yOffset, y + xOffset);\n\t\t\trad += QUARTER_PI;\n\t\t\txOffset = Math.cos(rad) * radius;\n\t\t\tyOffset = Math.sin(rad) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x + yOffset, y - xOffset);\n\t\t\tctx.lineTo(x - yOffset, y + xOffset);\n\t\t\tbreak;\n\t\tcase 'line':\n\t\t\txOffset = Math.cos(rad) * radius;\n\t\t\tyOffset = Math.sin(rad) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tbreak;\n\t\tcase 'dash':\n\t\t\tctx.moveTo(x, y);\n\t\t\tctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n\t\t\tbreak;\n\t\t}\n\n\t\tctx.fill();\n\t\tctx.stroke();\n\t},\n\n\t/**\n\t * Returns true if the point is inside the rectangle\n\t * @param {object} point - The point to test\n\t * @param {object} area - The rectangle\n\t * @returns {boolean}\n\t * @private\n\t */\n\t_isPointInArea: function(point, area) {\n\t\tvar epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n\n\t\treturn point.x > area.left - epsilon && point.x < area.right + epsilon &&\n\t\t\tpoint.y > area.top - epsilon && point.y < area.bottom + epsilon;\n\t},\n\n\tclipArea: function(ctx, area) {\n\t\tctx.save();\n\t\tctx.beginPath();\n\t\tctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n\t\tctx.clip();\n\t},\n\n\tunclipArea: function(ctx) {\n\t\tctx.restore();\n\t},\n\n\tlineTo: function(ctx, previous, target, flip) {\n\t\tvar stepped = target.steppedLine;\n\t\tif (stepped) {\n\t\t\tif (stepped === 'middle') {\n\t\t\t\tvar midpoint = (previous.x + target.x) / 2.0;\n\t\t\t\tctx.lineTo(midpoint, flip ? target.y : previous.y);\n\t\t\t\tctx.lineTo(midpoint, flip ? previous.y : target.y);\n\t\t\t} else if ((stepped === 'after' && !flip) || (stepped !== 'after' && flip)) {\n\t\t\t\tctx.lineTo(previous.x, target.y);\n\t\t\t} else {\n\t\t\t\tctx.lineTo(target.x, previous.y);\n\t\t\t}\n\t\t\tctx.lineTo(target.x, target.y);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!target.tension) {\n\t\t\tctx.lineTo(target.x, target.y);\n\t\t\treturn;\n\t\t}\n\n\t\tctx.bezierCurveTo(\n\t\t\tflip ? previous.controlPointPreviousX : previous.controlPointNextX,\n\t\t\tflip ? previous.controlPointPreviousY : previous.controlPointNextY,\n\t\t\tflip ? target.controlPointNextX : target.controlPointPreviousX,\n\t\t\tflip ? target.controlPointNextY : target.controlPointPreviousY,\n\t\t\ttarget.x,\n\t\t\ttarget.y);\n\t}\n};\n\nvar helpers_canvas = exports$1;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n * @namespace Chart.helpers.clear\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers_core.clear = exports$1.clear;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n * @namespace Chart.helpers.drawRoundedRectangle\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers_core.drawRoundedRectangle = function(ctx) {\n\tctx.beginPath();\n\texports$1.roundedRect.apply(exports$1, arguments);\n};\n\nvar defaults = {\n\t/**\n\t * @private\n\t */\n\t_set: function(scope, values) {\n\t\treturn helpers_core.merge(this[scope] || (this[scope] = {}), values);\n\t}\n};\n\ndefaults._set('global', {\n\tdefaultColor: 'rgba(0,0,0,0.1)',\n\tdefaultFontColor: '#666',\n\tdefaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\tdefaultFontSize: 12,\n\tdefaultFontStyle: 'normal',\n\tdefaultLineHeight: 1.2,\n\tshowLines: true\n});\n\nvar core_defaults = defaults;\n\nvar valueOrDefault = helpers_core.valueOrDefault;\n\n/**\n * Converts the given font object into a CSS font string.\n * @param {object} font - A font object.\n * @return {string} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nfunction toFontString(font) {\n\tif (!font || helpers_core.isNullOrUndef(font.size) || helpers_core.isNullOrUndef(font.family)) {\n\t\treturn null;\n\t}\n\n\treturn (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\nvar helpers_options = {\n\t/**\n\t * Converts the given line height `value` in pixels for a specific font `size`.\n\t * @param {number|string} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n\t * @param {number} size - The font size (in pixels) used to resolve relative `value`.\n\t * @returns {number} The effective line height in pixels (size * 1.2 if value is invalid).\n\t * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n\t * @since 2.7.0\n\t */\n\ttoLineHeight: function(value, size) {\n\t\tvar matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\t\tif (!matches || matches[1] === 'normal') {\n\t\t\treturn size * 1.2;\n\t\t}\n\n\t\tvalue = +matches[2];\n\n\t\tswitch (matches[3]) {\n\t\tcase 'px':\n\t\t\treturn value;\n\t\tcase '%':\n\t\t\tvalue /= 100;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\n\t\treturn size * value;\n\t},\n\n\t/**\n\t * Converts the given value into a padding object with pre-computed width/height.\n\t * @param {number|object} value - If a number, set the value to all TRBL component,\n\t *  else, if and object, use defined properties and sets undefined ones to 0.\n\t * @returns {object} The padding values (top, right, bottom, left, width, height)\n\t * @since 2.7.0\n\t */\n\ttoPadding: function(value) {\n\t\tvar t, r, b, l;\n\n\t\tif (helpers_core.isObject(value)) {\n\t\t\tt = +value.top || 0;\n\t\t\tr = +value.right || 0;\n\t\t\tb = +value.bottom || 0;\n\t\t\tl = +value.left || 0;\n\t\t} else {\n\t\t\tt = r = b = l = +value || 0;\n\t\t}\n\n\t\treturn {\n\t\t\ttop: t,\n\t\t\tright: r,\n\t\t\tbottom: b,\n\t\t\tleft: l,\n\t\t\theight: t + b,\n\t\t\twidth: l + r\n\t\t};\n\t},\n\n\t/**\n\t * Parses font options and returns the font object.\n\t * @param {object} options - A object that contains font options to be parsed.\n\t * @return {object} The font object.\n\t * @todo Support font.* options and renamed to toFont().\n\t * @private\n\t */\n\t_parseFont: function(options) {\n\t\tvar globalDefaults = core_defaults.global;\n\t\tvar size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n\t\tvar font = {\n\t\t\tfamily: valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily),\n\t\t\tlineHeight: helpers_core.options.toLineHeight(valueOrDefault(options.lineHeight, globalDefaults.defaultLineHeight), size),\n\t\t\tsize: size,\n\t\t\tstyle: valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle),\n\t\t\tweight: null,\n\t\t\tstring: ''\n\t\t};\n\n\t\tfont.string = toFontString(font);\n\t\treturn font;\n\t},\n\n\t/**\n\t * Evaluates the given `inputs` sequentially and returns the first defined value.\n\t * @param {Array} inputs - An array of values, falling back to the last value.\n\t * @param {object} [context] - If defined and the current value is a function, the value\n\t * is called with `context` as first argument and the result becomes the new input.\n\t * @param {number} [index] - If defined and the current value is an array, the value\n\t * at `index` become the new input.\n\t * @since 2.7.0\n\t */\n\tresolve: function(inputs, context, index) {\n\t\tvar i, ilen, value;\n\n\t\tfor (i = 0, ilen = inputs.length; i < ilen; ++i) {\n\t\t\tvalue = inputs[i];\n\t\t\tif (value === undefined) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (context !== undefined && typeof value === 'function') {\n\t\t\t\tvalue = value(context);\n\t\t\t}\n\t\t\tif (index !== undefined && helpers_core.isArray(value)) {\n\t\t\t\tvalue = value[index];\n\t\t\t}\n\t\t\tif (value !== undefined) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t}\n\t}\n};\n\nvar helpers$1 = helpers_core;\nvar easing = helpers_easing;\nvar canvas = helpers_canvas;\nvar options = helpers_options;\nhelpers$1.easing = easing;\nhelpers$1.canvas = canvas;\nhelpers$1.options = options;\n\nfunction interpolate(start, view, model, ease) {\n\tvar keys = Object.keys(model);\n\tvar i, ilen, key, actual, origin, target, type, c0, c1;\n\n\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\tkey = keys[i];\n\n\t\ttarget = model[key];\n\n\t\t// if a value is added to the model after pivot() has been called, the view\n\t\t// doesn't contain it, so let's initialize the view to the target value.\n\t\tif (!view.hasOwnProperty(key)) {\n\t\t\tview[key] = target;\n\t\t}\n\n\t\tactual = view[key];\n\n\t\tif (actual === target || key[0] === '_') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!start.hasOwnProperty(key)) {\n\t\t\tstart[key] = actual;\n\t\t}\n\n\t\torigin = start[key];\n\n\t\ttype = typeof target;\n\n\t\tif (type === typeof origin) {\n\t\t\tif (type === 'string') {\n\t\t\t\tc0 = chartjsColor(origin);\n\t\t\t\tif (c0.valid) {\n\t\t\t\t\tc1 = chartjsColor(target);\n\t\t\t\t\tif (c1.valid) {\n\t\t\t\t\t\tview[key] = c1.mix(c0, ease).rgbString();\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (helpers$1.isFinite(origin) && helpers$1.isFinite(target)) {\n\t\t\t\tview[key] = origin + (target - origin) * ease;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\tview[key] = target;\n\t}\n}\n\nvar Element = function(configuration) {\n\thelpers$1.extend(this, configuration);\n\tthis.initialize.apply(this, arguments);\n};\n\nhelpers$1.extend(Element.prototype, {\n\n\tinitialize: function() {\n\t\tthis.hidden = false;\n\t},\n\n\tpivot: function() {\n\t\tvar me = this;\n\t\tif (!me._view) {\n\t\t\tme._view = helpers$1.clone(me._model);\n\t\t}\n\t\tme._start = {};\n\t\treturn me;\n\t},\n\n\ttransition: function(ease) {\n\t\tvar me = this;\n\t\tvar model = me._model;\n\t\tvar start = me._start;\n\t\tvar view = me._view;\n\n\t\t// No animation -> No Transition\n\t\tif (!model || ease === 1) {\n\t\t\tme._view = model;\n\t\t\tme._start = null;\n\t\t\treturn me;\n\t\t}\n\n\t\tif (!view) {\n\t\t\tview = me._view = {};\n\t\t}\n\n\t\tif (!start) {\n\t\t\tstart = me._start = {};\n\t\t}\n\n\t\tinterpolate(start, view, model, ease);\n\n\t\treturn me;\n\t},\n\n\ttooltipPosition: function() {\n\t\treturn {\n\t\t\tx: this._model.x,\n\t\t\ty: this._model.y\n\t\t};\n\t},\n\n\thasValue: function() {\n\t\treturn helpers$1.isNumber(this._model.x) && helpers$1.isNumber(this._model.y);\n\t}\n});\n\nElement.extend = helpers$1.inherits;\n\nvar core_element = Element;\n\nvar exports$2 = core_element.extend({\n\tchart: null, // the animation associated chart instance\n\tcurrentStep: 0, // the current animation step\n\tnumSteps: 60, // default number of steps\n\teasing: '', // the easing to use for this animation\n\trender: null, // render function used by the animation service\n\n\tonAnimationProgress: null, // user specified callback to fire on each step of the animation\n\tonAnimationComplete: null, // user specified callback to fire when the animation finishes\n});\n\nvar core_animation = exports$2;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.Animation instead\n * @prop Chart.Animation#animationObject\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n */\nObject.defineProperty(exports$2.prototype, 'animationObject', {\n\tget: function() {\n\t\treturn this;\n\t}\n});\n\n/**\n * Provided for backward compatibility, use Chart.Animation#chart instead\n * @prop Chart.Animation#chartInstance\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n */\nObject.defineProperty(exports$2.prototype, 'chartInstance', {\n\tget: function() {\n\t\treturn this.chart;\n\t},\n\tset: function(value) {\n\t\tthis.chart = value;\n\t}\n});\n\ncore_defaults._set('global', {\n\tanimation: {\n\t\tduration: 1000,\n\t\teasing: 'easeOutQuart',\n\t\tonProgress: helpers$1.noop,\n\t\tonComplete: helpers$1.noop\n\t}\n});\n\nvar core_animations = {\n\tanimations: [],\n\trequest: null,\n\n\t/**\n\t * @param {Chart} chart - The chart to animate.\n\t * @param {Chart.Animation} animation - The animation that we will animate.\n\t * @param {number} duration - The animation duration in ms.\n\t * @param {boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n\t */\n\taddAnimation: function(chart, animation, duration, lazy) {\n\t\tvar animations = this.animations;\n\t\tvar i, ilen;\n\n\t\tanimation.chart = chart;\n\t\tanimation.startTime = Date.now();\n\t\tanimation.duration = duration;\n\n\t\tif (!lazy) {\n\t\t\tchart.animating = true;\n\t\t}\n\n\t\tfor (i = 0, ilen = animations.length; i < ilen; ++i) {\n\t\t\tif (animations[i].chart === chart) {\n\t\t\t\tanimations[i] = animation;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tanimations.push(animation);\n\n\t\t// If there are no animations queued, manually kickstart a digest, for lack of a better word\n\t\tif (animations.length === 1) {\n\t\t\tthis.requestAnimationFrame();\n\t\t}\n\t},\n\n\tcancelAnimation: function(chart) {\n\t\tvar index = helpers$1.findIndex(this.animations, function(animation) {\n\t\t\treturn animation.chart === chart;\n\t\t});\n\n\t\tif (index !== -1) {\n\t\t\tthis.animations.splice(index, 1);\n\t\t\tchart.animating = false;\n\t\t}\n\t},\n\n\trequestAnimationFrame: function() {\n\t\tvar me = this;\n\t\tif (me.request === null) {\n\t\t\t// Skip animation frame requests until the active one is executed.\n\t\t\t// This can happen when processing mouse events, e.g. 'mousemove'\n\t\t\t// and 'mouseout' events will trigger multiple renders.\n\t\t\tme.request = helpers$1.requestAnimFrame.call(window, function() {\n\t\t\t\tme.request = null;\n\t\t\t\tme.startDigest();\n\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tstartDigest: function() {\n\t\tvar me = this;\n\n\t\tme.advance();\n\n\t\t// Do we have more stuff to animate?\n\t\tif (me.animations.length > 0) {\n\t\t\tme.requestAnimationFrame();\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tadvance: function() {\n\t\tvar animations = this.animations;\n\t\tvar animation, chart, numSteps, nextStep;\n\t\tvar i = 0;\n\n\t\t// 1 animation per chart, so we are looping charts here\n\t\twhile (i < animations.length) {\n\t\t\tanimation = animations[i];\n\t\t\tchart = animation.chart;\n\t\t\tnumSteps = animation.numSteps;\n\n\t\t\t// Make sure that currentStep starts at 1\n\t\t\t// https://github.com/chartjs/Chart.js/issues/6104\n\t\t\tnextStep = Math.floor((Date.now() - animation.startTime) / animation.duration * numSteps) + 1;\n\t\t\tanimation.currentStep = Math.min(nextStep, numSteps);\n\n\t\t\thelpers$1.callback(animation.render, [chart, animation], chart);\n\t\t\thelpers$1.callback(animation.onAnimationProgress, [animation], chart);\n\n\t\t\tif (animation.currentStep >= numSteps) {\n\t\t\t\thelpers$1.callback(animation.onAnimationComplete, [animation], chart);\n\t\t\t\tchart.animating = false;\n\t\t\t\tanimations.splice(i, 1);\n\t\t\t} else {\n\t\t\t\t++i;\n\t\t\t}\n\t\t}\n\t}\n};\n\nvar resolve = helpers$1.options.resolve;\n\nvar arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n */\nfunction listenArrayEvents(array, listener) {\n\tif (array._chartjs) {\n\t\tarray._chartjs.listeners.push(listener);\n\t\treturn;\n\t}\n\n\tObject.defineProperty(array, '_chartjs', {\n\t\tconfigurable: true,\n\t\tenumerable: false,\n\t\tvalue: {\n\t\t\tlisteners: [listener]\n\t\t}\n\t});\n\n\tarrayEvents.forEach(function(key) {\n\t\tvar method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n\t\tvar base = array[key];\n\n\t\tObject.defineProperty(array, key, {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tvalue: function() {\n\t\t\t\tvar args = Array.prototype.slice.call(arguments);\n\t\t\t\tvar res = base.apply(this, args);\n\n\t\t\t\thelpers$1.each(array._chartjs.listeners, function(object) {\n\t\t\t\t\tif (typeof object[method] === 'function') {\n\t\t\t\t\t\tobject[method].apply(object, args);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn res;\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nfunction unlistenArrayEvents(array, listener) {\n\tvar stub = array._chartjs;\n\tif (!stub) {\n\t\treturn;\n\t}\n\n\tvar listeners = stub.listeners;\n\tvar index = listeners.indexOf(listener);\n\tif (index !== -1) {\n\t\tlisteners.splice(index, 1);\n\t}\n\n\tif (listeners.length > 0) {\n\t\treturn;\n\t}\n\n\tarrayEvents.forEach(function(key) {\n\t\tdelete array[key];\n\t});\n\n\tdelete array._chartjs;\n}\n\n// Base class for all dataset controllers (line, bar, etc)\nvar DatasetController = function(chart, datasetIndex) {\n\tthis.initialize(chart, datasetIndex);\n};\n\nhelpers$1.extend(DatasetController.prototype, {\n\n\t/**\n\t * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n\t * @type {Chart.core.element}\n\t */\n\tdatasetElementType: null,\n\n\t/**\n\t * Element type used to generate a meta data (e.g. Chart.element.Point).\n\t * @type {Chart.core.element}\n\t */\n\tdataElementType: null,\n\n\tinitialize: function(chart, datasetIndex) {\n\t\tvar me = this;\n\t\tme.chart = chart;\n\t\tme.index = datasetIndex;\n\t\tme.linkScales();\n\t\tme.addElements();\n\t},\n\n\tupdateIndex: function(datasetIndex) {\n\t\tthis.index = datasetIndex;\n\t},\n\n\tlinkScales: function() {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar dataset = me.getDataset();\n\n\t\tif (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n\t\t\tmeta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n\t\t}\n\t\tif (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n\t\t\tmeta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n\t\t}\n\t},\n\n\tgetDataset: function() {\n\t\treturn this.chart.data.datasets[this.index];\n\t},\n\n\tgetMeta: function() {\n\t\treturn this.chart.getDatasetMeta(this.index);\n\t},\n\n\tgetScaleForId: function(scaleID) {\n\t\treturn this.chart.scales[scaleID];\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getValueScaleId: function() {\n\t\treturn this.getMeta().yAxisID;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getIndexScaleId: function() {\n\t\treturn this.getMeta().xAxisID;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getValueScale: function() {\n\t\treturn this.getScaleForId(this._getValueScaleId());\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getIndexScale: function() {\n\t\treturn this.getScaleForId(this._getIndexScaleId());\n\t},\n\n\treset: function() {\n\t\tthis.update(true);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tdestroy: function() {\n\t\tif (this._data) {\n\t\t\tunlistenArrayEvents(this._data, this);\n\t\t}\n\t},\n\n\tcreateMetaDataset: function() {\n\t\tvar me = this;\n\t\tvar type = me.datasetElementType;\n\t\treturn type && new type({\n\t\t\t_chart: me.chart,\n\t\t\t_datasetIndex: me.index\n\t\t});\n\t},\n\n\tcreateMetaData: function(index) {\n\t\tvar me = this;\n\t\tvar type = me.dataElementType;\n\t\treturn type && new type({\n\t\t\t_chart: me.chart,\n\t\t\t_datasetIndex: me.index,\n\t\t\t_index: index\n\t\t});\n\t},\n\n\taddElements: function() {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar data = me.getDataset().data || [];\n\t\tvar metaData = meta.data;\n\t\tvar i, ilen;\n\n\t\tfor (i = 0, ilen = data.length; i < ilen; ++i) {\n\t\t\tmetaData[i] = metaData[i] || me.createMetaData(i);\n\t\t}\n\n\t\tmeta.dataset = meta.dataset || me.createMetaDataset();\n\t},\n\n\taddElementAndReset: function(index) {\n\t\tvar element = this.createMetaData(index);\n\t\tthis.getMeta().data.splice(index, 0, element);\n\t\tthis.updateElement(element, index, true);\n\t},\n\n\tbuildOrUpdateElements: function() {\n\t\tvar me = this;\n\t\tvar dataset = me.getDataset();\n\t\tvar data = dataset.data || (dataset.data = []);\n\n\t\t// In order to correctly handle data addition/deletion animation (an thus simulate\n\t\t// real-time charts), we need to monitor these data modifications and synchronize\n\t\t// the internal meta data accordingly.\n\t\tif (me._data !== data) {\n\t\t\tif (me._data) {\n\t\t\t\t// This case happens when the user replaced the data array instance.\n\t\t\t\tunlistenArrayEvents(me._data, me);\n\t\t\t}\n\n\t\t\tif (data && Object.isExtensible(data)) {\n\t\t\t\tlistenArrayEvents(data, me);\n\t\t\t}\n\t\t\tme._data = data;\n\t\t}\n\n\t\t// Re-sync meta data in case the user replaced the data array or if we missed\n\t\t// any updates and so make sure that we handle number of datapoints changing.\n\t\tme.resyncElements();\n\t},\n\n\tupdate: helpers$1.noop,\n\n\ttransition: function(easingValue) {\n\t\tvar meta = this.getMeta();\n\t\tvar elements = meta.data || [];\n\t\tvar ilen = elements.length;\n\t\tvar i = 0;\n\n\t\tfor (; i < ilen; ++i) {\n\t\t\telements[i].transition(easingValue);\n\t\t}\n\n\t\tif (meta.dataset) {\n\t\t\tmeta.dataset.transition(easingValue);\n\t\t}\n\t},\n\n\tdraw: function() {\n\t\tvar meta = this.getMeta();\n\t\tvar elements = meta.data || [];\n\t\tvar ilen = elements.length;\n\t\tvar i = 0;\n\n\t\tif (meta.dataset) {\n\t\t\tmeta.dataset.draw();\n\t\t}\n\n\t\tfor (; i < ilen; ++i) {\n\t\t\telements[i].draw();\n\t\t}\n\t},\n\n\tremoveHoverStyle: function(element) {\n\t\thelpers$1.merge(element._model, element.$previousStyle || {});\n\t\tdelete element.$previousStyle;\n\t},\n\n\tsetHoverStyle: function(element) {\n\t\tvar dataset = this.chart.data.datasets[element._datasetIndex];\n\t\tvar index = element._index;\n\t\tvar custom = element.custom || {};\n\t\tvar model = element._model;\n\t\tvar getHoverColor = helpers$1.getHoverColor;\n\n\t\telement.$previousStyle = {\n\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\tborderColor: model.borderColor,\n\t\t\tborderWidth: model.borderWidth\n\t\t};\n\n\t\tmodel.backgroundColor = resolve([custom.hoverBackgroundColor, dataset.hoverBackgroundColor, getHoverColor(model.backgroundColor)], undefined, index);\n\t\tmodel.borderColor = resolve([custom.hoverBorderColor, dataset.hoverBorderColor, getHoverColor(model.borderColor)], undefined, index);\n\t\tmodel.borderWidth = resolve([custom.hoverBorderWidth, dataset.hoverBorderWidth, model.borderWidth], undefined, index);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tresyncElements: function() {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar data = me.getDataset().data;\n\t\tvar numMeta = meta.data.length;\n\t\tvar numData = data.length;\n\n\t\tif (numData < numMeta) {\n\t\t\tmeta.data.splice(numData, numMeta - numData);\n\t\t} else if (numData > numMeta) {\n\t\t\tme.insertElements(numMeta, numData - numMeta);\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tinsertElements: function(start, count) {\n\t\tfor (var i = 0; i < count; ++i) {\n\t\t\tthis.addElementAndReset(start + i);\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tonDataPush: function() {\n\t\tvar count = arguments.length;\n\t\tthis.insertElements(this.getDataset().data.length - count, count);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tonDataPop: function() {\n\t\tthis.getMeta().data.pop();\n\t},\n\n\t/**\n\t * @private\n\t */\n\tonDataShift: function() {\n\t\tthis.getMeta().data.shift();\n\t},\n\n\t/**\n\t * @private\n\t */\n\tonDataSplice: function(start, count) {\n\t\tthis.getMeta().data.splice(start, count);\n\t\tthis.insertElements(start, arguments.length - 2);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tonDataUnshift: function() {\n\t\tthis.insertElements(0, arguments.length);\n\t}\n});\n\nDatasetController.extend = helpers$1.inherits;\n\nvar core_datasetController = DatasetController;\n\ncore_defaults._set('global', {\n\telements: {\n\t\tarc: {\n\t\t\tbackgroundColor: core_defaults.global.defaultColor,\n\t\t\tborderColor: '#fff',\n\t\t\tborderWidth: 2,\n\t\t\tborderAlign: 'center'\n\t\t}\n\t}\n});\n\nvar element_arc = core_element.extend({\n\tinLabelRange: function(mouseX) {\n\t\tvar vm = this._view;\n\n\t\tif (vm) {\n\t\t\treturn (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2));\n\t\t}\n\t\treturn false;\n\t},\n\n\tinRange: function(chartX, chartY) {\n\t\tvar vm = this._view;\n\n\t\tif (vm) {\n\t\t\tvar pointRelativePosition = helpers$1.getAngleFromPoint(vm, {x: chartX, y: chartY});\n\t\t\tvar\tangle = pointRelativePosition.angle;\n\t\t\tvar distance = pointRelativePosition.distance;\n\n\t\t\t// Sanitise angle range\n\t\t\tvar startAngle = vm.startAngle;\n\t\t\tvar endAngle = vm.endAngle;\n\t\t\twhile (endAngle < startAngle) {\n\t\t\t\tendAngle += 2.0 * Math.PI;\n\t\t\t}\n\t\t\twhile (angle > endAngle) {\n\t\t\t\tangle -= 2.0 * Math.PI;\n\t\t\t}\n\t\t\twhile (angle < startAngle) {\n\t\t\t\tangle += 2.0 * Math.PI;\n\t\t\t}\n\n\t\t\t// Check if within the range of the open/close angle\n\t\t\tvar betweenAngles = (angle >= startAngle && angle <= endAngle);\n\t\t\tvar withinRadius = (distance >= vm.innerRadius && distance <= vm.outerRadius);\n\n\t\t\treturn (betweenAngles && withinRadius);\n\t\t}\n\t\treturn false;\n\t},\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\tvar halfAngle = (vm.startAngle + vm.endAngle) / 2;\n\t\tvar halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n\t\treturn {\n\t\t\tx: vm.x + Math.cos(halfAngle) * halfRadius,\n\t\t\ty: vm.y + Math.sin(halfAngle) * halfRadius\n\t\t};\n\t},\n\n\tgetArea: function() {\n\t\tvar vm = this._view;\n\t\treturn Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\tvar centreAngle = vm.startAngle + ((vm.endAngle - vm.startAngle) / 2);\n\t\tvar rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n\n\t\treturn {\n\t\t\tx: vm.x + (Math.cos(centreAngle) * rangeFromCentre),\n\t\t\ty: vm.y + (Math.sin(centreAngle) * rangeFromCentre)\n\t\t};\n\t},\n\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar sA = vm.startAngle;\n\t\tvar eA = vm.endAngle;\n\t\tvar pixelMargin = (vm.borderAlign === 'inner') ? 0.33 : 0;\n\t\tvar angleMargin;\n\n\t\tctx.save();\n\n\t\tctx.beginPath();\n\t\tctx.arc(vm.x, vm.y, Math.max(vm.outerRadius - pixelMargin, 0), sA, eA);\n\t\tctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n\t\tctx.closePath();\n\n\t\tctx.fillStyle = vm.backgroundColor;\n\t\tctx.fill();\n\n\t\tif (vm.borderWidth) {\n\t\t\tif (vm.borderAlign === 'inner') {\n\t\t\t\t// Draw an inner border by cliping the arc and drawing a double-width border\n\t\t\t\t// Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n\t\t\t\tctx.beginPath();\n\t\t\t\tangleMargin = pixelMargin / vm.outerRadius;\n\t\t\t\tctx.arc(vm.x, vm.y, vm.outerRadius, sA - angleMargin, eA + angleMargin);\n\t\t\t\tif (vm.innerRadius > pixelMargin) {\n\t\t\t\t\tangleMargin = pixelMargin / vm.innerRadius;\n\t\t\t\t\tctx.arc(vm.x, vm.y, vm.innerRadius - pixelMargin, eA + angleMargin, sA - angleMargin, true);\n\t\t\t\t} else {\n\t\t\t\t\tctx.arc(vm.x, vm.y, pixelMargin, eA + Math.PI / 2, sA - Math.PI / 2);\n\t\t\t\t}\n\t\t\t\tctx.closePath();\n\t\t\t\tctx.clip();\n\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n\t\t\t\tctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n\t\t\t\tctx.closePath();\n\n\t\t\t\tctx.lineWidth = vm.borderWidth * 2;\n\t\t\t\tctx.lineJoin = 'round';\n\t\t\t} else {\n\t\t\t\tctx.lineWidth = vm.borderWidth;\n\t\t\t\tctx.lineJoin = 'bevel';\n\t\t\t}\n\n\t\t\tctx.strokeStyle = vm.borderColor;\n\t\t\tctx.stroke();\n\t\t}\n\n\t\tctx.restore();\n\t}\n});\n\nvar valueOrDefault$1 = helpers$1.valueOrDefault;\n\nvar defaultColor = core_defaults.global.defaultColor;\n\ncore_defaults._set('global', {\n\telements: {\n\t\tline: {\n\t\t\ttension: 0.4,\n\t\t\tbackgroundColor: defaultColor,\n\t\t\tborderWidth: 3,\n\t\t\tborderColor: defaultColor,\n\t\t\tborderCapStyle: 'butt',\n\t\t\tborderDash: [],\n\t\t\tborderDashOffset: 0.0,\n\t\t\tborderJoinStyle: 'miter',\n\t\t\tcapBezierPoints: true,\n\t\t\tfill: true, // do we fill in the area between the line and its base axis\n\t\t}\n\t}\n});\n\nvar element_line = core_element.extend({\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar vm = me._view;\n\t\tvar ctx = me._chart.ctx;\n\t\tvar spanGaps = vm.spanGaps;\n\t\tvar points = me._children.slice(); // clone array\n\t\tvar globalDefaults = core_defaults.global;\n\t\tvar globalOptionLineElements = globalDefaults.elements.line;\n\t\tvar lastDrawnIndex = -1;\n\t\tvar index, current, previous, currentVM;\n\n\t\t// If we are looping, adding the first point again\n\t\tif (me._loop && points.length) {\n\t\t\tpoints.push(points[0]);\n\t\t}\n\n\t\tctx.save();\n\n\t\t// Stroke Line Options\n\t\tctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle;\n\n\t\t// IE 9 and 10 do not support line dash\n\t\tif (ctx.setLineDash) {\n\t\t\tctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n\t\t}\n\n\t\tctx.lineDashOffset = valueOrDefault$1(vm.borderDashOffset, globalOptionLineElements.borderDashOffset);\n\t\tctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n\t\tctx.lineWidth = valueOrDefault$1(vm.borderWidth, globalOptionLineElements.borderWidth);\n\t\tctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor;\n\n\t\t// Stroke Line\n\t\tctx.beginPath();\n\t\tlastDrawnIndex = -1;\n\n\t\tfor (index = 0; index < points.length; ++index) {\n\t\t\tcurrent = points[index];\n\t\t\tprevious = helpers$1.previousItem(points, index);\n\t\t\tcurrentVM = current._view;\n\n\t\t\t// First point moves to it's starting position no matter what\n\t\t\tif (index === 0) {\n\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprevious = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\tif ((lastDrawnIndex !== (index - 1) && !spanGaps) || lastDrawnIndex === -1) {\n\t\t\t\t\t\t// There was a gap and this is the first point after the gap\n\t\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Line to next point\n\t\t\t\t\t\thelpers$1.canvas.lineTo(ctx, previous._view, current._view);\n\t\t\t\t\t}\n\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tctx.stroke();\n\t\tctx.restore();\n\t}\n});\n\nvar valueOrDefault$2 = helpers$1.valueOrDefault;\n\nvar defaultColor$1 = core_defaults.global.defaultColor;\n\ncore_defaults._set('global', {\n\telements: {\n\t\tpoint: {\n\t\t\tradius: 3,\n\t\t\tpointStyle: 'circle',\n\t\t\tbackgroundColor: defaultColor$1,\n\t\t\tborderColor: defaultColor$1,\n\t\t\tborderWidth: 1,\n\t\t\t// Hover\n\t\t\thitRadius: 1,\n\t\t\thoverRadius: 4,\n\t\t\thoverBorderWidth: 1\n\t\t}\n\t}\n});\n\nfunction xRange(mouseX) {\n\tvar vm = this._view;\n\treturn vm ? (Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius) : false;\n}\n\nfunction yRange(mouseY) {\n\tvar vm = this._view;\n\treturn vm ? (Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius) : false;\n}\n\nvar element_point = core_element.extend({\n\tinRange: function(mouseX, mouseY) {\n\t\tvar vm = this._view;\n\t\treturn vm ? ((Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2)) < Math.pow(vm.hitRadius + vm.radius, 2)) : false;\n\t},\n\n\tinLabelRange: xRange,\n\tinXRange: xRange,\n\tinYRange: yRange,\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\t},\n\n\tgetArea: function() {\n\t\treturn Math.PI * Math.pow(this._view.radius, 2);\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y,\n\t\t\tpadding: vm.radius + vm.borderWidth\n\t\t};\n\t},\n\n\tdraw: function(chartArea) {\n\t\tvar vm = this._view;\n\t\tvar ctx = this._chart.ctx;\n\t\tvar pointStyle = vm.pointStyle;\n\t\tvar rotation = vm.rotation;\n\t\tvar radius = vm.radius;\n\t\tvar x = vm.x;\n\t\tvar y = vm.y;\n\t\tvar globalDefaults = core_defaults.global;\n\t\tvar defaultColor = globalDefaults.defaultColor; // eslint-disable-line no-shadow\n\n\t\tif (vm.skip) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Clipping for Points.\n\t\tif (chartArea === undefined || helpers$1.canvas._isPointInArea(vm, chartArea)) {\n\t\t\tctx.strokeStyle = vm.borderColor || defaultColor;\n\t\t\tctx.lineWidth = valueOrDefault$2(vm.borderWidth, globalDefaults.elements.point.borderWidth);\n\t\t\tctx.fillStyle = vm.backgroundColor || defaultColor;\n\t\t\thelpers$1.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n\t\t}\n\t}\n});\n\nvar defaultColor$2 = core_defaults.global.defaultColor;\n\ncore_defaults._set('global', {\n\telements: {\n\t\trectangle: {\n\t\t\tbackgroundColor: defaultColor$2,\n\t\t\tborderColor: defaultColor$2,\n\t\t\tborderSkipped: 'bottom',\n\t\t\tborderWidth: 0\n\t\t}\n\t}\n});\n\nfunction isVertical(vm) {\n\treturn vm && vm.width !== undefined;\n}\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param bar {Chart.Element.Rectangle} the bar\n * @return {Bounds} bounds of the bar\n * @private\n */\nfunction getBarBounds(vm) {\n\tvar x1, x2, y1, y2, half;\n\n\tif (isVertical(vm)) {\n\t\thalf = vm.width / 2;\n\t\tx1 = vm.x - half;\n\t\tx2 = vm.x + half;\n\t\ty1 = Math.min(vm.y, vm.base);\n\t\ty2 = Math.max(vm.y, vm.base);\n\t} else {\n\t\thalf = vm.height / 2;\n\t\tx1 = Math.min(vm.x, vm.base);\n\t\tx2 = Math.max(vm.x, vm.base);\n\t\ty1 = vm.y - half;\n\t\ty2 = vm.y + half;\n\t}\n\n\treturn {\n\t\tleft: x1,\n\t\ttop: y1,\n\t\tright: x2,\n\t\tbottom: y2\n\t};\n}\n\nfunction swap(orig, v1, v2) {\n\treturn orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction parseBorderSkipped(vm) {\n\tvar edge = vm.borderSkipped;\n\tvar res = {};\n\n\tif (!edge) {\n\t\treturn res;\n\t}\n\n\tif (vm.horizontal) {\n\t\tif (vm.base > vm.x) {\n\t\t\tedge = swap(edge, 'left', 'right');\n\t\t}\n\t} else if (vm.base < vm.y) {\n\t\tedge = swap(edge, 'bottom', 'top');\n\t}\n\n\tres[edge] = true;\n\treturn res;\n}\n\nfunction parseBorderWidth(vm, maxW, maxH) {\n\tvar value = vm.borderWidth;\n\tvar skip = parseBorderSkipped(vm);\n\tvar t, r, b, l;\n\n\tif (helpers$1.isObject(value)) {\n\t\tt = +value.top || 0;\n\t\tr = +value.right || 0;\n\t\tb = +value.bottom || 0;\n\t\tl = +value.left || 0;\n\t} else {\n\t\tt = r = b = l = +value || 0;\n\t}\n\n\treturn {\n\t\tt: skip.top || (t < 0) ? 0 : t > maxH ? maxH : t,\n\t\tr: skip.right || (r < 0) ? 0 : r > maxW ? maxW : r,\n\t\tb: skip.bottom || (b < 0) ? 0 : b > maxH ? maxH : b,\n\t\tl: skip.left || (l < 0) ? 0 : l > maxW ? maxW : l\n\t};\n}\n\nfunction boundingRects(vm) {\n\tvar bounds = getBarBounds(vm);\n\tvar width = bounds.right - bounds.left;\n\tvar height = bounds.bottom - bounds.top;\n\tvar border = parseBorderWidth(vm, width / 2, height / 2);\n\n\treturn {\n\t\touter: {\n\t\t\tx: bounds.left,\n\t\t\ty: bounds.top,\n\t\t\tw: width,\n\t\t\th: height\n\t\t},\n\t\tinner: {\n\t\t\tx: bounds.left + border.l,\n\t\t\ty: bounds.top + border.t,\n\t\t\tw: width - border.l - border.r,\n\t\t\th: height - border.t - border.b\n\t\t}\n\t};\n}\n\nfunction inRange(vm, x, y) {\n\tvar skipX = x === null;\n\tvar skipY = y === null;\n\tvar bounds = !vm || (skipX && skipY) ? false : getBarBounds(vm);\n\n\treturn bounds\n\t\t&& (skipX || x >= bounds.left && x <= bounds.right)\n\t\t&& (skipY || y >= bounds.top && y <= bounds.bottom);\n}\n\nvar element_rectangle = core_element.extend({\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar rects = boundingRects(vm);\n\t\tvar outer = rects.outer;\n\t\tvar inner = rects.inner;\n\n\t\tctx.fillStyle = vm.backgroundColor;\n\t\tctx.fillRect(outer.x, outer.y, outer.w, outer.h);\n\n\t\tif (outer.w === inner.w && outer.h === inner.h) {\n\t\t\treturn;\n\t\t}\n\n\t\tctx.save();\n\t\tctx.beginPath();\n\t\tctx.rect(outer.x, outer.y, outer.w, outer.h);\n\t\tctx.clip();\n\t\tctx.fillStyle = vm.borderColor;\n\t\tctx.rect(inner.x, inner.y, inner.w, inner.h);\n\t\tctx.fill('evenodd');\n\t\tctx.restore();\n\t},\n\n\theight: function() {\n\t\tvar vm = this._view;\n\t\treturn vm.base - vm.y;\n\t},\n\n\tinRange: function(mouseX, mouseY) {\n\t\treturn inRange(this._view, mouseX, mouseY);\n\t},\n\n\tinLabelRange: function(mouseX, mouseY) {\n\t\tvar vm = this._view;\n\t\treturn isVertical(vm)\n\t\t\t? inRange(vm, mouseX, null)\n\t\t\t: inRange(vm, null, mouseY);\n\t},\n\n\tinXRange: function(mouseX) {\n\t\treturn inRange(this._view, mouseX, null);\n\t},\n\n\tinYRange: function(mouseY) {\n\t\treturn inRange(this._view, null, mouseY);\n\t},\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\tvar x, y;\n\t\tif (isVertical(vm)) {\n\t\t\tx = vm.x;\n\t\t\ty = (vm.y + vm.base) / 2;\n\t\t} else {\n\t\t\tx = (vm.x + vm.base) / 2;\n\t\t\ty = vm.y;\n\t\t}\n\n\t\treturn {x: x, y: y};\n\t},\n\n\tgetArea: function() {\n\t\tvar vm = this._view;\n\n\t\treturn isVertical(vm)\n\t\t\t? vm.width * Math.abs(vm.y - vm.base)\n\t\t\t: vm.height * Math.abs(vm.x - vm.base);\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\t}\n});\n\nvar elements = {};\nvar Arc = element_arc;\nvar Line = element_line;\nvar Point = element_point;\nvar Rectangle = element_rectangle;\nelements.Arc = Arc;\nelements.Line = Line;\nelements.Point = Point;\nelements.Rectangle = Rectangle;\n\nvar resolve$1 = helpers$1.options.resolve;\n\ncore_defaults._set('bar', {\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'category',\n\t\t\tcategoryPercentage: 0.8,\n\t\t\tbarPercentage: 0.9,\n\t\t\toffset: true,\n\t\t\tgridLines: {\n\t\t\t\toffsetGridLines: true\n\t\t\t}\n\t\t}],\n\n\t\tyAxes: [{\n\t\t\ttype: 'linear'\n\t\t}]\n\t}\n});\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(scale, pixels) {\n\tvar min = scale.isHorizontal() ? scale.width : scale.height;\n\tvar ticks = scale.getTicks();\n\tvar prev, curr, i, ilen;\n\n\tfor (i = 1, ilen = pixels.length; i < ilen; ++i) {\n\t\tmin = Math.min(min, Math.abs(pixels[i] - pixels[i - 1]));\n\t}\n\n\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\tcurr = scale.getPixelForTick(i);\n\t\tmin = i > 0 ? Math.min(min, curr - prev) : min;\n\t\tprev = curr;\n\t}\n\n\treturn min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options) {\n\tvar thickness = options.barThickness;\n\tvar count = ruler.stackCount;\n\tvar curr = ruler.pixels[index];\n\tvar size, ratio;\n\n\tif (helpers$1.isNullOrUndef(thickness)) {\n\t\tsize = ruler.min * options.categoryPercentage;\n\t\tratio = options.barPercentage;\n\t} else {\n\t\t// When bar thickness is enforced, category and bar percentages are ignored.\n\t\t// Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n\t\t// and deprecate barPercentage since this value is ignored when thickness is absolute.\n\t\tsize = thickness * count;\n\t\tratio = 1;\n\t}\n\n\treturn {\n\t\tchunk: size / count,\n\t\tratio: ratio,\n\t\tstart: curr - (size / 2)\n\t};\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options) {\n\tvar pixels = ruler.pixels;\n\tvar curr = pixels[index];\n\tvar prev = index > 0 ? pixels[index - 1] : null;\n\tvar next = index < pixels.length - 1 ? pixels[index + 1] : null;\n\tvar percent = options.categoryPercentage;\n\tvar start, size;\n\n\tif (prev === null) {\n\t\t// first data: its size is double based on the next point or,\n\t\t// if it's also the last data, we use the scale size.\n\t\tprev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n\t}\n\n\tif (next === null) {\n\t\t// last data: its size is also double based on the previous point.\n\t\tnext = curr + curr - prev;\n\t}\n\n\tstart = curr - (curr - Math.min(prev, next)) / 2 * percent;\n\tsize = Math.abs(next - prev) / 2 * percent;\n\n\treturn {\n\t\tchunk: size / ruler.stackCount,\n\t\tratio: options.barPercentage,\n\t\tstart: start\n\t};\n}\n\nvar controller_bar = core_datasetController.extend({\n\n\tdataElementType: elements.Rectangle,\n\n\tinitialize: function() {\n\t\tvar me = this;\n\t\tvar meta;\n\n\t\tcore_datasetController.prototype.initialize.apply(me, arguments);\n\n\t\tmeta = me.getMeta();\n\t\tmeta.stack = me.getDataset().stack;\n\t\tmeta.bar = true;\n\t},\n\n\tupdate: function(reset) {\n\t\tvar me = this;\n\t\tvar rects = me.getMeta().data;\n\t\tvar i, ilen;\n\n\t\tme._ruler = me.getRuler();\n\n\t\tfor (i = 0, ilen = rects.length; i < ilen; ++i) {\n\t\t\tme.updateElement(rects[i], i, reset);\n\t\t}\n\t},\n\n\tupdateElement: function(rectangle, index, reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar dataset = me.getDataset();\n\t\tvar options = me._resolveElementOptions(rectangle, index);\n\n\t\trectangle._xScale = me.getScaleForId(meta.xAxisID);\n\t\trectangle._yScale = me.getScaleForId(meta.yAxisID);\n\t\trectangle._datasetIndex = me.index;\n\t\trectangle._index = index;\n\t\trectangle._model = {\n\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\tborderColor: options.borderColor,\n\t\t\tborderSkipped: options.borderSkipped,\n\t\t\tborderWidth: options.borderWidth,\n\t\t\tdatasetLabel: dataset.label,\n\t\t\tlabel: me.chart.data.labels[index]\n\t\t};\n\n\t\tme._updateElementGeometry(rectangle, index, reset);\n\n\t\trectangle.pivot();\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_updateElementGeometry: function(rectangle, index, reset) {\n\t\tvar me = this;\n\t\tvar model = rectangle._model;\n\t\tvar vscale = me._getValueScale();\n\t\tvar base = vscale.getBasePixel();\n\t\tvar horizontal = vscale.isHorizontal();\n\t\tvar ruler = me._ruler || me.getRuler();\n\t\tvar vpixels = me.calculateBarValuePixels(me.index, index);\n\t\tvar ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n\n\t\tmodel.horizontal = horizontal;\n\t\tmodel.base = reset ? base : vpixels.base;\n\t\tmodel.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n\t\tmodel.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n\t\tmodel.height = horizontal ? ipixels.size : undefined;\n\t\tmodel.width = horizontal ? undefined : ipixels.size;\n\t},\n\n\t/**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n\t_getStacks: function(last) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar scale = me._getIndexScale();\n\t\tvar stacked = scale.options.stacked;\n\t\tvar ilen = last === undefined ? chart.data.datasets.length : last + 1;\n\t\tvar stacks = [];\n\t\tvar i, meta;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\tif (meta.bar && chart.isDatasetVisible(i) &&\n\t\t\t\t(stacked === false ||\n\t\t\t\t(stacked === true && stacks.indexOf(meta.stack) === -1) ||\n\t\t\t\t(stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1)))) {\n\t\t\t\tstacks.push(meta.stack);\n\t\t\t}\n\t\t}\n\n\t\treturn stacks;\n\t},\n\n\t/**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n\tgetStackCount: function() {\n\t\treturn this._getStacks().length;\n\t},\n\n\t/**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n\t * @returns {number} The stack index\n\t * @private\n\t */\n\tgetStackIndex: function(datasetIndex, name) {\n\t\tvar stacks = this._getStacks(datasetIndex);\n\t\tvar index = (name !== undefined)\n\t\t\t? stacks.indexOf(name)\n\t\t\t: -1; // indexOf returns -1 if element is not present\n\n\t\treturn (index === -1)\n\t\t\t? stacks.length - 1\n\t\t\t: index;\n\t},\n\n\t/**\n\t * @private\n\t */\n\tgetRuler: function() {\n\t\tvar me = this;\n\t\tvar scale = me._getIndexScale();\n\t\tvar stackCount = me.getStackCount();\n\t\tvar datasetIndex = me.index;\n\t\tvar isHorizontal = scale.isHorizontal();\n\t\tvar start = isHorizontal ? scale.left : scale.top;\n\t\tvar end = start + (isHorizontal ? scale.width : scale.height);\n\t\tvar pixels = [];\n\t\tvar i, ilen, min;\n\n\t\tfor (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n\t\t\tpixels.push(scale.getPixelForValue(null, i, datasetIndex));\n\t\t}\n\n\t\tmin = helpers$1.isNullOrUndef(scale.options.barThickness)\n\t\t\t? computeMinSampleSize(scale, pixels)\n\t\t\t: -1;\n\n\t\treturn {\n\t\t\tmin: min,\n\t\t\tpixels: pixels,\n\t\t\tstart: start,\n\t\t\tend: end,\n\t\t\tstackCount: stackCount,\n\t\t\tscale: scale\n\t\t};\n\t},\n\n\t/**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n\tcalculateBarValuePixels: function(datasetIndex, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar meta = me.getMeta();\n\t\tvar scale = me._getValueScale();\n\t\tvar isHorizontal = scale.isHorizontal();\n\t\tvar datasets = chart.data.datasets;\n\t\tvar value = +scale.getRightValue(datasets[datasetIndex].data[index]);\n\t\tvar minBarLength = scale.options.minBarLength;\n\t\tvar stacked = scale.options.stacked;\n\t\tvar stack = meta.stack;\n\t\tvar start = 0;\n\t\tvar i, imeta, ivalue, base, head, size;\n\n\t\tif (stacked || (stacked === undefined && stack !== undefined)) {\n\t\t\tfor (i = 0; i < datasetIndex; ++i) {\n\t\t\t\timeta = chart.getDatasetMeta(i);\n\n\t\t\t\tif (imeta.bar &&\n\t\t\t\t\timeta.stack === stack &&\n\t\t\t\t\timeta.controller._getValueScaleId() === scale.id &&\n\t\t\t\t\tchart.isDatasetVisible(i)) {\n\n\t\t\t\t\tivalue = +scale.getRightValue(datasets[i].data[index]);\n\t\t\t\t\tif ((value < 0 && ivalue < 0) || (value >= 0 && ivalue > 0)) {\n\t\t\t\t\t\tstart += ivalue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tbase = scale.getPixelForValue(start);\n\t\thead = scale.getPixelForValue(start + value);\n\t\tsize = head - base;\n\n\t\tif (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n\t\t\tsize = minBarLength;\n\t\t\tif (value >= 0 && !isHorizontal || value < 0 && isHorizontal) {\n\t\t\t\thead = base - minBarLength;\n\t\t\t} else {\n\t\t\t\thead = base + minBarLength;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tsize: size,\n\t\t\tbase: base,\n\t\t\thead: head,\n\t\t\tcenter: head + size / 2\n\t\t};\n\t},\n\n\t/**\n\t * @private\n\t */\n\tcalculateBarIndexPixels: function(datasetIndex, index, ruler) {\n\t\tvar me = this;\n\t\tvar options = ruler.scale.options;\n\t\tvar range = options.barThickness === 'flex'\n\t\t\t? computeFlexCategoryTraits(index, ruler, options)\n\t\t\t: computeFitCategoryTraits(index, ruler, options);\n\n\t\tvar stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n\t\tvar center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n\t\tvar size = Math.min(\n\t\t\thelpers$1.valueOrDefault(options.maxBarThickness, Infinity),\n\t\t\trange.chunk * range.ratio);\n\n\t\treturn {\n\t\t\tbase: center - size / 2,\n\t\t\thead: center + size / 2,\n\t\t\tcenter: center,\n\t\t\tsize: size\n\t\t};\n\t},\n\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar scale = me._getValueScale();\n\t\tvar rects = me.getMeta().data;\n\t\tvar dataset = me.getDataset();\n\t\tvar ilen = rects.length;\n\t\tvar i = 0;\n\n\t\thelpers$1.canvas.clipArea(chart.ctx, chart.chartArea);\n\n\t\tfor (; i < ilen; ++i) {\n\t\t\tif (!isNaN(scale.getRightValue(dataset.data[i]))) {\n\t\t\t\trects[i].draw();\n\t\t\t}\n\t\t}\n\n\t\thelpers$1.canvas.unclipArea(chart.ctx);\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolveElementOptions: function(rectangle, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar datasets = chart.data.datasets;\n\t\tvar dataset = datasets[me.index];\n\t\tvar custom = rectangle.custom || {};\n\t\tvar options = chart.options.elements.rectangle;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar keys = [\n\t\t\t'backgroundColor',\n\t\t\t'borderColor',\n\t\t\t'borderSkipped',\n\t\t\t'borderWidth'\n\t\t];\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$1([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\treturn values;\n\t}\n});\n\nvar valueOrDefault$3 = helpers$1.valueOrDefault;\nvar resolve$2 = helpers$1.options.resolve;\n\ncore_defaults._set('bubble', {\n\thover: {\n\t\tmode: 'single'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'linear', // bubble should probably use a linear scale by default\n\t\t\tposition: 'bottom',\n\t\t\tid: 'x-axis-0' // need an ID so datasets can reference the scale\n\t\t}],\n\t\tyAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tposition: 'left',\n\t\t\tid: 'y-axis-0'\n\t\t}]\n\t},\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\t// Title doesn't make sense for scatter since we format the data as a point\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(item, data) {\n\t\t\t\tvar datasetLabel = data.datasets[item.datasetIndex].label || '';\n\t\t\t\tvar dataPoint = data.datasets[item.datasetIndex].data[item.index];\n\t\t\t\treturn datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n\t\t\t}\n\t\t}\n\t}\n});\n\nvar controller_bubble = core_datasetController.extend({\n\t/**\n\t * @protected\n\t */\n\tdataElementType: elements.Point,\n\n\t/**\n\t * @protected\n\t */\n\tupdate: function(reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar points = meta.data;\n\n\t\t// Update Points\n\t\thelpers$1.each(points, function(point, index) {\n\t\t\tme.updateElement(point, index, reset);\n\t\t});\n\t},\n\n\t/**\n\t * @protected\n\t */\n\tupdateElement: function(point, index, reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar custom = point.custom || {};\n\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\tvar options = me._resolveElementOptions(point, index);\n\t\tvar data = me.getDataset().data[index];\n\t\tvar dsIndex = me.index;\n\n\t\tvar x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n\t\tvar y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n\n\t\tpoint._xScale = xScale;\n\t\tpoint._yScale = yScale;\n\t\tpoint._options = options;\n\t\tpoint._datasetIndex = dsIndex;\n\t\tpoint._index = index;\n\t\tpoint._model = {\n\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\tborderColor: options.borderColor,\n\t\t\tborderWidth: options.borderWidth,\n\t\t\thitRadius: options.hitRadius,\n\t\t\tpointStyle: options.pointStyle,\n\t\t\trotation: options.rotation,\n\t\t\tradius: reset ? 0 : options.radius,\n\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\tx: x,\n\t\t\ty: y,\n\t\t};\n\n\t\tpoint.pivot();\n\t},\n\n\t/**\n\t * @protected\n\t */\n\tsetHoverStyle: function(point) {\n\t\tvar model = point._model;\n\t\tvar options = point._options;\n\t\tvar getHoverColor = helpers$1.getHoverColor;\n\n\t\tpoint.$previousStyle = {\n\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\tborderColor: model.borderColor,\n\t\t\tborderWidth: model.borderWidth,\n\t\t\tradius: model.radius\n\t\t};\n\n\t\tmodel.backgroundColor = valueOrDefault$3(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n\t\tmodel.borderColor = valueOrDefault$3(options.hoverBorderColor, getHoverColor(options.borderColor));\n\t\tmodel.borderWidth = valueOrDefault$3(options.hoverBorderWidth, options.borderWidth);\n\t\tmodel.radius = options.radius + options.hoverRadius;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolveElementOptions: function(point, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar datasets = chart.data.datasets;\n\t\tvar dataset = datasets[me.index];\n\t\tvar custom = point.custom || {};\n\t\tvar options = chart.options.elements.point;\n\t\tvar data = dataset.data[index];\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar keys = [\n\t\t\t'backgroundColor',\n\t\t\t'borderColor',\n\t\t\t'borderWidth',\n\t\t\t'hoverBackgroundColor',\n\t\t\t'hoverBorderColor',\n\t\t\t'hoverBorderWidth',\n\t\t\t'hoverRadius',\n\t\t\t'hitRadius',\n\t\t\t'pointStyle',\n\t\t\t'rotation'\n\t\t];\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$2([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\t// Custom radius resolution\n\t\tvalues.radius = resolve$2([\n\t\t\tcustom.radius,\n\t\t\tdata ? data.r : undefined,\n\t\t\tdataset.radius,\n\t\t\toptions.radius\n\t\t], context, index);\n\n\t\treturn values;\n\t}\n});\n\nvar resolve$3 = helpers$1.options.resolve;\nvar valueOrDefault$4 = helpers$1.valueOrDefault;\n\ncore_defaults._set('doughnut', {\n\tanimation: {\n\t\t// Boolean - Whether we animate the rotation of the Doughnut\n\t\tanimateRotate: true,\n\t\t// Boolean - Whether we animate scaling the Doughnut from the centre\n\t\tanimateScale: false\n\t},\n\thover: {\n\t\tmode: 'single'\n\t},\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar labels = data.labels;\n\n\t\tif (datasets.length) {\n\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\tif (labels[i]) {\n\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t}\n\t\t\t\ttext.push('</li>');\n\t\t\t}\n\t\t}\n\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t},\n\tlegend: {\n\t\tlabels: {\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\tvar custom = arc && arc.custom || {};\n\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\tvar fill = resolve$3([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n\t\t\t\t\t\tvar stroke = resolve$3([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n\t\t\t\t\t\tvar bw = resolve$3([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.index;\n\t\t\tvar chart = this.chart;\n\t\t\tvar i, ilen, meta;\n\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\t// toggle visibility of index if exists\n\t\t\t\tif (meta.data[index]) {\n\t\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tchart.update();\n\t\t}\n\t},\n\n\t// The percentage of the chart that we cut out of the middle.\n\tcutoutPercentage: 50,\n\n\t// The rotation of the chart, where the first data arc begins.\n\trotation: Math.PI * -0.5,\n\n\t// The total circumference of the chart.\n\tcircumference: Math.PI * 2.0,\n\n\t// Need to override these to give a nice default\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar dataLabel = data.labels[tooltipItem.index];\n\t\t\t\tvar value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n\t\t\t\tif (helpers$1.isArray(dataLabel)) {\n\t\t\t\t\t// show value on first line of multiline label\n\t\t\t\t\t// need to clone because we are changing the value\n\t\t\t\t\tdataLabel = dataLabel.slice();\n\t\t\t\t\tdataLabel[0] += value;\n\t\t\t\t} else {\n\t\t\t\t\tdataLabel += value;\n\t\t\t\t}\n\n\t\t\t\treturn dataLabel;\n\t\t\t}\n\t\t}\n\t}\n});\n\nvar controller_doughnut = core_datasetController.extend({\n\n\tdataElementType: elements.Arc,\n\n\tlinkScales: helpers$1.noop,\n\n\t// Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n\tgetRingIndex: function(datasetIndex) {\n\t\tvar ringIndex = 0;\n\n\t\tfor (var j = 0; j < datasetIndex; ++j) {\n\t\t\tif (this.chart.isDatasetVisible(j)) {\n\t\t\t\t++ringIndex;\n\t\t\t}\n\t\t}\n\n\t\treturn ringIndex;\n\t},\n\n\tupdate: function(reset) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar chartArea = chart.chartArea;\n\t\tvar opts = chart.options;\n\t\tvar availableWidth = chartArea.right - chartArea.left;\n\t\tvar availableHeight = chartArea.bottom - chartArea.top;\n\t\tvar minSize = Math.min(availableWidth, availableHeight);\n\t\tvar offset = {x: 0, y: 0};\n\t\tvar meta = me.getMeta();\n\t\tvar arcs = meta.data;\n\t\tvar cutoutPercentage = opts.cutoutPercentage;\n\t\tvar circumference = opts.circumference;\n\t\tvar chartWeight = me._getRingWeight(me.index);\n\t\tvar i, ilen;\n\n\t\t// If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\t\tif (circumference < Math.PI * 2.0) {\n\t\t\tvar startAngle = opts.rotation % (Math.PI * 2.0);\n\t\t\tstartAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n\t\t\tvar endAngle = startAngle + circumference;\n\t\t\tvar start = {x: Math.cos(startAngle), y: Math.sin(startAngle)};\n\t\t\tvar end = {x: Math.cos(endAngle), y: Math.sin(endAngle)};\n\t\t\tvar contains0 = (startAngle <= 0 && endAngle >= 0) || (startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle);\n\t\t\tvar contains90 = (startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle);\n\t\t\tvar contains180 = (startAngle <= -Math.PI && -Math.PI <= endAngle) || (startAngle <= Math.PI && Math.PI <= endAngle);\n\t\t\tvar contains270 = (startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle);\n\t\t\tvar cutout = cutoutPercentage / 100.0;\n\t\t\tvar min = {x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)), y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))};\n\t\t\tvar max = {x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)), y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))};\n\t\t\tvar size = {width: (max.x - min.x) * 0.5, height: (max.y - min.y) * 0.5};\n\t\t\tminSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n\t\t\toffset = {x: (max.x + min.x) * -0.5, y: (max.y + min.y) * -0.5};\n\t\t}\n\n\t\tfor (i = 0, ilen = arcs.length; i < ilen; ++i) {\n\t\t\tarcs[i]._options = me._resolveElementOptions(arcs[i], i);\n\t\t}\n\n\t\tchart.borderWidth = me.getMaxBorderWidth();\n\t\tchart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n\t\tchart.innerRadius = Math.max(cutoutPercentage ? (chart.outerRadius / 100) * (cutoutPercentage) : 0, 0);\n\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / (me._getVisibleDatasetWeightTotal() || 1);\n\t\tchart.offsetX = offset.x * chart.outerRadius;\n\t\tchart.offsetY = offset.y * chart.outerRadius;\n\n\t\tmeta.total = me.calculateTotal();\n\n\t\tme.outerRadius = chart.outerRadius - chart.radiusLength * me._getRingWeightOffset(me.index);\n\t\tme.innerRadius = Math.max(me.outerRadius - chart.radiusLength * chartWeight, 0);\n\n\t\tfor (i = 0, ilen = arcs.length; i < ilen; ++i) {\n\t\t\tme.updateElement(arcs[i], i, reset);\n\t\t}\n\t},\n\n\tupdateElement: function(arc, index, reset) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar chartArea = chart.chartArea;\n\t\tvar opts = chart.options;\n\t\tvar animationOpts = opts.animation;\n\t\tvar centerX = (chartArea.left + chartArea.right) / 2;\n\t\tvar centerY = (chartArea.top + chartArea.bottom) / 2;\n\t\tvar startAngle = opts.rotation; // non reset case handled later\n\t\tvar endAngle = opts.rotation; // non reset case handled later\n\t\tvar dataset = me.getDataset();\n\t\tvar circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n\t\tvar innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n\t\tvar outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n\t\tvar options = arc._options || {};\n\n\t\thelpers$1.extend(arc, {\n\t\t\t// Utility\n\t\t\t_datasetIndex: me.index,\n\t\t\t_index: index,\n\n\t\t\t// Desired view properties\n\t\t\t_model: {\n\t\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\t\tborderColor: options.borderColor,\n\t\t\t\tborderWidth: options.borderWidth,\n\t\t\t\tborderAlign: options.borderAlign,\n\t\t\t\tx: centerX + chart.offsetX,\n\t\t\t\ty: centerY + chart.offsetY,\n\t\t\t\tstartAngle: startAngle,\n\t\t\t\tendAngle: endAngle,\n\t\t\t\tcircumference: circumference,\n\t\t\t\touterRadius: outerRadius,\n\t\t\t\tinnerRadius: innerRadius,\n\t\t\t\tlabel: helpers$1.valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n\t\t\t}\n\t\t});\n\n\t\tvar model = arc._model;\n\n\t\t// Set correct angles if not resetting\n\t\tif (!reset || !animationOpts.animateRotate) {\n\t\t\tif (index === 0) {\n\t\t\t\tmodel.startAngle = opts.rotation;\n\t\t\t} else {\n\t\t\t\tmodel.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n\t\t\t}\n\n\t\t\tmodel.endAngle = model.startAngle + model.circumference;\n\t\t}\n\n\t\tarc.pivot();\n\t},\n\n\tcalculateTotal: function() {\n\t\tvar dataset = this.getDataset();\n\t\tvar meta = this.getMeta();\n\t\tvar total = 0;\n\t\tvar value;\n\n\t\thelpers$1.each(meta.data, function(element, index) {\n\t\t\tvalue = dataset.data[index];\n\t\t\tif (!isNaN(value) && !element.hidden) {\n\t\t\t\ttotal += Math.abs(value);\n\t\t\t}\n\t\t});\n\n\t\t/* if (total === 0) {\n\t\t\ttotal = NaN;\n\t\t}*/\n\n\t\treturn total;\n\t},\n\n\tcalculateCircumference: function(value) {\n\t\tvar total = this.getMeta().total;\n\t\tif (total > 0 && !isNaN(value)) {\n\t\t\treturn (Math.PI * 2.0) * (Math.abs(value) / total);\n\t\t}\n\t\treturn 0;\n\t},\n\n\t// gets the max border or hover width to properly scale pie charts\n\tgetMaxBorderWidth: function(arcs) {\n\t\tvar me = this;\n\t\tvar max = 0;\n\t\tvar chart = me.chart;\n\t\tvar i, ilen, meta, arc, controller, options, borderWidth, hoverWidth;\n\n\t\tif (!arcs) {\n\t\t\t// Find the outmost visible dataset\n\t\t\tfor (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tif (chart.isDatasetVisible(i)) {\n\t\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\t\tarcs = meta.data;\n\t\t\t\t\tif (i !== me.index) {\n\t\t\t\t\t\tcontroller = meta.controller;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!arcs) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tfor (i = 0, ilen = arcs.length; i < ilen; ++i) {\n\t\t\tarc = arcs[i];\n\t\t\toptions = controller ? controller._resolveElementOptions(arc, i) : arc._options;\n\t\t\tif (options.borderAlign !== 'inner') {\n\t\t\t\tborderWidth = options.borderWidth;\n\t\t\t\thoverWidth = options.hoverBorderWidth;\n\n\t\t\t\tmax = borderWidth > max ? borderWidth : max;\n\t\t\t\tmax = hoverWidth > max ? hoverWidth : max;\n\t\t\t}\n\t\t}\n\t\treturn max;\n\t},\n\n\t/**\n\t * @protected\n\t */\n\tsetHoverStyle: function(arc) {\n\t\tvar model = arc._model;\n\t\tvar options = arc._options;\n\t\tvar getHoverColor = helpers$1.getHoverColor;\n\n\t\tarc.$previousStyle = {\n\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\tborderColor: model.borderColor,\n\t\t\tborderWidth: model.borderWidth,\n\t\t};\n\n\t\tmodel.backgroundColor = valueOrDefault$4(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n\t\tmodel.borderColor = valueOrDefault$4(options.hoverBorderColor, getHoverColor(options.borderColor));\n\t\tmodel.borderWidth = valueOrDefault$4(options.hoverBorderWidth, options.borderWidth);\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolveElementOptions: function(arc, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = me.getDataset();\n\t\tvar custom = arc.custom || {};\n\t\tvar options = chart.options.elements.arc;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar keys = [\n\t\t\t'backgroundColor',\n\t\t\t'borderColor',\n\t\t\t'borderWidth',\n\t\t\t'borderAlign',\n\t\t\t'hoverBackgroundColor',\n\t\t\t'hoverBorderColor',\n\t\t\t'hoverBorderWidth',\n\t\t];\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$3([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\treturn values;\n\t},\n\n\t/**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n\t_getRingWeightOffset: function(datasetIndex) {\n\t\tvar ringWeightOffset = 0;\n\n\t\tfor (var i = 0; i < datasetIndex; ++i) {\n\t\t\tif (this.chart.isDatasetVisible(i)) {\n\t\t\t\tringWeightOffset += this._getRingWeight(i);\n\t\t\t}\n\t\t}\n\n\t\treturn ringWeightOffset;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getRingWeight: function(dataSetIndex) {\n\t\treturn Math.max(valueOrDefault$4(this.chart.data.datasets[dataSetIndex].weight, 1), 0);\n\t},\n\n\t/**\n\t * Returns the sum of all visibile data set weights.  This value can be 0.\n\t * @private\n\t */\n\t_getVisibleDatasetWeightTotal: function() {\n\t\treturn this._getRingWeightOffset(this.chart.data.datasets.length);\n\t}\n});\n\ncore_defaults._set('horizontalBar', {\n\thover: {\n\t\tmode: 'index',\n\t\taxis: 'y'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tposition: 'bottom'\n\t\t}],\n\n\t\tyAxes: [{\n\t\t\ttype: 'category',\n\t\t\tposition: 'left',\n\t\t\tcategoryPercentage: 0.8,\n\t\t\tbarPercentage: 0.9,\n\t\t\toffset: true,\n\t\t\tgridLines: {\n\t\t\t\toffsetGridLines: true\n\t\t\t}\n\t\t}]\n\t},\n\n\telements: {\n\t\trectangle: {\n\t\t\tborderSkipped: 'left'\n\t\t}\n\t},\n\n\ttooltips: {\n\t\tmode: 'index',\n\t\taxis: 'y'\n\t}\n});\n\nvar controller_horizontalBar = controller_bar.extend({\n\t/**\n\t * @private\n\t */\n\t_getValueScaleId: function() {\n\t\treturn this.getMeta().xAxisID;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getIndexScaleId: function() {\n\t\treturn this.getMeta().yAxisID;\n\t}\n});\n\nvar valueOrDefault$5 = helpers$1.valueOrDefault;\nvar resolve$4 = helpers$1.options.resolve;\nvar isPointInArea = helpers$1.canvas._isPointInArea;\n\ncore_defaults._set('line', {\n\tshowLines: true,\n\tspanGaps: false,\n\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'category',\n\t\t\tid: 'x-axis-0'\n\t\t}],\n\t\tyAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tid: 'y-axis-0'\n\t\t}]\n\t}\n});\n\nfunction lineEnabled(dataset, options) {\n\treturn valueOrDefault$5(dataset.showLine, options.showLines);\n}\n\nvar controller_line = core_datasetController.extend({\n\n\tdatasetElementType: elements.Line,\n\n\tdataElementType: elements.Point,\n\n\tupdate: function(reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar line = meta.dataset;\n\t\tvar points = meta.data || [];\n\t\tvar scale = me.getScaleForId(meta.yAxisID);\n\t\tvar dataset = me.getDataset();\n\t\tvar showLine = lineEnabled(dataset, me.chart.options);\n\t\tvar i, ilen;\n\n\t\t// Update Line\n\t\tif (showLine) {\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\t\tdataset.lineTension = dataset.tension;\n\t\t\t}\n\n\t\t\t// Utility\n\t\t\tline._scale = scale;\n\t\t\tline._datasetIndex = me.index;\n\t\t\t// Data\n\t\t\tline._children = points;\n\t\t\t// Model\n\t\t\tline._model = me._resolveLineOptions(line);\n\n\t\t\tline.pivot();\n\t\t}\n\n\t\t// Update Points\n\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\tme.updateElement(points[i], i, reset);\n\t\t}\n\n\t\tif (showLine && line._model.tension !== 0) {\n\t\t\tme.updateBezierControlPoints();\n\t\t}\n\n\t\t// Now pivot the point for animation\n\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\tpoints[i].pivot();\n\t\t}\n\t},\n\n\tupdateElement: function(point, index, reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar custom = point.custom || {};\n\t\tvar dataset = me.getDataset();\n\t\tvar datasetIndex = me.index;\n\t\tvar value = dataset.data[index];\n\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\tvar lineModel = meta.dataset._model;\n\t\tvar x, y;\n\n\t\tvar options = me._resolvePointOptions(point, index);\n\n\t\tx = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n\t\ty = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex);\n\n\t\t// Utility\n\t\tpoint._xScale = xScale;\n\t\tpoint._yScale = yScale;\n\t\tpoint._options = options;\n\t\tpoint._datasetIndex = datasetIndex;\n\t\tpoint._index = index;\n\n\t\t// Desired view properties\n\t\tpoint._model = {\n\t\t\tx: x,\n\t\t\ty: y,\n\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t// Appearance\n\t\t\tradius: options.radius,\n\t\t\tpointStyle: options.pointStyle,\n\t\t\trotation: options.rotation,\n\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\tborderColor: options.borderColor,\n\t\t\tborderWidth: options.borderWidth,\n\t\t\ttension: valueOrDefault$5(custom.tension, lineModel ? lineModel.tension : 0),\n\t\t\tsteppedLine: lineModel ? lineModel.steppedLine : false,\n\t\t\t// Tooltip\n\t\t\thitRadius: options.hitRadius\n\t\t};\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolvePointOptions: function(element, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = chart.data.datasets[me.index];\n\t\tvar custom = element.custom || {};\n\t\tvar options = chart.options.elements.point;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar ELEMENT_OPTIONS = {\n\t\t\tbackgroundColor: 'pointBackgroundColor',\n\t\t\tborderColor: 'pointBorderColor',\n\t\t\tborderWidth: 'pointBorderWidth',\n\t\t\thitRadius: 'pointHitRadius',\n\t\t\thoverBackgroundColor: 'pointHoverBackgroundColor',\n\t\t\thoverBorderColor: 'pointHoverBorderColor',\n\t\t\thoverBorderWidth: 'pointHoverBorderWidth',\n\t\t\thoverRadius: 'pointHoverRadius',\n\t\t\tpointStyle: 'pointStyle',\n\t\t\tradius: 'pointRadius',\n\t\t\trotation: 'pointRotation'\n\t\t};\n\t\tvar keys = Object.keys(ELEMENT_OPTIONS);\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$4([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[ELEMENT_OPTIONS[key]],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\treturn values;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolveLineOptions: function(element) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = chart.data.datasets[me.index];\n\t\tvar custom = element.custom || {};\n\t\tvar options = chart.options;\n\t\tvar elementOptions = options.elements.line;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\tvar keys = [\n\t\t\t'backgroundColor',\n\t\t\t'borderWidth',\n\t\t\t'borderColor',\n\t\t\t'borderCapStyle',\n\t\t\t'borderDash',\n\t\t\t'borderDashOffset',\n\t\t\t'borderJoinStyle',\n\t\t\t'fill',\n\t\t\t'cubicInterpolationMode'\n\t\t];\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$4([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[key],\n\t\t\t\telementOptions[key]\n\t\t\t]);\n\t\t}\n\n\t\t// The default behavior of lines is to break at null values, according\n\t\t// to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n\t\t// This option gives lines the ability to span gaps\n\t\tvalues.spanGaps = valueOrDefault$5(dataset.spanGaps, options.spanGaps);\n\t\tvalues.tension = valueOrDefault$5(dataset.lineTension, elementOptions.tension);\n\t\tvalues.steppedLine = resolve$4([custom.steppedLine, dataset.steppedLine, elementOptions.stepped]);\n\n\t\treturn values;\n\t},\n\n\tcalculatePointY: function(value, index, datasetIndex) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar meta = me.getMeta();\n\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\tvar sumPos = 0;\n\t\tvar sumNeg = 0;\n\t\tvar i, ds, dsMeta;\n\n\t\tif (yScale.options.stacked) {\n\t\t\tfor (i = 0; i < datasetIndex; i++) {\n\t\t\t\tds = chart.data.datasets[i];\n\t\t\t\tdsMeta = chart.getDatasetMeta(i);\n\t\t\t\tif (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n\t\t\t\t\tvar stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\t\t\t\t\tif (stackedRightValue < 0) {\n\t\t\t\t\t\tsumNeg += stackedRightValue || 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsumPos += stackedRightValue || 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar rightValue = Number(yScale.getRightValue(value));\n\t\t\tif (rightValue < 0) {\n\t\t\t\treturn yScale.getPixelForValue(sumNeg + rightValue);\n\t\t\t}\n\t\t\treturn yScale.getPixelForValue(sumPos + rightValue);\n\t\t}\n\n\t\treturn yScale.getPixelForValue(value);\n\t},\n\n\tupdateBezierControlPoints: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar meta = me.getMeta();\n\t\tvar lineModel = meta.dataset._model;\n\t\tvar area = chart.chartArea;\n\t\tvar points = meta.data || [];\n\t\tvar i, ilen, model, controlPoints;\n\n\t\t// Only consider points that are drawn in case the spanGaps option is used\n\t\tif (lineModel.spanGaps) {\n\t\t\tpoints = points.filter(function(pt) {\n\t\t\t\treturn !pt._model.skip;\n\t\t\t});\n\t\t}\n\n\t\tfunction capControlPoint(pt, min, max) {\n\t\t\treturn Math.max(Math.min(pt, max), min);\n\t\t}\n\n\t\tif (lineModel.cubicInterpolationMode === 'monotone') {\n\t\t\thelpers$1.splineCurveMonotone(points);\n\t\t} else {\n\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\tmodel = points[i]._model;\n\t\t\t\tcontrolPoints = helpers$1.splineCurve(\n\t\t\t\t\thelpers$1.previousItem(points, i)._model,\n\t\t\t\t\tmodel,\n\t\t\t\t\thelpers$1.nextItem(points, i)._model,\n\t\t\t\t\tlineModel.tension\n\t\t\t\t);\n\t\t\t\tmodel.controlPointPreviousX = controlPoints.previous.x;\n\t\t\t\tmodel.controlPointPreviousY = controlPoints.previous.y;\n\t\t\t\tmodel.controlPointNextX = controlPoints.next.x;\n\t\t\t\tmodel.controlPointNextY = controlPoints.next.y;\n\t\t\t}\n\t\t}\n\n\t\tif (chart.options.elements.line.capBezierPoints) {\n\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\tmodel = points[i]._model;\n\t\t\t\tif (isPointInArea(model, area)) {\n\t\t\t\t\tif (i > 0 && isPointInArea(points[i - 1]._model, area)) {\n\t\t\t\t\t\tmodel.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n\t\t\t\t\t\tmodel.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n\t\t\t\t\t}\n\t\t\t\t\tif (i < points.length - 1 && isPointInArea(points[i + 1]._model, area)) {\n\t\t\t\t\t\tmodel.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n\t\t\t\t\t\tmodel.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar meta = me.getMeta();\n\t\tvar points = meta.data || [];\n\t\tvar area = chart.chartArea;\n\t\tvar ilen = points.length;\n\t\tvar halfBorderWidth;\n\t\tvar i = 0;\n\n\t\tif (lineEnabled(me.getDataset(), chart.options)) {\n\t\t\thalfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n\n\t\t\thelpers$1.canvas.clipArea(chart.ctx, {\n\t\t\t\tleft: area.left,\n\t\t\t\tright: area.right,\n\t\t\t\ttop: area.top - halfBorderWidth,\n\t\t\t\tbottom: area.bottom + halfBorderWidth\n\t\t\t});\n\n\t\t\tmeta.dataset.draw();\n\n\t\t\thelpers$1.canvas.unclipArea(chart.ctx);\n\t\t}\n\n\t\t// Draw the points\n\t\tfor (; i < ilen; ++i) {\n\t\t\tpoints[i].draw(area);\n\t\t}\n\t},\n\n\t/**\n\t * @protected\n\t */\n\tsetHoverStyle: function(point) {\n\t\tvar model = point._model;\n\t\tvar options = point._options;\n\t\tvar getHoverColor = helpers$1.getHoverColor;\n\n\t\tpoint.$previousStyle = {\n\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\tborderColor: model.borderColor,\n\t\t\tborderWidth: model.borderWidth,\n\t\t\tradius: model.radius\n\t\t};\n\n\t\tmodel.backgroundColor = valueOrDefault$5(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n\t\tmodel.borderColor = valueOrDefault$5(options.hoverBorderColor, getHoverColor(options.borderColor));\n\t\tmodel.borderWidth = valueOrDefault$5(options.hoverBorderWidth, options.borderWidth);\n\t\tmodel.radius = valueOrDefault$5(options.hoverRadius, options.radius);\n\t},\n});\n\nvar resolve$5 = helpers$1.options.resolve;\n\ncore_defaults._set('polarArea', {\n\tscale: {\n\t\ttype: 'radialLinear',\n\t\tangleLines: {\n\t\t\tdisplay: false\n\t\t},\n\t\tgridLines: {\n\t\t\tcircular: true\n\t\t},\n\t\tpointLabels: {\n\t\t\tdisplay: false\n\t\t},\n\t\tticks: {\n\t\t\tbeginAtZero: true\n\t\t}\n\t},\n\n\t// Boolean - Whether to animate the rotation of the chart\n\tanimation: {\n\t\tanimateRotate: true,\n\t\tanimateScale: true\n\t},\n\n\tstartAngle: -0.5 * Math.PI,\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar labels = data.labels;\n\n\t\tif (datasets.length) {\n\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\tif (labels[i]) {\n\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t}\n\t\t\t\ttext.push('</li>');\n\t\t\t}\n\t\t}\n\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t},\n\tlegend: {\n\t\tlabels: {\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\tvar custom = arc.custom || {};\n\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\tvar fill = resolve$5([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n\t\t\t\t\t\tvar stroke = resolve$5([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n\t\t\t\t\t\tvar bw = resolve$5([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.index;\n\t\t\tvar chart = this.chart;\n\t\t\tvar i, ilen, meta;\n\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t}\n\n\t\t\tchart.update();\n\t\t}\n\t},\n\n\t// Need to override these to give a nice default\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(item, data) {\n\t\t\t\treturn data.labels[item.index] + ': ' + item.yLabel;\n\t\t\t}\n\t\t}\n\t}\n});\n\nvar controller_polarArea = core_datasetController.extend({\n\n\tdataElementType: elements.Arc,\n\n\tlinkScales: helpers$1.noop,\n\n\tupdate: function(reset) {\n\t\tvar me = this;\n\t\tvar dataset = me.getDataset();\n\t\tvar meta = me.getMeta();\n\t\tvar start = me.chart.options.startAngle || 0;\n\t\tvar starts = me._starts = [];\n\t\tvar angles = me._angles = [];\n\t\tvar arcs = meta.data;\n\t\tvar i, ilen, angle;\n\n\t\tme._updateRadius();\n\n\t\tmeta.count = me.countVisibleElements();\n\n\t\tfor (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n\t\t\tstarts[i] = start;\n\t\t\tangle = me._computeAngle(i);\n\t\t\tangles[i] = angle;\n\t\t\tstart += angle;\n\t\t}\n\n\t\tfor (i = 0, ilen = arcs.length; i < ilen; ++i) {\n\t\t\tarcs[i]._options = me._resolveElementOptions(arcs[i], i);\n\t\t\tme.updateElement(arcs[i], i, reset);\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_updateRadius: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar chartArea = chart.chartArea;\n\t\tvar opts = chart.options;\n\t\tvar minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n\t\tchart.outerRadius = Math.max(minSize / 2, 0);\n\t\tchart.innerRadius = Math.max(opts.cutoutPercentage ? (chart.outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n\n\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.index);\n\t\tme.innerRadius = me.outerRadius - chart.radiusLength;\n\t},\n\n\tupdateElement: function(arc, index, reset) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = me.getDataset();\n\t\tvar opts = chart.options;\n\t\tvar animationOpts = opts.animation;\n\t\tvar scale = chart.scale;\n\t\tvar labels = chart.data.labels;\n\n\t\tvar centerX = scale.xCenter;\n\t\tvar centerY = scale.yCenter;\n\n\t\t// var negHalfPI = -0.5 * Math.PI;\n\t\tvar datasetStartAngle = opts.startAngle;\n\t\tvar distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\t\tvar startAngle = me._starts[index];\n\t\tvar endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n\n\t\tvar resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\t\tvar options = arc._options || {};\n\n\t\thelpers$1.extend(arc, {\n\t\t\t// Utility\n\t\t\t_datasetIndex: me.index,\n\t\t\t_index: index,\n\t\t\t_scale: scale,\n\n\t\t\t// Desired view properties\n\t\t\t_model: {\n\t\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\t\tborderColor: options.borderColor,\n\t\t\t\tborderWidth: options.borderWidth,\n\t\t\t\tborderAlign: options.borderAlign,\n\t\t\t\tx: centerX,\n\t\t\t\ty: centerY,\n\t\t\t\tinnerRadius: 0,\n\t\t\t\touterRadius: reset ? resetRadius : distance,\n\t\t\t\tstartAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n\t\t\t\tendAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n\t\t\t\tlabel: helpers$1.valueAtIndexOrDefault(labels, index, labels[index])\n\t\t\t}\n\t\t});\n\n\t\tarc.pivot();\n\t},\n\n\tcountVisibleElements: function() {\n\t\tvar dataset = this.getDataset();\n\t\tvar meta = this.getMeta();\n\t\tvar count = 0;\n\n\t\thelpers$1.each(meta.data, function(element, index) {\n\t\t\tif (!isNaN(dataset.data[index]) && !element.hidden) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t});\n\n\t\treturn count;\n\t},\n\n\t/**\n\t * @protected\n\t */\n\tsetHoverStyle: function(arc) {\n\t\tvar model = arc._model;\n\t\tvar options = arc._options;\n\t\tvar getHoverColor = helpers$1.getHoverColor;\n\t\tvar valueOrDefault = helpers$1.valueOrDefault;\n\n\t\tarc.$previousStyle = {\n\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\tborderColor: model.borderColor,\n\t\t\tborderWidth: model.borderWidth,\n\t\t};\n\n\t\tmodel.backgroundColor = valueOrDefault(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n\t\tmodel.borderColor = valueOrDefault(options.hoverBorderColor, getHoverColor(options.borderColor));\n\t\tmodel.borderWidth = valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolveElementOptions: function(arc, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = me.getDataset();\n\t\tvar custom = arc.custom || {};\n\t\tvar options = chart.options.elements.arc;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar keys = [\n\t\t\t'backgroundColor',\n\t\t\t'borderColor',\n\t\t\t'borderWidth',\n\t\t\t'borderAlign',\n\t\t\t'hoverBackgroundColor',\n\t\t\t'hoverBorderColor',\n\t\t\t'hoverBorderWidth',\n\t\t];\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$5([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\treturn values;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_computeAngle: function(index) {\n\t\tvar me = this;\n\t\tvar count = this.getMeta().count;\n\t\tvar dataset = me.getDataset();\n\t\tvar meta = me.getMeta();\n\n\t\tif (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n\t\t\treturn 0;\n\t\t}\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: me.chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\treturn resolve$5([\n\t\t\tme.chart.options.elements.arc.angle,\n\t\t\t(2 * Math.PI) / count\n\t\t], context, index);\n\t}\n});\n\ncore_defaults._set('pie', helpers$1.clone(core_defaults.doughnut));\ncore_defaults._set('pie', {\n\tcutoutPercentage: 0\n});\n\n// Pie charts are Doughnut chart with different defaults\nvar controller_pie = controller_doughnut;\n\nvar valueOrDefault$6 = helpers$1.valueOrDefault;\nvar resolve$6 = helpers$1.options.resolve;\n\ncore_defaults._set('radar', {\n\tscale: {\n\t\ttype: 'radialLinear'\n\t},\n\telements: {\n\t\tline: {\n\t\t\ttension: 0 // no bezier in radar\n\t\t}\n\t}\n});\n\nvar controller_radar = core_datasetController.extend({\n\n\tdatasetElementType: elements.Line,\n\n\tdataElementType: elements.Point,\n\n\tlinkScales: helpers$1.noop,\n\n\tupdate: function(reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar line = meta.dataset;\n\t\tvar points = meta.data || [];\n\t\tvar scale = me.chart.scale;\n\t\tvar dataset = me.getDataset();\n\t\tvar i, ilen;\n\n\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\tdataset.lineTension = dataset.tension;\n\t\t}\n\n\t\t// Utility\n\t\tline._scale = scale;\n\t\tline._datasetIndex = me.index;\n\t\t// Data\n\t\tline._children = points;\n\t\tline._loop = true;\n\t\t// Model\n\t\tline._model = me._resolveLineOptions(line);\n\n\t\tline.pivot();\n\n\t\t// Update Points\n\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\tme.updateElement(points[i], i, reset);\n\t\t}\n\n\t\t// Update bezier control points\n\t\tme.updateBezierControlPoints();\n\n\t\t// Now pivot the point for animation\n\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\tpoints[i].pivot();\n\t\t}\n\t},\n\n\tupdateElement: function(point, index, reset) {\n\t\tvar me = this;\n\t\tvar custom = point.custom || {};\n\t\tvar dataset = me.getDataset();\n\t\tvar scale = me.chart.scale;\n\t\tvar pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\t\tvar options = me._resolvePointOptions(point, index);\n\t\tvar lineModel = me.getMeta().dataset._model;\n\t\tvar x = reset ? scale.xCenter : pointPosition.x;\n\t\tvar y = reset ? scale.yCenter : pointPosition.y;\n\n\t\t// Utility\n\t\tpoint._scale = scale;\n\t\tpoint._options = options;\n\t\tpoint._datasetIndex = me.index;\n\t\tpoint._index = index;\n\n\t\t// Desired view properties\n\t\tpoint._model = {\n\t\t\tx: x, // value not used in dataset scale, but we want a consistent API between scales\n\t\t\ty: y,\n\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t// Appearance\n\t\t\tradius: options.radius,\n\t\t\tpointStyle: options.pointStyle,\n\t\t\trotation: options.rotation,\n\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\tborderColor: options.borderColor,\n\t\t\tborderWidth: options.borderWidth,\n\t\t\ttension: valueOrDefault$6(custom.tension, lineModel ? lineModel.tension : 0),\n\n\t\t\t// Tooltip\n\t\t\thitRadius: options.hitRadius\n\t\t};\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolvePointOptions: function(element, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = chart.data.datasets[me.index];\n\t\tvar custom = element.custom || {};\n\t\tvar options = chart.options.elements.point;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar ELEMENT_OPTIONS = {\n\t\t\tbackgroundColor: 'pointBackgroundColor',\n\t\t\tborderColor: 'pointBorderColor',\n\t\t\tborderWidth: 'pointBorderWidth',\n\t\t\thitRadius: 'pointHitRadius',\n\t\t\thoverBackgroundColor: 'pointHoverBackgroundColor',\n\t\t\thoverBorderColor: 'pointHoverBorderColor',\n\t\t\thoverBorderWidth: 'pointHoverBorderWidth',\n\t\t\thoverRadius: 'pointHoverRadius',\n\t\t\tpointStyle: 'pointStyle',\n\t\t\tradius: 'pointRadius',\n\t\t\trotation: 'pointRotation'\n\t\t};\n\t\tvar keys = Object.keys(ELEMENT_OPTIONS);\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$6([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[ELEMENT_OPTIONS[key]],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\treturn values;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolveLineOptions: function(element) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = chart.data.datasets[me.index];\n\t\tvar custom = element.custom || {};\n\t\tvar options = chart.options.elements.line;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\tvar keys = [\n\t\t\t'backgroundColor',\n\t\t\t'borderWidth',\n\t\t\t'borderColor',\n\t\t\t'borderCapStyle',\n\t\t\t'borderDash',\n\t\t\t'borderDashOffset',\n\t\t\t'borderJoinStyle',\n\t\t\t'fill'\n\t\t];\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$6([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t]);\n\t\t}\n\n\t\tvalues.tension = valueOrDefault$6(dataset.lineTension, options.tension);\n\n\t\treturn values;\n\t},\n\n\tupdateBezierControlPoints: function() {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar area = me.chart.chartArea;\n\t\tvar points = meta.data || [];\n\t\tvar i, ilen, model, controlPoints;\n\n\t\tfunction capControlPoint(pt, min, max) {\n\t\t\treturn Math.max(Math.min(pt, max), min);\n\t\t}\n\n\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\tmodel = points[i]._model;\n\t\t\tcontrolPoints = helpers$1.splineCurve(\n\t\t\t\thelpers$1.previousItem(points, i, true)._model,\n\t\t\t\tmodel,\n\t\t\t\thelpers$1.nextItem(points, i, true)._model,\n\t\t\t\tmodel.tension\n\t\t\t);\n\n\t\t\t// Prevent the bezier going outside of the bounds of the graph\n\t\t\tmodel.controlPointPreviousX = capControlPoint(controlPoints.previous.x, area.left, area.right);\n\t\t\tmodel.controlPointPreviousY = capControlPoint(controlPoints.previous.y, area.top, area.bottom);\n\t\t\tmodel.controlPointNextX = capControlPoint(controlPoints.next.x, area.left, area.right);\n\t\t\tmodel.controlPointNextY = capControlPoint(controlPoints.next.y, area.top, area.bottom);\n\t\t}\n\t},\n\n\tsetHoverStyle: function(point) {\n\t\tvar model = point._model;\n\t\tvar options = point._options;\n\t\tvar getHoverColor = helpers$1.getHoverColor;\n\n\t\tpoint.$previousStyle = {\n\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\tborderColor: model.borderColor,\n\t\t\tborderWidth: model.borderWidth,\n\t\t\tradius: model.radius\n\t\t};\n\n\t\tmodel.backgroundColor = valueOrDefault$6(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n\t\tmodel.borderColor = valueOrDefault$6(options.hoverBorderColor, getHoverColor(options.borderColor));\n\t\tmodel.borderWidth = valueOrDefault$6(options.hoverBorderWidth, options.borderWidth);\n\t\tmodel.radius = valueOrDefault$6(options.hoverRadius, options.radius);\n\t}\n});\n\ncore_defaults._set('scatter', {\n\thover: {\n\t\tmode: 'single'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\tid: 'x-axis-1',    // need an ID so datasets can reference the scale\n\t\t\ttype: 'linear',    // scatter should not use a category axis\n\t\t\tposition: 'bottom'\n\t\t}],\n\t\tyAxes: [{\n\t\t\tid: 'y-axis-1',\n\t\t\ttype: 'linear',\n\t\t\tposition: 'left'\n\t\t}]\n\t},\n\n\tshowLines: false,\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';     // doesn't make sense for scatter since data are formatted as a point\n\t\t\t},\n\t\t\tlabel: function(item) {\n\t\t\t\treturn '(' + item.xLabel + ', ' + item.yLabel + ')';\n\t\t\t}\n\t\t}\n\t}\n});\n\n// Scatter charts use line controllers\nvar controller_scatter = controller_line;\n\n// NOTE export a map in which the key represents the controller type, not\n// the class, and so must be CamelCase in order to be correctly retrieved\n// by the controller in core.controller.js (`controllers[meta.type]`).\n\nvar controllers = {\n\tbar: controller_bar,\n\tbubble: controller_bubble,\n\tdoughnut: controller_doughnut,\n\thorizontalBar: controller_horizontalBar,\n\tline: controller_line,\n\tpolarArea: controller_polarArea,\n\tpie: controller_pie,\n\tradar: controller_radar,\n\tscatter: controller_scatter\n};\n\n/**\n * Helper function to get relative position for an event\n * @param {Event|IEvent} event - The event to get the position for\n * @param {Chart} chart - The chart\n * @returns {object} the event position\n */\nfunction getRelativePosition(e, chart) {\n\tif (e.native) {\n\t\treturn {\n\t\t\tx: e.x,\n\t\t\ty: e.y\n\t\t};\n\t}\n\n\treturn helpers$1.getRelativePosition(e, chart);\n}\n\n/**\n * Helper function to traverse all of the visible elements in the chart\n * @param {Chart} chart - the chart\n * @param {function} handler - the callback to execute for each visible item\n */\nfunction parseVisibleItems(chart, handler) {\n\tvar datasets = chart.data.datasets;\n\tvar meta, i, j, ilen, jlen;\n\n\tfor (i = 0, ilen = datasets.length; i < ilen; ++i) {\n\t\tif (!chart.isDatasetVisible(i)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tmeta = chart.getDatasetMeta(i);\n\t\tfor (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n\t\t\tvar element = meta.data[j];\n\t\t\tif (!element._view.skip) {\n\t\t\t\thandler(element);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {ChartElement[]} items - elements to filter\n * @param {object} position - the point to be nearest to\n * @return {ChartElement[]} the nearest items\n */\nfunction getIntersectItems(chart, position) {\n\tvar elements = [];\n\n\tparseVisibleItems(chart, function(element) {\n\t\tif (element.inRange(position.x, position.y)) {\n\t\t\telements.push(element);\n\t\t}\n\t});\n\n\treturn elements;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in teh chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {object} position - the point to be nearest to\n * @param {boolean} intersect - if true, only consider items that intersect the position\n * @param {function} distanceMetric - function to provide the distance between points\n * @return {ChartElement[]} the nearest items\n */\nfunction getNearestItems(chart, position, intersect, distanceMetric) {\n\tvar minDistance = Number.POSITIVE_INFINITY;\n\tvar nearestItems = [];\n\n\tparseVisibleItems(chart, function(element) {\n\t\tif (intersect && !element.inRange(position.x, position.y)) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar center = element.getCenterPoint();\n\t\tvar distance = distanceMetric(position, center);\n\t\tif (distance < minDistance) {\n\t\t\tnearestItems = [element];\n\t\t\tminDistance = distance;\n\t\t} else if (distance === minDistance) {\n\t\t\t// Can have multiple items at the same distance in which case we sort by size\n\t\t\tnearestItems.push(element);\n\t\t}\n\t});\n\n\treturn nearestItems;\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy\n */\nfunction getDistanceMetricForAxis(axis) {\n\tvar useX = axis.indexOf('x') !== -1;\n\tvar useY = axis.indexOf('y') !== -1;\n\n\treturn function(pt1, pt2) {\n\t\tvar deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n\t\tvar deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n\t\treturn Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n\t};\n}\n\nfunction indexMode(chart, e, options) {\n\tvar position = getRelativePosition(e, chart);\n\t// Default axis for index mode is 'x' to match old behaviour\n\toptions.axis = options.axis || 'x';\n\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\tvar elements = [];\n\n\tif (!items.length) {\n\t\treturn [];\n\t}\n\n\tchart.data.datasets.forEach(function(dataset, datasetIndex) {\n\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\tvar element = meta.data[items[0]._index];\n\n\t\t\t// don't count items that are skipped (null data)\n\t\t\tif (element && !element._view.skip) {\n\t\t\t\telements.push(element);\n\t\t\t}\n\t\t}\n\t});\n\n\treturn elements;\n}\n\n/**\n * @interface IInteractionOptions\n */\n/**\n * If true, only consider items that intersect the point\n * @name IInterfaceOptions#boolean\n * @type Boolean\n */\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nvar core_interaction = {\n\t// Helper function for different modes\n\tmodes: {\n\t\tsingle: function(chart, e) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar elements = [];\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\telements.push(element);\n\t\t\t\t\treturn elements;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn elements.slice(0, 1);\n\t\t},\n\n\t\t/**\n\t\t * @function Chart.Interaction.modes.label\n\t\t * @deprecated since version 2.4.0\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\tlabel: indexMode,\n\n\t\t/**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {IInteractionOptions} options - options to use during interaction\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tindex: indexMode,\n\n\t\t/**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {IInteractionOptions} options - options to use during interaction\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tdataset: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\toptions.axis = options.axis || 'xy';\n\t\t\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\t\t\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n\t\t\tif (items.length > 0) {\n\t\t\t\titems = chart.getDatasetMeta(items[0]._datasetIndex).data;\n\t\t\t}\n\n\t\t\treturn items;\n\t\t},\n\n\t\t/**\n\t\t * @function Chart.Interaction.modes.x-axis\n\t\t * @deprecated since version 2.4.0. Use index mode and intersect == true\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\t'x-axis': function(chart, e) {\n\t\t\treturn indexMode(chart, e, {intersect: false});\n\t\t},\n\n\t\t/**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tpoint: function(chart, e) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\treturn getIntersectItems(chart, position);\n\t\t},\n\n\t\t/**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {IInteractionOptions} options - options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tnearest: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\toptions.axis = options.axis || 'xy';\n\t\t\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\t\t\treturn getNearestItems(chart, position, options.intersect, distanceMetric);\n\t\t},\n\n\t\t/**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {IInteractionOptions} options - options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tx: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar items = [];\n\t\t\tvar intersectsItem = false;\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inXRange(position.x)) {\n\t\t\t\t\titems.push(element);\n\t\t\t\t}\n\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\tintersectsItem = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t// that intersect the position, return nothing\n\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\titems = [];\n\t\t\t}\n\t\t\treturn items;\n\t\t},\n\n\t\t/**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {IInteractionOptions} options - options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\ty: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar items = [];\n\t\t\tvar intersectsItem = false;\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inYRange(position.y)) {\n\t\t\t\t\titems.push(element);\n\t\t\t\t}\n\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\tintersectsItem = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t// that intersect the position, return nothing\n\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\titems = [];\n\t\t\t}\n\t\t\treturn items;\n\t\t}\n\t}\n};\n\nfunction filterByPosition(array, position) {\n\treturn helpers$1.where(array, function(v) {\n\t\treturn v.position === position;\n\t});\n}\n\nfunction sortByWeight(array, reverse) {\n\tarray.forEach(function(v, i) {\n\t\tv._tmpIndex_ = i;\n\t\treturn v;\n\t});\n\tarray.sort(function(a, b) {\n\t\tvar v0 = reverse ? b : a;\n\t\tvar v1 = reverse ? a : b;\n\t\treturn v0.weight === v1.weight ?\n\t\t\tv0._tmpIndex_ - v1._tmpIndex_ :\n\t\t\tv0.weight - v1.weight;\n\t});\n\tarray.forEach(function(v) {\n\t\tdelete v._tmpIndex_;\n\t});\n}\n\nfunction findMaxPadding(boxes) {\n\tvar top = 0;\n\tvar left = 0;\n\tvar bottom = 0;\n\tvar right = 0;\n\thelpers$1.each(boxes, function(box) {\n\t\tif (box.getPadding) {\n\t\t\tvar boxPadding = box.getPadding();\n\t\t\ttop = Math.max(top, boxPadding.top);\n\t\t\tleft = Math.max(left, boxPadding.left);\n\t\t\tbottom = Math.max(bottom, boxPadding.bottom);\n\t\t\tright = Math.max(right, boxPadding.right);\n\t\t}\n\t});\n\treturn {\n\t\ttop: top,\n\t\tleft: left,\n\t\tbottom: bottom,\n\t\tright: right\n\t};\n}\n\nfunction addSizeByPosition(boxes, size) {\n\thelpers$1.each(boxes, function(box) {\n\t\tsize[box.position] += box.isHorizontal() ? box.height : box.width;\n\t});\n}\n\ncore_defaults._set('global', {\n\tlayout: {\n\t\tpadding: {\n\t\t\ttop: 0,\n\t\t\tright: 0,\n\t\t\tbottom: 0,\n\t\t\tleft: 0\n\t\t}\n\t}\n});\n\n/**\n * @interface ILayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} getPadding -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nvar core_layouts = {\n\tdefaults: {},\n\n\t/**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {ILayoutItem} item - the item to add to be layed out\n\t */\n\taddBox: function(chart, item) {\n\t\tif (!chart.boxes) {\n\t\t\tchart.boxes = [];\n\t\t}\n\n\t\t// initialize item with default values\n\t\titem.fullWidth = item.fullWidth || false;\n\t\titem.position = item.position || 'top';\n\t\titem.weight = item.weight || 0;\n\n\t\tchart.boxes.push(item);\n\t},\n\n\t/**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {ILayoutItem} layoutItem - the item to remove from the layout\n\t */\n\tremoveBox: function(chart, layoutItem) {\n\t\tvar index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\t\tif (index !== -1) {\n\t\t\tchart.boxes.splice(index, 1);\n\t\t}\n\t},\n\n\t/**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {ILayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n\tconfigure: function(chart, item, options) {\n\t\tvar props = ['fullWidth', 'position', 'weight'];\n\t\tvar ilen = props.length;\n\t\tvar i = 0;\n\t\tvar prop;\n\n\t\tfor (; i < ilen; ++i) {\n\t\t\tprop = props[i];\n\t\t\tif (options.hasOwnProperty(prop)) {\n\t\t\t\titem[prop] = options[prop];\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n\t */\n\tupdate: function(chart, width, height) {\n\t\tif (!chart) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar layoutOptions = chart.options.layout || {};\n\t\tvar padding = helpers$1.options.toPadding(layoutOptions.padding);\n\t\tvar leftPadding = padding.left;\n\t\tvar rightPadding = padding.right;\n\t\tvar topPadding = padding.top;\n\t\tvar bottomPadding = padding.bottom;\n\n\t\tvar leftBoxes = filterByPosition(chart.boxes, 'left');\n\t\tvar rightBoxes = filterByPosition(chart.boxes, 'right');\n\t\tvar topBoxes = filterByPosition(chart.boxes, 'top');\n\t\tvar bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n\t\tvar chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea');\n\n\t\t// Sort boxes by weight. A higher weight is further away from the chart area\n\t\tsortByWeight(leftBoxes, true);\n\t\tsortByWeight(rightBoxes, false);\n\t\tsortByWeight(topBoxes, true);\n\t\tsortByWeight(bottomBoxes, false);\n\n\t\tvar verticalBoxes = leftBoxes.concat(rightBoxes);\n\t\tvar horizontalBoxes = topBoxes.concat(bottomBoxes);\n\t\tvar outerBoxes = verticalBoxes.concat(horizontalBoxes);\n\n\t\t// Essentially we now have any number of boxes on each of the 4 sides.\n\t\t// Our canvas looks like the following.\n\t\t// The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n\t\t// B1 is the bottom axis\n\t\t// There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n\t\t// These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n\t\t// an error will be thrown.\n\t\t//\n\t\t// |----------------------------------------------------|\n\t\t// |                  T1 (Full Width)                   |\n\t\t// |----------------------------------------------------|\n\t\t// |    |    |                 T2                  |    |\n\t\t// |    |----|-------------------------------------|----|\n\t\t// |    |    | C1 |                           | C2 |    |\n\t\t// |    |    |----|                           |----|    |\n\t\t// |    |    |                                     |    |\n\t\t// | L1 | L2 |           ChartArea (C0)            | R1 |\n\t\t// |    |    |                                     |    |\n\t\t// |    |    |----|                           |----|    |\n\t\t// |    |    | C3 |                           | C4 |    |\n\t\t// |    |----|-------------------------------------|----|\n\t\t// |    |    |                 B1                  |    |\n\t\t// |----------------------------------------------------|\n\t\t// |                  B2 (Full Width)                   |\n\t\t// |----------------------------------------------------|\n\t\t//\n\t\t// What we do to find the best sizing, we do the following\n\t\t// 1. Determine the minimum size of the chart area.\n\t\t// 2. Split the remaining width equally between each vertical axis\n\t\t// 3. Split the remaining height equally between each horizontal axis\n\t\t// 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n\t\t// 5. Adjust the sizes of each axis based on it's minimum reported size.\n\t\t// 6. Refit each axis\n\t\t// 7. Position each axis in the final location\n\t\t// 8. Tell the chart the final location of the chart area\n\t\t// 9. Tell any axes that overlay the chart area the positions of the chart area\n\n\t\t// Step 1\n\t\tvar chartWidth = width - leftPadding - rightPadding;\n\t\tvar chartHeight = height - topPadding - bottomPadding;\n\t\tvar chartAreaWidth = chartWidth / 2; // min 50%\n\n\t\t// Step 2\n\t\tvar verticalBoxWidth = (width - chartAreaWidth) / verticalBoxes.length;\n\n\t\t// Step 3\n\t\t// TODO re-limit horizontal axis height (this limit has affected only padding calculation since PR 1837)\n\t\t// var horizontalBoxHeight = (height - chartAreaHeight) / horizontalBoxes.length;\n\n\t\t// Step 4\n\t\tvar maxChartAreaWidth = chartWidth;\n\t\tvar maxChartAreaHeight = chartHeight;\n\t\tvar outerBoxSizes = {top: topPadding, left: leftPadding, bottom: bottomPadding, right: rightPadding};\n\t\tvar minBoxSizes = [];\n\t\tvar maxPadding;\n\n\t\tfunction getMinimumBoxSize(box) {\n\t\t\tvar minSize;\n\t\t\tvar isHorizontal = box.isHorizontal();\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2);\n\t\t\t\tmaxChartAreaHeight -= minSize.height;\n\t\t\t} else {\n\t\t\t\tminSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n\t\t\t\tmaxChartAreaWidth -= minSize.width;\n\t\t\t}\n\n\t\t\tminBoxSizes.push({\n\t\t\t\thorizontal: isHorizontal,\n\t\t\t\twidth: minSize.width,\n\t\t\t\tbox: box,\n\t\t\t});\n\t\t}\n\n\t\thelpers$1.each(outerBoxes, getMinimumBoxSize);\n\n\t\t// If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\t\tmaxPadding = findMaxPadding(outerBoxes);\n\n\t\t// At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n\t\t// be if the axes are drawn at their minimum sizes.\n\t\t// Steps 5 & 6\n\n\t\t// Function to fit a box\n\t\tfunction fitBox(box) {\n\t\t\tvar minBoxSize = helpers$1.findNextWhere(minBoxSizes, function(minBox) {\n\t\t\t\treturn minBox.box === box;\n\t\t\t});\n\n\t\t\tif (minBoxSize) {\n\t\t\t\tif (minBoxSize.horizontal) {\n\t\t\t\t\tvar scaleMargin = {\n\t\t\t\t\t\tleft: Math.max(outerBoxSizes.left, maxPadding.left),\n\t\t\t\t\t\tright: Math.max(outerBoxSizes.right, maxPadding.right),\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tbottom: 0\n\t\t\t\t\t};\n\n\t\t\t\t\t// Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n\t\t\t\t\t// on the margin. Sometimes they need to increase in size slightly\n\t\t\t\t\tbox.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n\t\t\t\t} else {\n\t\t\t\t\tbox.update(minBoxSize.width, maxChartAreaHeight);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Update, and calculate the left and right margins for the horizontal boxes\n\t\thelpers$1.each(verticalBoxes, fitBox);\n\t\taddSizeByPosition(verticalBoxes, outerBoxSizes);\n\n\t\t// Set the Left and Right margins for the horizontal boxes\n\t\thelpers$1.each(horizontalBoxes, fitBox);\n\t\taddSizeByPosition(horizontalBoxes, outerBoxSizes);\n\n\t\tfunction finalFitVerticalBox(box) {\n\t\t\tvar minBoxSize = helpers$1.findNextWhere(minBoxSizes, function(minSize) {\n\t\t\t\treturn minSize.box === box;\n\t\t\t});\n\n\t\t\tvar scaleMargin = {\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: outerBoxSizes.top,\n\t\t\t\tbottom: outerBoxSizes.bottom\n\t\t\t};\n\n\t\t\tif (minBoxSize) {\n\t\t\t\tbox.update(minBoxSize.width, maxChartAreaHeight, scaleMargin);\n\t\t\t}\n\t\t}\n\n\t\t// Let the left layout know the final margin\n\t\thelpers$1.each(verticalBoxes, finalFitVerticalBox);\n\n\t\t// Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\t\touterBoxSizes = {top: topPadding, left: leftPadding, bottom: bottomPadding, right: rightPadding};\n\t\taddSizeByPosition(outerBoxes, outerBoxSizes);\n\n\t\t// We may be adding some padding to account for rotated x axis labels\n\t\tvar leftPaddingAddition = Math.max(maxPadding.left - outerBoxSizes.left, 0);\n\t\touterBoxSizes.left += leftPaddingAddition;\n\t\touterBoxSizes.right += Math.max(maxPadding.right - outerBoxSizes.right, 0);\n\n\t\tvar topPaddingAddition = Math.max(maxPadding.top - outerBoxSizes.top, 0);\n\t\touterBoxSizes.top += topPaddingAddition;\n\t\touterBoxSizes.bottom += Math.max(maxPadding.bottom - outerBoxSizes.bottom, 0);\n\n\t\t// Figure out if our chart area changed. This would occur if the dataset layout label rotation\n\t\t// changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n\t\t// without calling `fit` again\n\t\tvar newMaxChartAreaHeight = height - outerBoxSizes.top - outerBoxSizes.bottom;\n\t\tvar newMaxChartAreaWidth = width - outerBoxSizes.left - outerBoxSizes.right;\n\n\t\tif (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n\t\t\thelpers$1.each(verticalBoxes, function(box) {\n\t\t\t\tbox.height = newMaxChartAreaHeight;\n\t\t\t});\n\n\t\t\thelpers$1.each(horizontalBoxes, function(box) {\n\t\t\t\tif (!box.fullWidth) {\n\t\t\t\t\tbox.width = newMaxChartAreaWidth;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmaxChartAreaHeight = newMaxChartAreaHeight;\n\t\t\tmaxChartAreaWidth = newMaxChartAreaWidth;\n\t\t}\n\n\t\t// Step 7 - Position the boxes\n\t\tvar left = leftPadding + leftPaddingAddition;\n\t\tvar top = topPadding + topPaddingAddition;\n\n\t\tfunction placeBox(box) {\n\t\t\tif (box.isHorizontal()) {\n\t\t\t\tbox.left = box.fullWidth ? leftPadding : outerBoxSizes.left;\n\t\t\t\tbox.right = box.fullWidth ? width - rightPadding : outerBoxSizes.left + maxChartAreaWidth;\n\t\t\t\tbox.top = top;\n\t\t\t\tbox.bottom = top + box.height;\n\n\t\t\t\t// Move to next point\n\t\t\t\ttop = box.bottom;\n\n\t\t\t} else {\n\n\t\t\t\tbox.left = left;\n\t\t\t\tbox.right = left + box.width;\n\t\t\t\tbox.top = outerBoxSizes.top;\n\t\t\t\tbox.bottom = outerBoxSizes.top + maxChartAreaHeight;\n\n\t\t\t\t// Move to next point\n\t\t\t\tleft = box.right;\n\t\t\t}\n\t\t}\n\n\t\thelpers$1.each(leftBoxes.concat(topBoxes), placeBox);\n\n\t\t// Account for chart width and height\n\t\tleft += maxChartAreaWidth;\n\t\ttop += maxChartAreaHeight;\n\n\t\thelpers$1.each(rightBoxes, placeBox);\n\t\thelpers$1.each(bottomBoxes, placeBox);\n\n\t\t// Step 8\n\t\tchart.chartArea = {\n\t\t\tleft: outerBoxSizes.left,\n\t\t\ttop: outerBoxSizes.top,\n\t\t\tright: outerBoxSizes.left + maxChartAreaWidth,\n\t\t\tbottom: outerBoxSizes.top + maxChartAreaHeight\n\t\t};\n\n\t\t// Step 9\n\t\thelpers$1.each(chartAreaBoxes, function(box) {\n\t\t\tbox.left = chart.chartArea.left;\n\t\t\tbox.top = chart.chartArea.top;\n\t\t\tbox.right = chart.chartArea.right;\n\t\t\tbox.bottom = chart.chartArea.bottom;\n\n\t\t\tbox.update(maxChartAreaWidth, maxChartAreaHeight);\n\t\t});\n\t}\n};\n\n/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nvar platform_basic = {\n\tacquireContext: function(item) {\n\t\tif (item && item.canvas) {\n\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\titem = item.canvas;\n\t\t}\n\n\t\treturn item && item.getContext('2d') || null;\n\t}\n};\n\nvar platform_dom = \"/*\\n * DOM element rendering detection\\n * https://davidwalsh.name/detect-node-insertion\\n */\\n@keyframes chartjs-render-animation {\\n\\tfrom { opacity: 0.99; }\\n\\tto { opacity: 1; }\\n}\\n\\n.chartjs-render-monitor {\\n\\tanimation: chartjs-render-animation 0.001s;\\n}\\n\\n/*\\n * DOM element resizing detection\\n * https://github.com/marcj/css-element-queries\\n */\\n.chartjs-size-monitor,\\n.chartjs-size-monitor-expand,\\n.chartjs-size-monitor-shrink {\\n\\tposition: absolute;\\n\\tdirection: ltr;\\n\\tleft: 0;\\n\\ttop: 0;\\n\\tright: 0;\\n\\tbottom: 0;\\n\\toverflow: hidden;\\n\\tpointer-events: none;\\n\\tvisibility: hidden;\\n\\tz-index: -1;\\n}\\n\\n.chartjs-size-monitor-expand > div {\\n\\tposition: absolute;\\n\\twidth: 1000000px;\\n\\theight: 1000000px;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\\n.chartjs-size-monitor-shrink > div {\\n\\tposition: absolute;\\n\\twidth: 200%;\\n\\theight: 200%;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\";\n\nvar platform_dom$1 = /*#__PURE__*/Object.freeze({\ndefault: platform_dom\n});\n\nvar commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction commonjsRequire () {\n\tthrow new Error('Dynamic requires are not currently supported by rollup-plugin-commonjs');\n}\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nfunction getCjsExportFromNamespace (n) {\n\treturn n && n.default || n;\n}\n\nvar stylesheet = getCjsExportFromNamespace(platform_dom$1);\n\nvar EXPANDO_KEY = '$chartjs';\nvar CSS_PREFIX = 'chartjs-';\nvar CSS_SIZE_MONITOR = CSS_PREFIX + 'size-monitor';\nvar CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\nvar CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\nvar ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nvar EVENT_TYPES = {\n\ttouchstart: 'mousedown',\n\ttouchmove: 'mousemove',\n\ttouchend: 'mouseup',\n\tpointerenter: 'mouseenter',\n\tpointerdown: 'mousedown',\n\tpointermove: 'mousemove',\n\tpointerup: 'mouseup',\n\tpointerleave: 'mouseout',\n\tpointerout: 'mouseout'\n};\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns {number} Size in pixels or undefined if unknown.\n */\nfunction readUsedSize(element, property) {\n\tvar value = helpers$1.getStyle(element, property);\n\tvar matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n\treturn matches ? Number(matches[1]) : undefined;\n}\n\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n */\nfunction initCanvas(canvas, config) {\n\tvar style = canvas.style;\n\n\t// NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n\t// returns null or '' if no explicit value has been set to the canvas attribute.\n\tvar renderHeight = canvas.getAttribute('height');\n\tvar renderWidth = canvas.getAttribute('width');\n\n\t// Chart.js modifies some canvas values that we want to restore on destroy\n\tcanvas[EXPANDO_KEY] = {\n\t\tinitial: {\n\t\t\theight: renderHeight,\n\t\t\twidth: renderWidth,\n\t\t\tstyle: {\n\t\t\t\tdisplay: style.display,\n\t\t\t\theight: style.height,\n\t\t\t\twidth: style.width\n\t\t\t}\n\t\t}\n\t};\n\n\t// Force canvas to display as block to avoid extra space caused by inline\n\t// elements, which would interfere with the responsive resize process.\n\t// https://github.com/chartjs/Chart.js/issues/2538\n\tstyle.display = style.display || 'block';\n\n\tif (renderWidth === null || renderWidth === '') {\n\t\tvar displayWidth = readUsedSize(canvas, 'width');\n\t\tif (displayWidth !== undefined) {\n\t\t\tcanvas.width = displayWidth;\n\t\t}\n\t}\n\n\tif (renderHeight === null || renderHeight === '') {\n\t\tif (canvas.style.height === '') {\n\t\t\t// If no explicit render height and style height, let's apply the aspect ratio,\n\t\t\t// which one can be specified by the user but also by charts as default option\n\t\t\t// (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n\t\t\tcanvas.height = canvas.width / (config.options.aspectRatio || 2);\n\t\t} else {\n\t\t\tvar displayHeight = readUsedSize(canvas, 'height');\n\t\t\tif (displayWidth !== undefined) {\n\t\t\t\tcanvas.height = displayHeight;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn canvas;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nvar supportsEventListenerOptions = (function() {\n\tvar supports = false;\n\ttry {\n\t\tvar options = Object.defineProperty({}, 'passive', {\n\t\t\t// eslint-disable-next-line getter-return\n\t\t\tget: function() {\n\t\t\t\tsupports = true;\n\t\t\t}\n\t\t});\n\t\twindow.addEventListener('e', null, options);\n\t} catch (e) {\n\t\t// continue regardless of error\n\t}\n\treturn supports;\n}());\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nvar eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n\tnode.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(node, type, listener) {\n\tnode.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction createEvent(type, chart, x, y, nativeEvent) {\n\treturn {\n\t\ttype: type,\n\t\tchart: chart,\n\t\tnative: nativeEvent || null,\n\t\tx: x !== undefined ? x : null,\n\t\ty: y !== undefined ? y : null,\n\t};\n}\n\nfunction fromNativeEvent(event, chart) {\n\tvar type = EVENT_TYPES[event.type] || event.type;\n\tvar pos = helpers$1.getRelativePosition(event, chart);\n\treturn createEvent(type, chart, pos.x, pos.y, event);\n}\n\nfunction throttled(fn, thisArg) {\n\tvar ticking = false;\n\tvar args = [];\n\n\treturn function() {\n\t\targs = Array.prototype.slice.call(arguments);\n\t\tthisArg = thisArg || this;\n\n\t\tif (!ticking) {\n\t\t\tticking = true;\n\t\t\thelpers$1.requestAnimFrame.call(window, function() {\n\t\t\t\tticking = false;\n\t\t\t\tfn.apply(thisArg, args);\n\t\t\t});\n\t\t}\n\t};\n}\n\nfunction createDiv(cls) {\n\tvar el = document.createElement('div');\n\tel.className = cls || '';\n\treturn el;\n}\n\n// Implementation based on https://github.com/marcj/css-element-queries\nfunction createResizer(handler) {\n\tvar maxSize = 1000000;\n\n\t// NOTE(SB) Don't use innerHTML because it could be considered unsafe.\n\t// https://github.com/chartjs/Chart.js/issues/5902\n\tvar resizer = createDiv(CSS_SIZE_MONITOR);\n\tvar expand = createDiv(CSS_SIZE_MONITOR + '-expand');\n\tvar shrink = createDiv(CSS_SIZE_MONITOR + '-shrink');\n\n\texpand.appendChild(createDiv());\n\tshrink.appendChild(createDiv());\n\n\tresizer.appendChild(expand);\n\tresizer.appendChild(shrink);\n\tresizer._reset = function() {\n\t\texpand.scrollLeft = maxSize;\n\t\texpand.scrollTop = maxSize;\n\t\tshrink.scrollLeft = maxSize;\n\t\tshrink.scrollTop = maxSize;\n\t};\n\n\tvar onScroll = function() {\n\t\tresizer._reset();\n\t\thandler();\n\t};\n\n\taddListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n\taddListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n\n\treturn resizer;\n}\n\n// https://davidwalsh.name/detect-node-insertion\nfunction watchForRender(node, handler) {\n\tvar expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\tvar proxy = expando.renderProxy = function(e) {\n\t\tif (e.animationName === CSS_RENDER_ANIMATION) {\n\t\t\thandler();\n\t\t}\n\t};\n\n\thelpers$1.each(ANIMATION_START_EVENTS, function(type) {\n\t\taddListener(node, type, proxy);\n\t});\n\n\t// #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n\t// is removed then added back immediately (same animation frame?). Accessing the\n\t// `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n\t// https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n\t// https://github.com/chartjs/Chart.js/issues/4737\n\texpando.reflow = !!node.offsetParent;\n\n\tnode.classList.add(CSS_RENDER_MONITOR);\n}\n\nfunction unwatchForRender(node) {\n\tvar expando = node[EXPANDO_KEY] || {};\n\tvar proxy = expando.renderProxy;\n\n\tif (proxy) {\n\t\thelpers$1.each(ANIMATION_START_EVENTS, function(type) {\n\t\t\tremoveListener(node, type, proxy);\n\t\t});\n\n\t\tdelete expando.renderProxy;\n\t}\n\n\tnode.classList.remove(CSS_RENDER_MONITOR);\n}\n\nfunction addResizeListener(node, listener, chart) {\n\tvar expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n\t// Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\tvar resizer = expando.resizer = createResizer(throttled(function() {\n\t\tif (expando.resizer) {\n\t\t\tvar container = chart.options.maintainAspectRatio && node.parentNode;\n\t\t\tvar w = container ? container.clientWidth : 0;\n\t\t\tlistener(createEvent('resize', chart));\n\t\t\tif (container && container.clientWidth < w && chart.canvas) {\n\t\t\t\t// If the container size shrank during chart resize, let's assume\n\t\t\t\t// scrollbar appeared. So we resize again with the scrollbar visible -\n\t\t\t\t// effectively making chart smaller and the scrollbar hidden again.\n\t\t\t\t// Because we are inside `throttled`, and currently `ticking`, scroll\n\t\t\t\t// events are ignored during this whole 2 resize process.\n\t\t\t\t// If we assumed wrong and something else happened, we are resizing\n\t\t\t\t// twice in a frame (potential performance issue)\n\t\t\t\tlistener(createEvent('resize', chart));\n\t\t\t}\n\t\t}\n\t}));\n\n\t// The resizer needs to be attached to the node parent, so we first need to be\n\t// sure that `node` is attached to the DOM before injecting the resizer element.\n\twatchForRender(node, function() {\n\t\tif (expando.resizer) {\n\t\t\tvar container = node.parentNode;\n\t\t\tif (container && container !== resizer.parentNode) {\n\t\t\t\tcontainer.insertBefore(resizer, container.firstChild);\n\t\t\t}\n\n\t\t\t// The container size might have changed, let's reset the resizer state.\n\t\t\tresizer._reset();\n\t\t}\n\t});\n}\n\nfunction removeResizeListener(node) {\n\tvar expando = node[EXPANDO_KEY] || {};\n\tvar resizer = expando.resizer;\n\n\tdelete expando.resizer;\n\tunwatchForRender(node);\n\n\tif (resizer && resizer.parentNode) {\n\t\tresizer.parentNode.removeChild(resizer);\n\t}\n}\n\nfunction injectCSS(platform, css) {\n\t// https://stackoverflow.com/q/3922139\n\tvar style = platform._style || document.createElement('style');\n\tif (!platform._style) {\n\t\tplatform._style = style;\n\t\tcss = '/* Chart.js */\\n' + css;\n\t\tstyle.setAttribute('type', 'text/css');\n\t\tdocument.getElementsByTagName('head')[0].appendChild(style);\n\t}\n\n\tstyle.appendChild(document.createTextNode(css));\n}\n\nvar platform_dom$2 = {\n\t/**\n\t * When `true`, prevents the automatic injection of the stylesheet required to\n\t * correctly detect when the chart is added to the DOM and then resized. This\n\t * switch has been added to allow external stylesheet (`dist/Chart(.min)?.js`)\n\t * to be manually imported to make this library compatible with any CSP.\n\t * See https://github.com/chartjs/Chart.js/issues/5208\n\t */\n\tdisableCSSInjection: false,\n\n\t/**\n\t * This property holds whether this platform is enabled for the current environment.\n\t * Currently used by platform.js to select the proper implementation.\n\t * @private\n\t */\n\t_enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n\t/**\n\t * @private\n\t */\n\t_ensureLoaded: function() {\n\t\tif (this._loaded) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._loaded = true;\n\n\t\t// https://github.com/chartjs/Chart.js/issues/5208\n\t\tif (!this.disableCSSInjection) {\n\t\t\tinjectCSS(this, stylesheet);\n\t\t}\n\t},\n\n\tacquireContext: function(item, config) {\n\t\tif (typeof item === 'string') {\n\t\t\titem = document.getElementById(item);\n\t\t} else if (item.length) {\n\t\t\t// Support for array based queries (such as jQuery)\n\t\t\titem = item[0];\n\t\t}\n\n\t\tif (item && item.canvas) {\n\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\titem = item.canvas;\n\t\t}\n\n\t\t// To prevent canvas fingerprinting, some add-ons undefine the getContext\n\t\t// method, for example: https://github.com/kkapsner/CanvasBlocker\n\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\tvar context = item && item.getContext && item.getContext('2d');\n\n\t\t// Load platform resources on first chart creation, to make possible to change\n\t\t// platform options after importing the library (e.g. `disableCSSInjection`).\n\t\tthis._ensureLoaded();\n\n\t\t// `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n\t\t// inside an iframe or when running in a protected environment. We could guess the\n\t\t// types from their toString() value but let's keep things flexible and assume it's\n\t\t// a sufficient condition if the item has a context2D which has item as `canvas`.\n\t\t// https://github.com/chartjs/Chart.js/issues/3887\n\t\t// https://github.com/chartjs/Chart.js/issues/4102\n\t\t// https://github.com/chartjs/Chart.js/issues/4152\n\t\tif (context && context.canvas === item) {\n\t\t\tinitCanvas(item, config);\n\t\t\treturn context;\n\t\t}\n\n\t\treturn null;\n\t},\n\n\treleaseContext: function(context) {\n\t\tvar canvas = context.canvas;\n\t\tif (!canvas[EXPANDO_KEY]) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar initial = canvas[EXPANDO_KEY].initial;\n\t\t['height', 'width'].forEach(function(prop) {\n\t\t\tvar value = initial[prop];\n\t\t\tif (helpers$1.isNullOrUndef(value)) {\n\t\t\t\tcanvas.removeAttribute(prop);\n\t\t\t} else {\n\t\t\t\tcanvas.setAttribute(prop, value);\n\t\t\t}\n\t\t});\n\n\t\thelpers$1.each(initial.style || {}, function(value, key) {\n\t\t\tcanvas.style[key] = value;\n\t\t});\n\n\t\t// The canvas render size might have been changed (and thus the state stack discarded),\n\t\t// we can't use save() and restore() to restore the initial state. So make sure that at\n\t\t// least the canvas context is reset to the default state by setting the canvas width.\n\t\t// https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n\t\t// eslint-disable-next-line no-self-assign\n\t\tcanvas.width = canvas.width;\n\n\t\tdelete canvas[EXPANDO_KEY];\n\t},\n\n\taddEventListener: function(chart, type, listener) {\n\t\tvar canvas = chart.canvas;\n\t\tif (type === 'resize') {\n\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\taddResizeListener(canvas, listener, chart);\n\t\t\treturn;\n\t\t}\n\n\t\tvar expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n\t\tvar proxies = expando.proxies || (expando.proxies = {});\n\t\tvar proxy = proxies[chart.id + '_' + type] = function(event) {\n\t\t\tlistener(fromNativeEvent(event, chart));\n\t\t};\n\n\t\taddListener(canvas, type, proxy);\n\t},\n\n\tremoveEventListener: function(chart, type, listener) {\n\t\tvar canvas = chart.canvas;\n\t\tif (type === 'resize') {\n\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\tremoveResizeListener(canvas);\n\t\t\treturn;\n\t\t}\n\n\t\tvar expando = listener[EXPANDO_KEY] || {};\n\t\tvar proxies = expando.proxies || {};\n\t\tvar proxy = proxies[chart.id + '_' + type];\n\t\tif (!proxy) {\n\t\t\treturn;\n\t\t}\n\n\t\tremoveListener(canvas, type, proxy);\n\t}\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use EventTarget.addEventListener instead.\n * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n * @function Chart.helpers.addEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers$1.addEvent = addListener;\n\n/**\n * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n * @function Chart.helpers.removeEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers$1.removeEvent = removeListener;\n\n// @TODO Make possible to select another platform at build time.\nvar implementation = platform_dom$2._enabled ? platform_dom$2 : platform_basic;\n\n/**\n * @namespace Chart.platform\n * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n * @since 2.4.0\n */\nvar platform = helpers$1.extend({\n\t/**\n\t * @since 2.7.0\n\t */\n\tinitialize: function() {},\n\n\t/**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {*} item - The native item from which to acquire context (platform specific)\n\t * @param {object} options - The chart options\n\t * @returns {CanvasRenderingContext2D} context2d instance\n\t */\n\tacquireContext: function() {},\n\n\t/**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n\treleaseContext: function() {},\n\n\t/**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link IEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link IEvent} interface) when an event of the specified type occurs.\n\t */\n\taddEventListener: function() {},\n\n\t/**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link IEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n\tremoveEventListener: function() {}\n\n}, implementation);\n\ncore_defaults._set('global', {\n\tplugins: {}\n});\n\n/**\n * The plugin service singleton\n * @namespace Chart.plugins\n * @since 2.1.0\n */\nvar core_plugins = {\n\t/**\n\t * Globally registered plugins.\n\t * @private\n\t */\n\t_plugins: [],\n\n\t/**\n\t * This identifier is used to invalidate the descriptors cache attached to each chart\n\t * when a global plugin is registered or unregistered. In this case, the cache ID is\n\t * incremented and descriptors are regenerated during following API calls.\n\t * @private\n\t */\n\t_cacheId: 0,\n\n\t/**\n\t * Registers the given plugin(s) if not already registered.\n\t * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n\t */\n\tregister: function(plugins) {\n\t\tvar p = this._plugins;\n\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\tif (p.indexOf(plugin) === -1) {\n\t\t\t\tp.push(plugin);\n\t\t\t}\n\t\t});\n\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Unregisters the given plugin(s) only if registered.\n\t * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n\t */\n\tunregister: function(plugins) {\n\t\tvar p = this._plugins;\n\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\tvar idx = p.indexOf(plugin);\n\t\t\tif (idx !== -1) {\n\t\t\t\tp.splice(idx, 1);\n\t\t\t}\n\t\t});\n\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Remove all registered plugins.\n\t * @since 2.1.5\n\t */\n\tclear: function() {\n\t\tthis._plugins = [];\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Returns the number of registered plugins?\n\t * @returns {number}\n\t * @since 2.1.5\n\t */\n\tcount: function() {\n\t\treturn this._plugins.length;\n\t},\n\n\t/**\n\t * Returns all registered plugin instances.\n\t * @returns {IPlugin[]} array of plugin objects.\n\t * @since 2.1.5\n\t */\n\tgetAll: function() {\n\t\treturn this._plugins;\n\t},\n\n\t/**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Array} [args] - Extra arguments to apply to the hook call.\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n\tnotify: function(chart, hook, args) {\n\t\tvar descriptors = this.descriptors(chart);\n\t\tvar ilen = descriptors.length;\n\t\tvar i, descriptor, plugin, params, method;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tdescriptor = descriptors[i];\n\t\t\tplugin = descriptor.plugin;\n\t\t\tmethod = plugin[hook];\n\t\t\tif (typeof method === 'function') {\n\t\t\t\tparams = [chart].concat(args || []);\n\t\t\t\tparams.push(descriptor.options);\n\t\t\t\tif (method.apply(plugin, params) === false) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns descriptors of enabled plugins for the given chart.\n\t * @returns {object[]} [{ plugin, options }]\n\t * @private\n\t */\n\tdescriptors: function(chart) {\n\t\tvar cache = chart.$plugins || (chart.$plugins = {});\n\t\tif (cache.id === this._cacheId) {\n\t\t\treturn cache.descriptors;\n\t\t}\n\n\t\tvar plugins = [];\n\t\tvar descriptors = [];\n\t\tvar config = (chart && chart.config) || {};\n\t\tvar options = (config.options && config.options.plugins) || {};\n\n\t\tthis._plugins.concat(config.plugins || []).forEach(function(plugin) {\n\t\t\tvar idx = plugins.indexOf(plugin);\n\t\t\tif (idx !== -1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar id = plugin.id;\n\t\t\tvar opts = options[id];\n\t\t\tif (opts === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (opts === true) {\n\t\t\t\topts = helpers$1.clone(core_defaults.global.plugins[id]);\n\t\t\t}\n\n\t\t\tplugins.push(plugin);\n\t\t\tdescriptors.push({\n\t\t\t\tplugin: plugin,\n\t\t\t\toptions: opts || {}\n\t\t\t});\n\t\t});\n\n\t\tcache.descriptors = descriptors;\n\t\tcache.id = this._cacheId;\n\t\treturn descriptors;\n\t},\n\n\t/**\n\t * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n\t * but in some cases, this reference can be changed by the user when updating options.\n\t * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\t * @private\n\t */\n\t_invalidate: function(chart) {\n\t\tdelete chart.$plugins;\n\t}\n};\n\nvar core_scaleService = {\n\t// Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n\t// use the new chart options to grab the correct scale\n\tconstructors: {},\n\t// Use a registration function so that we can move to an ES6 map when we no longer need to support\n\t// old browsers\n\n\t// Scale config defaults\n\tdefaults: {},\n\tregisterScaleType: function(type, scaleConstructor, scaleDefaults) {\n\t\tthis.constructors[type] = scaleConstructor;\n\t\tthis.defaults[type] = helpers$1.clone(scaleDefaults);\n\t},\n\tgetScaleConstructor: function(type) {\n\t\treturn this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n\t},\n\tgetScaleDefaults: function(type) {\n\t\t// Return the scale defaults merged with the global settings so that we always use the latest ones\n\t\treturn this.defaults.hasOwnProperty(type) ? helpers$1.merge({}, [core_defaults.scale, this.defaults[type]]) : {};\n\t},\n\tupdateScaleDefaults: function(type, additions) {\n\t\tvar me = this;\n\t\tif (me.defaults.hasOwnProperty(type)) {\n\t\t\tme.defaults[type] = helpers$1.extend(me.defaults[type], additions);\n\t\t}\n\t},\n\taddScalesToLayout: function(chart) {\n\t\t// Adds each scale to the chart.boxes array to be sized accordingly\n\t\thelpers$1.each(chart.scales, function(scale) {\n\t\t\t// Set ILayoutItem parameters for backwards compatibility\n\t\t\tscale.fullWidth = scale.options.fullWidth;\n\t\t\tscale.position = scale.options.position;\n\t\t\tscale.weight = scale.options.weight;\n\t\t\tcore_layouts.addBox(chart, scale);\n\t\t});\n\t}\n};\n\nvar valueOrDefault$7 = helpers$1.valueOrDefault;\n\ncore_defaults._set('global', {\n\ttooltips: {\n\t\tenabled: true,\n\t\tcustom: null,\n\t\tmode: 'nearest',\n\t\tposition: 'average',\n\t\tintersect: true,\n\t\tbackgroundColor: 'rgba(0,0,0,0.8)',\n\t\ttitleFontStyle: 'bold',\n\t\ttitleSpacing: 2,\n\t\ttitleMarginBottom: 6,\n\t\ttitleFontColor: '#fff',\n\t\ttitleAlign: 'left',\n\t\tbodySpacing: 2,\n\t\tbodyFontColor: '#fff',\n\t\tbodyAlign: 'left',\n\t\tfooterFontStyle: 'bold',\n\t\tfooterSpacing: 2,\n\t\tfooterMarginTop: 6,\n\t\tfooterFontColor: '#fff',\n\t\tfooterAlign: 'left',\n\t\tyPadding: 6,\n\t\txPadding: 6,\n\t\tcaretPadding: 2,\n\t\tcaretSize: 5,\n\t\tcornerRadius: 6,\n\t\tmultiKeyBackground: '#fff',\n\t\tdisplayColors: true,\n\t\tborderColor: 'rgba(0,0,0,0)',\n\t\tborderWidth: 0,\n\t\tcallbacks: {\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeTitle: helpers$1.noop,\n\t\t\ttitle: function(tooltipItems, data) {\n\t\t\t\tvar title = '';\n\t\t\t\tvar labels = data.labels;\n\t\t\t\tvar labelCount = labels ? labels.length : 0;\n\n\t\t\t\tif (tooltipItems.length > 0) {\n\t\t\t\t\tvar item = tooltipItems[0];\n\t\t\t\t\tif (item.label) {\n\t\t\t\t\t\ttitle = item.label;\n\t\t\t\t\t} else if (item.xLabel) {\n\t\t\t\t\t\ttitle = item.xLabel;\n\t\t\t\t\t} else if (labelCount > 0 && item.index < labelCount) {\n\t\t\t\t\t\ttitle = labels[item.index];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn title;\n\t\t\t},\n\t\t\tafterTitle: helpers$1.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeBody: helpers$1.noop,\n\n\t\t\t// Args are: (tooltipItem, data)\n\t\t\tbeforeLabel: helpers$1.noop,\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel += ': ';\n\t\t\t\t}\n\t\t\t\tif (!helpers$1.isNullOrUndef(tooltipItem.value)) {\n\t\t\t\t\tlabel += tooltipItem.value;\n\t\t\t\t} else {\n\t\t\t\t\tlabel += tooltipItem.yLabel;\n\t\t\t\t}\n\t\t\t\treturn label;\n\t\t\t},\n\t\t\tlabelColor: function(tooltipItem, chart) {\n\t\t\t\tvar meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n\t\t\t\tvar activeElement = meta.data[tooltipItem.index];\n\t\t\t\tvar view = activeElement._view;\n\t\t\t\treturn {\n\t\t\t\t\tborderColor: view.borderColor,\n\t\t\t\t\tbackgroundColor: view.backgroundColor\n\t\t\t\t};\n\t\t\t},\n\t\t\tlabelTextColor: function() {\n\t\t\t\treturn this._options.bodyFontColor;\n\t\t\t},\n\t\t\tafterLabel: helpers$1.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tafterBody: helpers$1.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeFooter: helpers$1.noop,\n\t\t\tfooter: helpers$1.noop,\n\t\t\tafterFooter: helpers$1.noop\n\t\t}\n\t}\n});\n\nvar positioners = {\n\t/**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t * @function Chart.Tooltip.positioners.average\n\t * @param elements {ChartElement[]} the elements being displayed in the tooltip\n\t * @returns {object} tooltip position\n\t */\n\taverage: function(elements) {\n\t\tif (!elements.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar i, len;\n\t\tvar x = 0;\n\t\tvar y = 0;\n\t\tvar count = 0;\n\n\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\tvar el = elements[i];\n\t\t\tif (el && el.hasValue()) {\n\t\t\t\tvar pos = el.tooltipPosition();\n\t\t\t\tx += pos.x;\n\t\t\t\ty += pos.y;\n\t\t\t\t++count;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tx: x / count,\n\t\t\ty: y / count\n\t\t};\n\t},\n\n\t/**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t * @function Chart.Tooltip.positioners.nearest\n\t * @param elements {Chart.Element[]} the tooltip elements\n\t * @param eventPosition {object} the position of the event in canvas coordinates\n\t * @returns {object} the tooltip position\n\t */\n\tnearest: function(elements, eventPosition) {\n\t\tvar x = eventPosition.x;\n\t\tvar y = eventPosition.y;\n\t\tvar minDistance = Number.POSITIVE_INFINITY;\n\t\tvar i, len, nearestElement;\n\n\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\tvar el = elements[i];\n\t\t\tif (el && el.hasValue()) {\n\t\t\t\tvar center = el.getCenterPoint();\n\t\t\t\tvar d = helpers$1.distanceBetweenPoints(eventPosition, center);\n\n\t\t\t\tif (d < minDistance) {\n\t\t\t\t\tminDistance = d;\n\t\t\t\t\tnearestElement = el;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (nearestElement) {\n\t\t\tvar tp = nearestElement.tooltipPosition();\n\t\t\tx = tp.x;\n\t\t\ty = tp.y;\n\t\t}\n\n\t\treturn {\n\t\t\tx: x,\n\t\t\ty: y\n\t\t};\n\t}\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n\tif (toPush) {\n\t\tif (helpers$1.isArray(toPush)) {\n\t\t\t// base = base.concat(toPush);\n\t\t\tArray.prototype.push.apply(base, toPush);\n\t\t} else {\n\t\t\tbase.push(toPush);\n\t\t}\n\t}\n\n\treturn base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {string} value - The value to split by newline.\n * @returns {string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n\tif ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n\t\treturn str.split('\\n');\n\t}\n\treturn str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param element - the chart element (point, arc, bar) to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(element) {\n\tvar xScale = element._xScale;\n\tvar yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\tvar index = element._index;\n\tvar datasetIndex = element._datasetIndex;\n\tvar controller = element._chart.getDatasetMeta(datasetIndex).controller;\n\tvar indexScale = controller._getIndexScale();\n\tvar valueScale = controller._getValueScale();\n\n\treturn {\n\t\txLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n\t\tyLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n\t\tlabel: indexScale ? '' + indexScale.getLabelForIndex(index, datasetIndex) : '',\n\t\tvalue: valueScale ? '' + valueScale.getLabelForIndex(index, datasetIndex) : '',\n\t\tindex: index,\n\t\tdatasetIndex: datasetIndex,\n\t\tx: element._model.x,\n\t\ty: element._model.y\n\t};\n}\n\n/**\n * Helper to get the reset model for the tooltip\n * @param tooltipOpts {object} the tooltip options\n */\nfunction getBaseModel(tooltipOpts) {\n\tvar globalDefaults = core_defaults.global;\n\n\treturn {\n\t\t// Positioning\n\t\txPadding: tooltipOpts.xPadding,\n\t\tyPadding: tooltipOpts.yPadding,\n\t\txAlign: tooltipOpts.xAlign,\n\t\tyAlign: tooltipOpts.yAlign,\n\n\t\t// Body\n\t\tbodyFontColor: tooltipOpts.bodyFontColor,\n\t\t_bodyFontFamily: valueOrDefault$7(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n\t\t_bodyFontStyle: valueOrDefault$7(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n\t\t_bodyAlign: tooltipOpts.bodyAlign,\n\t\tbodyFontSize: valueOrDefault$7(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n\t\tbodySpacing: tooltipOpts.bodySpacing,\n\n\t\t// Title\n\t\ttitleFontColor: tooltipOpts.titleFontColor,\n\t\t_titleFontFamily: valueOrDefault$7(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n\t\t_titleFontStyle: valueOrDefault$7(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n\t\ttitleFontSize: valueOrDefault$7(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n\t\t_titleAlign: tooltipOpts.titleAlign,\n\t\ttitleSpacing: tooltipOpts.titleSpacing,\n\t\ttitleMarginBottom: tooltipOpts.titleMarginBottom,\n\n\t\t// Footer\n\t\tfooterFontColor: tooltipOpts.footerFontColor,\n\t\t_footerFontFamily: valueOrDefault$7(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n\t\t_footerFontStyle: valueOrDefault$7(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n\t\tfooterFontSize: valueOrDefault$7(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n\t\t_footerAlign: tooltipOpts.footerAlign,\n\t\tfooterSpacing: tooltipOpts.footerSpacing,\n\t\tfooterMarginTop: tooltipOpts.footerMarginTop,\n\n\t\t// Appearance\n\t\tcaretSize: tooltipOpts.caretSize,\n\t\tcornerRadius: tooltipOpts.cornerRadius,\n\t\tbackgroundColor: tooltipOpts.backgroundColor,\n\t\topacity: 0,\n\t\tlegendColorBackground: tooltipOpts.multiKeyBackground,\n\t\tdisplayColors: tooltipOpts.displayColors,\n\t\tborderColor: tooltipOpts.borderColor,\n\t\tborderWidth: tooltipOpts.borderWidth\n\t};\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, model) {\n\tvar ctx = tooltip._chart.ctx;\n\n\tvar height = model.yPadding * 2; // Tooltip Padding\n\tvar width = 0;\n\n\t// Count of all lines in the body\n\tvar body = model.body;\n\tvar combinedBodyLength = body.reduce(function(count, bodyItem) {\n\t\treturn count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n\t}, 0);\n\tcombinedBodyLength += model.beforeBody.length + model.afterBody.length;\n\n\tvar titleLineCount = model.title.length;\n\tvar footerLineCount = model.footer.length;\n\tvar titleFontSize = model.titleFontSize;\n\tvar bodyFontSize = model.bodyFontSize;\n\tvar footerFontSize = model.footerFontSize;\n\n\theight += titleLineCount * titleFontSize; // Title Lines\n\theight += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\theight += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\theight += combinedBodyLength * bodyFontSize; // Body Lines\n\theight += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\theight += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\theight += footerLineCount * (footerFontSize); // Footer Lines\n\theight += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n\n\t// Title width\n\tvar widthPadding = 0;\n\tvar maxLineWidth = function(line) {\n\t\twidth = Math.max(width, ctx.measureText(line).width + widthPadding);\n\t};\n\n\tctx.font = helpers$1.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n\thelpers$1.each(model.title, maxLineWidth);\n\n\t// Body width\n\tctx.font = helpers$1.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n\thelpers$1.each(model.beforeBody.concat(model.afterBody), maxLineWidth);\n\n\t// Body lines may include some extra width due to the color box\n\twidthPadding = model.displayColors ? (bodyFontSize + 2) : 0;\n\thelpers$1.each(body, function(bodyItem) {\n\t\thelpers$1.each(bodyItem.before, maxLineWidth);\n\t\thelpers$1.each(bodyItem.lines, maxLineWidth);\n\t\thelpers$1.each(bodyItem.after, maxLineWidth);\n\t});\n\n\t// Reset back to 0\n\twidthPadding = 0;\n\n\t// Footer width\n\tctx.font = helpers$1.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n\thelpers$1.each(model.footer, maxLineWidth);\n\n\t// Add padding\n\twidth += 2 * model.xPadding;\n\n\treturn {\n\t\twidth: width,\n\t\theight: height\n\t};\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(tooltip, size) {\n\tvar model = tooltip._model;\n\tvar chart = tooltip._chart;\n\tvar chartArea = tooltip._chart.chartArea;\n\tvar xAlign = 'center';\n\tvar yAlign = 'center';\n\n\tif (model.y < size.height) {\n\t\tyAlign = 'top';\n\t} else if (model.y > (chart.height - size.height)) {\n\t\tyAlign = 'bottom';\n\t}\n\n\tvar lf, rf; // functions to determine left, right alignment\n\tvar olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\tvar yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\tvar midX = (chartArea.left + chartArea.right) / 2;\n\tvar midY = (chartArea.top + chartArea.bottom) / 2;\n\n\tif (yAlign === 'center') {\n\t\tlf = function(x) {\n\t\t\treturn x <= midX;\n\t\t};\n\t\trf = function(x) {\n\t\t\treturn x > midX;\n\t\t};\n\t} else {\n\t\tlf = function(x) {\n\t\t\treturn x <= (size.width / 2);\n\t\t};\n\t\trf = function(x) {\n\t\t\treturn x >= (chart.width - (size.width / 2));\n\t\t};\n\t}\n\n\tolf = function(x) {\n\t\treturn x + size.width + model.caretSize + model.caretPadding > chart.width;\n\t};\n\torf = function(x) {\n\t\treturn x - size.width - model.caretSize - model.caretPadding < 0;\n\t};\n\tyf = function(y) {\n\t\treturn y <= midY ? 'top' : 'bottom';\n\t};\n\n\tif (lf(model.x)) {\n\t\txAlign = 'left';\n\n\t\t// Is tooltip too wide and goes over the right side of the chart.?\n\t\tif (olf(model.x)) {\n\t\t\txAlign = 'center';\n\t\t\tyAlign = yf(model.y);\n\t\t}\n\t} else if (rf(model.x)) {\n\t\txAlign = 'right';\n\n\t\t// Is tooltip too wide and goes outside left edge of canvas?\n\t\tif (orf(model.x)) {\n\t\t\txAlign = 'center';\n\t\t\tyAlign = yf(model.y);\n\t\t}\n\t}\n\n\tvar opts = tooltip._options;\n\treturn {\n\t\txAlign: opts.xAlign ? opts.xAlign : xAlign,\n\t\tyAlign: opts.yAlign ? opts.yAlign : yAlign\n\t};\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(vm, size, alignment, chart) {\n\t// Background Position\n\tvar x = vm.x;\n\tvar y = vm.y;\n\n\tvar caretSize = vm.caretSize;\n\tvar caretPadding = vm.caretPadding;\n\tvar cornerRadius = vm.cornerRadius;\n\tvar xAlign = alignment.xAlign;\n\tvar yAlign = alignment.yAlign;\n\tvar paddingAndSize = caretSize + caretPadding;\n\tvar radiusAndPadding = cornerRadius + caretPadding;\n\n\tif (xAlign === 'right') {\n\t\tx -= size.width;\n\t} else if (xAlign === 'center') {\n\t\tx -= (size.width / 2);\n\t\tif (x + size.width > chart.width) {\n\t\t\tx = chart.width - size.width;\n\t\t}\n\t\tif (x < 0) {\n\t\t\tx = 0;\n\t\t}\n\t}\n\n\tif (yAlign === 'top') {\n\t\ty += paddingAndSize;\n\t} else if (yAlign === 'bottom') {\n\t\ty -= size.height + paddingAndSize;\n\t} else {\n\t\ty -= (size.height / 2);\n\t}\n\n\tif (yAlign === 'center') {\n\t\tif (xAlign === 'left') {\n\t\t\tx += paddingAndSize;\n\t\t} else if (xAlign === 'right') {\n\t\t\tx -= paddingAndSize;\n\t\t}\n\t} else if (xAlign === 'left') {\n\t\tx -= radiusAndPadding;\n\t} else if (xAlign === 'right') {\n\t\tx += radiusAndPadding;\n\t}\n\n\treturn {\n\t\tx: x,\n\t\ty: y\n\t};\n}\n\nfunction getAlignedX(vm, align) {\n\treturn align === 'center'\n\t\t? vm.x + vm.width / 2\n\t\t: align === 'right'\n\t\t\t? vm.x + vm.width - vm.xPadding\n\t\t\t: vm.x + vm.xPadding;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n\treturn pushOrConcat([], splitNewlines(callback));\n}\n\nvar exports$3 = core_element.extend({\n\tinitialize: function() {\n\t\tthis._model = getBaseModel(this._options);\n\t\tthis._lastActive = [];\n\t},\n\n\t// Get the title\n\t// Args are: (tooltipItem, data)\n\tgetTitle: function() {\n\t\tvar me = this;\n\t\tvar opts = me._options;\n\t\tvar callbacks = opts.callbacks;\n\n\t\tvar beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n\t\tvar title = callbacks.title.apply(me, arguments);\n\t\tvar afterTitle = callbacks.afterTitle.apply(me, arguments);\n\n\t\tvar lines = [];\n\t\tlines = pushOrConcat(lines, splitNewlines(beforeTitle));\n\t\tlines = pushOrConcat(lines, splitNewlines(title));\n\t\tlines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n\t\treturn lines;\n\t},\n\n\t// Args are: (tooltipItem, data)\n\tgetBeforeBody: function() {\n\t\treturn getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n\t},\n\n\t// Args are: (tooltipItem, data)\n\tgetBody: function(tooltipItems, data) {\n\t\tvar me = this;\n\t\tvar callbacks = me._options.callbacks;\n\t\tvar bodyItems = [];\n\n\t\thelpers$1.each(tooltipItems, function(tooltipItem) {\n\t\t\tvar bodyItem = {\n\t\t\t\tbefore: [],\n\t\t\t\tlines: [],\n\t\t\t\tafter: []\n\t\t\t};\n\t\t\tpushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n\t\t\tpushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n\t\t\tpushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n\n\t\t\tbodyItems.push(bodyItem);\n\t\t});\n\n\t\treturn bodyItems;\n\t},\n\n\t// Args are: (tooltipItem, data)\n\tgetAfterBody: function() {\n\t\treturn getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n\t},\n\n\t// Get the footer and beforeFooter and afterFooter lines\n\t// Args are: (tooltipItem, data)\n\tgetFooter: function() {\n\t\tvar me = this;\n\t\tvar callbacks = me._options.callbacks;\n\n\t\tvar beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n\t\tvar footer = callbacks.footer.apply(me, arguments);\n\t\tvar afterFooter = callbacks.afterFooter.apply(me, arguments);\n\n\t\tvar lines = [];\n\t\tlines = pushOrConcat(lines, splitNewlines(beforeFooter));\n\t\tlines = pushOrConcat(lines, splitNewlines(footer));\n\t\tlines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n\t\treturn lines;\n\t},\n\n\tupdate: function(changed) {\n\t\tvar me = this;\n\t\tvar opts = me._options;\n\n\t\t// Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n\t\t// that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n\t\t// which breaks any animations.\n\t\tvar existingModel = me._model;\n\t\tvar model = me._model = getBaseModel(opts);\n\t\tvar active = me._active;\n\n\t\tvar data = me._data;\n\n\t\t// In the case where active.length === 0 we need to keep these at existing values for good animations\n\t\tvar alignment = {\n\t\t\txAlign: existingModel.xAlign,\n\t\t\tyAlign: existingModel.yAlign\n\t\t};\n\t\tvar backgroundPoint = {\n\t\t\tx: existingModel.x,\n\t\t\ty: existingModel.y\n\t\t};\n\t\tvar tooltipSize = {\n\t\t\twidth: existingModel.width,\n\t\t\theight: existingModel.height\n\t\t};\n\t\tvar tooltipPosition = {\n\t\t\tx: existingModel.caretX,\n\t\t\ty: existingModel.caretY\n\t\t};\n\n\t\tvar i, len;\n\n\t\tif (active.length) {\n\t\t\tmodel.opacity = 1;\n\n\t\t\tvar labelColors = [];\n\t\t\tvar labelTextColors = [];\n\t\t\ttooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n\n\t\t\tvar tooltipItems = [];\n\t\t\tfor (i = 0, len = active.length; i < len; ++i) {\n\t\t\t\ttooltipItems.push(createTooltipItem(active[i]));\n\t\t\t}\n\n\t\t\t// If the user provided a filter function, use it to modify the tooltip items\n\t\t\tif (opts.filter) {\n\t\t\t\ttooltipItems = tooltipItems.filter(function(a) {\n\t\t\t\t\treturn opts.filter(a, data);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// If the user provided a sorting function, use it to modify the tooltip items\n\t\t\tif (opts.itemSort) {\n\t\t\t\ttooltipItems = tooltipItems.sort(function(a, b) {\n\t\t\t\t\treturn opts.itemSort(a, b, data);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Determine colors for boxes\n\t\t\thelpers$1.each(tooltipItems, function(tooltipItem) {\n\t\t\t\tlabelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n\t\t\t\tlabelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n\t\t\t});\n\n\n\t\t\t// Build the Text Lines\n\t\t\tmodel.title = me.getTitle(tooltipItems, data);\n\t\t\tmodel.beforeBody = me.getBeforeBody(tooltipItems, data);\n\t\t\tmodel.body = me.getBody(tooltipItems, data);\n\t\t\tmodel.afterBody = me.getAfterBody(tooltipItems, data);\n\t\t\tmodel.footer = me.getFooter(tooltipItems, data);\n\n\t\t\t// Initial positioning and colors\n\t\t\tmodel.x = tooltipPosition.x;\n\t\t\tmodel.y = tooltipPosition.y;\n\t\t\tmodel.caretPadding = opts.caretPadding;\n\t\t\tmodel.labelColors = labelColors;\n\t\t\tmodel.labelTextColors = labelTextColors;\n\n\t\t\t// data points\n\t\t\tmodel.dataPoints = tooltipItems;\n\n\t\t\t// We need to determine alignment of the tooltip\n\t\t\ttooltipSize = getTooltipSize(this, model);\n\t\t\talignment = determineAlignment(this, tooltipSize);\n\t\t\t// Final Size and Position\n\t\t\tbackgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n\t\t} else {\n\t\t\tmodel.opacity = 0;\n\t\t}\n\n\t\tmodel.xAlign = alignment.xAlign;\n\t\tmodel.yAlign = alignment.yAlign;\n\t\tmodel.x = backgroundPoint.x;\n\t\tmodel.y = backgroundPoint.y;\n\t\tmodel.width = tooltipSize.width;\n\t\tmodel.height = tooltipSize.height;\n\n\t\t// Point where the caret on the tooltip points to\n\t\tmodel.caretX = tooltipPosition.x;\n\t\tmodel.caretY = tooltipPosition.y;\n\n\t\tme._model = model;\n\n\t\tif (changed && opts.custom) {\n\t\t\topts.custom.call(me, model);\n\t\t}\n\n\t\treturn me;\n\t},\n\n\tdrawCaret: function(tooltipPoint, size) {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n\n\t\tctx.lineTo(caretPosition.x1, caretPosition.y1);\n\t\tctx.lineTo(caretPosition.x2, caretPosition.y2);\n\t\tctx.lineTo(caretPosition.x3, caretPosition.y3);\n\t},\n\tgetCaretPosition: function(tooltipPoint, size, vm) {\n\t\tvar x1, x2, x3, y1, y2, y3;\n\t\tvar caretSize = vm.caretSize;\n\t\tvar cornerRadius = vm.cornerRadius;\n\t\tvar xAlign = vm.xAlign;\n\t\tvar yAlign = vm.yAlign;\n\t\tvar ptX = tooltipPoint.x;\n\t\tvar ptY = tooltipPoint.y;\n\t\tvar width = size.width;\n\t\tvar height = size.height;\n\n\t\tif (yAlign === 'center') {\n\t\t\ty2 = ptY + (height / 2);\n\n\t\t\tif (xAlign === 'left') {\n\t\t\t\tx1 = ptX;\n\t\t\t\tx2 = x1 - caretSize;\n\t\t\t\tx3 = x1;\n\n\t\t\t\ty1 = y2 + caretSize;\n\t\t\t\ty3 = y2 - caretSize;\n\t\t\t} else {\n\t\t\t\tx1 = ptX + width;\n\t\t\t\tx2 = x1 + caretSize;\n\t\t\t\tx3 = x1;\n\n\t\t\t\ty1 = y2 - caretSize;\n\t\t\t\ty3 = y2 + caretSize;\n\t\t\t}\n\t\t} else {\n\t\t\tif (xAlign === 'left') {\n\t\t\t\tx2 = ptX + cornerRadius + (caretSize);\n\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\tx3 = x2 + caretSize;\n\t\t\t} else if (xAlign === 'right') {\n\t\t\t\tx2 = ptX + width - cornerRadius - caretSize;\n\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\tx3 = x2 + caretSize;\n\t\t\t} else {\n\t\t\t\tx2 = vm.caretX;\n\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\tx3 = x2 + caretSize;\n\t\t\t}\n\t\t\tif (yAlign === 'top') {\n\t\t\t\ty1 = ptY;\n\t\t\t\ty2 = y1 - caretSize;\n\t\t\t\ty3 = y1;\n\t\t\t} else {\n\t\t\t\ty1 = ptY + height;\n\t\t\t\ty2 = y1 + caretSize;\n\t\t\t\ty3 = y1;\n\t\t\t\t// invert drawing order\n\t\t\t\tvar tmp = x3;\n\t\t\t\tx3 = x1;\n\t\t\t\tx1 = tmp;\n\t\t\t}\n\t\t}\n\t\treturn {x1: x1, x2: x2, x3: x3, y1: y1, y2: y2, y3: y3};\n\t},\n\n\tdrawTitle: function(pt, vm, ctx) {\n\t\tvar title = vm.title;\n\n\t\tif (title.length) {\n\t\t\tpt.x = getAlignedX(vm, vm._titleAlign);\n\n\t\t\tctx.textAlign = vm._titleAlign;\n\t\t\tctx.textBaseline = 'top';\n\n\t\t\tvar titleFontSize = vm.titleFontSize;\n\t\t\tvar titleSpacing = vm.titleSpacing;\n\n\t\t\tctx.fillStyle = vm.titleFontColor;\n\t\t\tctx.font = helpers$1.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n\n\t\t\tvar i, len;\n\t\t\tfor (i = 0, len = title.length; i < len; ++i) {\n\t\t\t\tctx.fillText(title[i], pt.x, pt.y);\n\t\t\t\tpt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n\t\t\t\tif (i + 1 === title.length) {\n\t\t\t\t\tpt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tdrawBody: function(pt, vm, ctx) {\n\t\tvar bodyFontSize = vm.bodyFontSize;\n\t\tvar bodySpacing = vm.bodySpacing;\n\t\tvar bodyAlign = vm._bodyAlign;\n\t\tvar body = vm.body;\n\t\tvar drawColorBoxes = vm.displayColors;\n\t\tvar labelColors = vm.labelColors;\n\t\tvar xLinePadding = 0;\n\t\tvar colorX = drawColorBoxes ? getAlignedX(vm, 'left') : 0;\n\t\tvar textColor;\n\n\t\tctx.textAlign = bodyAlign;\n\t\tctx.textBaseline = 'top';\n\t\tctx.font = helpers$1.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n\n\t\tpt.x = getAlignedX(vm, bodyAlign);\n\n\t\t// Before Body\n\t\tvar fillLineOfText = function(line) {\n\t\t\tctx.fillText(line, pt.x + xLinePadding, pt.y);\n\t\t\tpt.y += bodyFontSize + bodySpacing;\n\t\t};\n\n\t\t// Before body lines\n\t\tctx.fillStyle = vm.bodyFontColor;\n\t\thelpers$1.each(vm.beforeBody, fillLineOfText);\n\n\t\txLinePadding = drawColorBoxes && bodyAlign !== 'right'\n\t\t\t? bodyAlign === 'center' ? (bodyFontSize / 2 + 1) : (bodyFontSize + 2)\n\t\t\t: 0;\n\n\t\t// Draw body lines now\n\t\thelpers$1.each(body, function(bodyItem, i) {\n\t\t\ttextColor = vm.labelTextColors[i];\n\t\t\tctx.fillStyle = textColor;\n\t\t\thelpers$1.each(bodyItem.before, fillLineOfText);\n\n\t\t\thelpers$1.each(bodyItem.lines, function(line) {\n\t\t\t\t// Draw Legend-like boxes if needed\n\t\t\t\tif (drawColorBoxes) {\n\t\t\t\t\t// Fill a white rect so that colours merge nicely if the opacity is < 1\n\t\t\t\t\tctx.fillStyle = vm.legendColorBackground;\n\t\t\t\t\tctx.fillRect(colorX, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t// Border\n\t\t\t\t\tctx.lineWidth = 1;\n\t\t\t\t\tctx.strokeStyle = labelColors[i].borderColor;\n\t\t\t\t\tctx.strokeRect(colorX, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t// Inner square\n\t\t\t\t\tctx.fillStyle = labelColors[i].backgroundColor;\n\t\t\t\t\tctx.fillRect(colorX + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n\t\t\t\t\tctx.fillStyle = textColor;\n\t\t\t\t}\n\n\t\t\t\tfillLineOfText(line);\n\t\t\t});\n\n\t\t\thelpers$1.each(bodyItem.after, fillLineOfText);\n\t\t});\n\n\t\t// Reset back to 0 for after body\n\t\txLinePadding = 0;\n\n\t\t// After body lines\n\t\thelpers$1.each(vm.afterBody, fillLineOfText);\n\t\tpt.y -= bodySpacing; // Remove last body spacing\n\t},\n\n\tdrawFooter: function(pt, vm, ctx) {\n\t\tvar footer = vm.footer;\n\n\t\tif (footer.length) {\n\t\t\tpt.x = getAlignedX(vm, vm._footerAlign);\n\t\t\tpt.y += vm.footerMarginTop;\n\n\t\t\tctx.textAlign = vm._footerAlign;\n\t\t\tctx.textBaseline = 'top';\n\n\t\t\tctx.fillStyle = vm.footerFontColor;\n\t\t\tctx.font = helpers$1.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n\n\t\t\thelpers$1.each(footer, function(line) {\n\t\t\t\tctx.fillText(line, pt.x, pt.y);\n\t\t\t\tpt.y += vm.footerFontSize + vm.footerSpacing;\n\t\t\t});\n\t\t}\n\t},\n\n\tdrawBackground: function(pt, vm, ctx, tooltipSize) {\n\t\tctx.fillStyle = vm.backgroundColor;\n\t\tctx.strokeStyle = vm.borderColor;\n\t\tctx.lineWidth = vm.borderWidth;\n\t\tvar xAlign = vm.xAlign;\n\t\tvar yAlign = vm.yAlign;\n\t\tvar x = pt.x;\n\t\tvar y = pt.y;\n\t\tvar width = tooltipSize.width;\n\t\tvar height = tooltipSize.height;\n\t\tvar radius = vm.cornerRadius;\n\n\t\tctx.beginPath();\n\t\tctx.moveTo(x + radius, y);\n\t\tif (yAlign === 'top') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x + width - radius, y);\n\t\tctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\t\tif (yAlign === 'center' && xAlign === 'right') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x + width, y + height - radius);\n\t\tctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\t\tif (yAlign === 'bottom') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x + radius, y + height);\n\t\tctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\t\tif (yAlign === 'center' && xAlign === 'left') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x, y + radius);\n\t\tctx.quadraticCurveTo(x, y, x + radius, y);\n\t\tctx.closePath();\n\n\t\tctx.fill();\n\n\t\tif (vm.borderWidth > 0) {\n\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\n\t\tif (vm.opacity === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar tooltipSize = {\n\t\t\twidth: vm.width,\n\t\t\theight: vm.height\n\t\t};\n\t\tvar pt = {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\n\t\t// IE11/Edge does not like very small opacities, so snap to 0\n\t\tvar opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity;\n\n\t\t// Truthy/falsey value for empty tooltip\n\t\tvar hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n\t\tif (this._options.enabled && hasTooltipContent) {\n\t\t\tctx.save();\n\t\t\tctx.globalAlpha = opacity;\n\n\t\t\t// Draw Background\n\t\t\tthis.drawBackground(pt, vm, ctx, tooltipSize);\n\n\t\t\t// Draw Title, Body, and Footer\n\t\t\tpt.y += vm.yPadding;\n\n\t\t\t// Titles\n\t\t\tthis.drawTitle(pt, vm, ctx);\n\n\t\t\t// Body\n\t\t\tthis.drawBody(pt, vm, ctx);\n\n\t\t\t// Footer\n\t\t\tthis.drawFooter(pt, vm, ctx);\n\n\t\t\tctx.restore();\n\t\t}\n\t},\n\n\t/**\n\t * Handle an event\n\t * @private\n\t * @param {IEvent} event - The event to handle\n\t * @returns {boolean} true if the tooltip changed\n\t */\n\thandleEvent: function(e) {\n\t\tvar me = this;\n\t\tvar options = me._options;\n\t\tvar changed = false;\n\n\t\tme._lastActive = me._lastActive || [];\n\n\t\t// Find Active Elements for tooltips\n\t\tif (e.type === 'mouseout') {\n\t\t\tme._active = [];\n\t\t} else {\n\t\t\tme._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n\t\t}\n\n\t\t// Remember Last Actives\n\t\tchanged = !helpers$1.arrayEquals(me._active, me._lastActive);\n\n\t\t// Only handle target event on tooltip change\n\t\tif (changed) {\n\t\t\tme._lastActive = me._active;\n\n\t\t\tif (options.enabled || options.custom) {\n\t\t\t\tme._eventPosition = {\n\t\t\t\t\tx: e.x,\n\t\t\t\t\ty: e.y\n\t\t\t\t};\n\n\t\t\t\tme.update(true);\n\t\t\t\tme.pivot();\n\t\t\t}\n\t\t}\n\n\t\treturn changed;\n\t}\n});\n\n/**\n * @namespace Chart.Tooltip.positioners\n */\nvar positioners_1 = positioners;\n\nvar core_tooltip = exports$3;\ncore_tooltip.positioners = positioners_1;\n\nvar valueOrDefault$8 = helpers$1.valueOrDefault;\n\ncore_defaults._set('global', {\n\telements: {},\n\tevents: [\n\t\t'mousemove',\n\t\t'mouseout',\n\t\t'click',\n\t\t'touchstart',\n\t\t'touchmove'\n\t],\n\thover: {\n\t\tonHover: null,\n\t\tmode: 'nearest',\n\t\tintersect: true,\n\t\tanimationDuration: 400\n\t},\n\tonClick: null,\n\tmaintainAspectRatio: true,\n\tresponsive: true,\n\tresponsiveAnimationDuration: 0\n});\n\n/**\n * Recursively merge the given config objects representing the `scales` option\n * by incorporating scale defaults in `xAxes` and `yAxes` array items, then\n * returns a deep copy of the result, thus doesn't alter inputs.\n */\nfunction mergeScaleConfig(/* config objects ... */) {\n\treturn helpers$1.merge({}, [].slice.call(arguments), {\n\t\tmerger: function(key, target, source, options) {\n\t\t\tif (key === 'xAxes' || key === 'yAxes') {\n\t\t\t\tvar slen = source[key].length;\n\t\t\t\tvar i, type, scale;\n\n\t\t\t\tif (!target[key]) {\n\t\t\t\t\ttarget[key] = [];\n\t\t\t\t}\n\n\t\t\t\tfor (i = 0; i < slen; ++i) {\n\t\t\t\t\tscale = source[key][i];\n\t\t\t\t\ttype = valueOrDefault$8(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n\t\t\t\t\tif (i >= target[key].length) {\n\t\t\t\t\t\ttarget[key].push({});\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!target[key][i].type || (scale.type && scale.type !== target[key][i].type)) {\n\t\t\t\t\t\t// new/untyped scale or type changed: let's apply the new defaults\n\t\t\t\t\t\t// then merge source scale to correctly overwrite the defaults.\n\t\t\t\t\t\thelpers$1.merge(target[key][i], [core_scaleService.getScaleDefaults(type), scale]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// scales type are the same\n\t\t\t\t\t\thelpers$1.merge(target[key][i], scale);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\thelpers$1._merger(key, target, source, options);\n\t\t\t}\n\t\t}\n\t});\n}\n\n/**\n * Recursively merge the given config objects as the root options by handling\n * default scale options for the `scales` and `scale` properties, then returns\n * a deep copy of the result, thus doesn't alter inputs.\n */\nfunction mergeConfig(/* config objects ... */) {\n\treturn helpers$1.merge({}, [].slice.call(arguments), {\n\t\tmerger: function(key, target, source, options) {\n\t\t\tvar tval = target[key] || {};\n\t\t\tvar sval = source[key];\n\n\t\t\tif (key === 'scales') {\n\t\t\t\t// scale config merging is complex. Add our own function here for that\n\t\t\t\ttarget[key] = mergeScaleConfig(tval, sval);\n\t\t\t} else if (key === 'scale') {\n\t\t\t\t// used in polar area & radar charts since there is only one scale\n\t\t\t\ttarget[key] = helpers$1.merge(tval, [core_scaleService.getScaleDefaults(sval.type), sval]);\n\t\t\t} else {\n\t\t\t\thelpers$1._merger(key, target, source, options);\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction initConfig(config) {\n\tconfig = config || {};\n\n\t// Do NOT use mergeConfig for the data object because this method merges arrays\n\t// and so would change references to labels and datasets, preventing data updates.\n\tvar data = config.data = config.data || {};\n\tdata.datasets = data.datasets || [];\n\tdata.labels = data.labels || [];\n\n\tconfig.options = mergeConfig(\n\t\tcore_defaults.global,\n\t\tcore_defaults[config.type],\n\t\tconfig.options || {});\n\n\treturn config;\n}\n\nfunction updateConfig(chart) {\n\tvar newOptions = chart.options;\n\n\thelpers$1.each(chart.scales, function(scale) {\n\t\tcore_layouts.removeBox(chart, scale);\n\t});\n\n\tnewOptions = mergeConfig(\n\t\tcore_defaults.global,\n\t\tcore_defaults[chart.config.type],\n\t\tnewOptions);\n\n\tchart.options = chart.config.options = newOptions;\n\tchart.ensureScalesHaveIDs();\n\tchart.buildOrUpdateScales();\n\n\t// Tooltip\n\tchart.tooltip._options = newOptions.tooltips;\n\tchart.tooltip.initialize();\n}\n\nfunction positionIsHorizontal(position) {\n\treturn position === 'top' || position === 'bottom';\n}\n\nvar Chart = function(item, config) {\n\tthis.construct(item, config);\n\treturn this;\n};\n\nhelpers$1.extend(Chart.prototype, /** @lends Chart */ {\n\t/**\n\t * @private\n\t */\n\tconstruct: function(item, config) {\n\t\tvar me = this;\n\n\t\tconfig = initConfig(config);\n\n\t\tvar context = platform.acquireContext(item, config);\n\t\tvar canvas = context && context.canvas;\n\t\tvar height = canvas && canvas.height;\n\t\tvar width = canvas && canvas.width;\n\n\t\tme.id = helpers$1.uid();\n\t\tme.ctx = context;\n\t\tme.canvas = canvas;\n\t\tme.config = config;\n\t\tme.width = width;\n\t\tme.height = height;\n\t\tme.aspectRatio = height ? width / height : null;\n\t\tme.options = config.options;\n\t\tme._bufferedRender = false;\n\n\t\t/**\n\t\t * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n\t\t * the \"instance\" still need to be defined since it might be called from plugins.\n\t\t * @prop Chart#chart\n\t\t * @deprecated since version 2.6.0\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\tme.chart = me;\n\t\tme.controller = me; // chart.chart.controller #inception\n\n\t\t// Add the chart instance to the global namespace\n\t\tChart.instances[me.id] = me;\n\n\t\t// Define alias to the config data: `chart.data === chart.config.data`\n\t\tObject.defineProperty(me, 'data', {\n\t\t\tget: function() {\n\t\t\t\treturn me.config.data;\n\t\t\t},\n\t\t\tset: function(value) {\n\t\t\t\tme.config.data = value;\n\t\t\t}\n\t\t});\n\n\t\tif (!context || !canvas) {\n\t\t\t// The given item is not a compatible context2d element, let's return before finalizing\n\t\t\t// the chart initialization but after setting basic chart / controller properties that\n\t\t\t// can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n\t\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\t\tconsole.error(\"Failed to create chart: can't acquire context from the given item\");\n\t\t\treturn;\n\t\t}\n\n\t\tme.initialize();\n\t\tme.update();\n\t},\n\n\t/**\n\t * @private\n\t */\n\tinitialize: function() {\n\t\tvar me = this;\n\n\t\t// Before init plugin notification\n\t\tcore_plugins.notify(me, 'beforeInit');\n\n\t\thelpers$1.retinaScale(me, me.options.devicePixelRatio);\n\n\t\tme.bindEvents();\n\n\t\tif (me.options.responsive) {\n\t\t\t// Initial resize before chart draws (must be silent to preserve initial animations).\n\t\t\tme.resize(true);\n\t\t}\n\n\t\t// Make sure scales have IDs and are built before we build any controllers.\n\t\tme.ensureScalesHaveIDs();\n\t\tme.buildOrUpdateScales();\n\t\tme.initToolTip();\n\n\t\t// After init plugin notification\n\t\tcore_plugins.notify(me, 'afterInit');\n\n\t\treturn me;\n\t},\n\n\tclear: function() {\n\t\thelpers$1.canvas.clear(this);\n\t\treturn this;\n\t},\n\n\tstop: function() {\n\t\t// Stops any current animation loop occurring\n\t\tcore_animations.cancelAnimation(this);\n\t\treturn this;\n\t},\n\n\tresize: function(silent) {\n\t\tvar me = this;\n\t\tvar options = me.options;\n\t\tvar canvas = me.canvas;\n\t\tvar aspectRatio = (options.maintainAspectRatio && me.aspectRatio) || null;\n\n\t\t// the canvas render width and height will be casted to integers so make sure that\n\t\t// the canvas display style uses the same integer values to avoid blurring effect.\n\n\t\t// Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\t\tvar newWidth = Math.max(0, Math.floor(helpers$1.getMaximumWidth(canvas)));\n\t\tvar newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers$1.getMaximumHeight(canvas)));\n\n\t\tif (me.width === newWidth && me.height === newHeight) {\n\t\t\treturn;\n\t\t}\n\n\t\tcanvas.width = me.width = newWidth;\n\t\tcanvas.height = me.height = newHeight;\n\t\tcanvas.style.width = newWidth + 'px';\n\t\tcanvas.style.height = newHeight + 'px';\n\n\t\thelpers$1.retinaScale(me, options.devicePixelRatio);\n\n\t\tif (!silent) {\n\t\t\t// Notify any plugins about the resize\n\t\t\tvar newSize = {width: newWidth, height: newHeight};\n\t\t\tcore_plugins.notify(me, 'resize', [newSize]);\n\n\t\t\t// Notify of resize\n\t\t\tif (options.onResize) {\n\t\t\t\toptions.onResize(me, newSize);\n\t\t\t}\n\n\t\t\tme.stop();\n\t\t\tme.update({\n\t\t\t\tduration: options.responsiveAnimationDuration\n\t\t\t});\n\t\t}\n\t},\n\n\tensureScalesHaveIDs: function() {\n\t\tvar options = this.options;\n\t\tvar scalesOptions = options.scales || {};\n\t\tvar scaleOptions = options.scale;\n\n\t\thelpers$1.each(scalesOptions.xAxes, function(xAxisOptions, index) {\n\t\t\txAxisOptions.id = xAxisOptions.id || ('x-axis-' + index);\n\t\t});\n\n\t\thelpers$1.each(scalesOptions.yAxes, function(yAxisOptions, index) {\n\t\t\tyAxisOptions.id = yAxisOptions.id || ('y-axis-' + index);\n\t\t});\n\n\t\tif (scaleOptions) {\n\t\t\tscaleOptions.id = scaleOptions.id || 'scale';\n\t\t}\n\t},\n\n\t/**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n\tbuildOrUpdateScales: function() {\n\t\tvar me = this;\n\t\tvar options = me.options;\n\t\tvar scales = me.scales || {};\n\t\tvar items = [];\n\t\tvar updated = Object.keys(scales).reduce(function(obj, id) {\n\t\t\tobj[id] = false;\n\t\t\treturn obj;\n\t\t}, {});\n\n\t\tif (options.scales) {\n\t\t\titems = items.concat(\n\t\t\t\t(options.scales.xAxes || []).map(function(xAxisOptions) {\n\t\t\t\t\treturn {options: xAxisOptions, dtype: 'category', dposition: 'bottom'};\n\t\t\t\t}),\n\t\t\t\t(options.scales.yAxes || []).map(function(yAxisOptions) {\n\t\t\t\t\treturn {options: yAxisOptions, dtype: 'linear', dposition: 'left'};\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\n\t\tif (options.scale) {\n\t\t\titems.push({\n\t\t\t\toptions: options.scale,\n\t\t\t\tdtype: 'radialLinear',\n\t\t\t\tisDefault: true,\n\t\t\t\tdposition: 'chartArea'\n\t\t\t});\n\t\t}\n\n\t\thelpers$1.each(items, function(item) {\n\t\t\tvar scaleOptions = item.options;\n\t\t\tvar id = scaleOptions.id;\n\t\t\tvar scaleType = valueOrDefault$8(scaleOptions.type, item.dtype);\n\n\t\t\tif (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n\t\t\t\tscaleOptions.position = item.dposition;\n\t\t\t}\n\n\t\t\tupdated[id] = true;\n\t\t\tvar scale = null;\n\t\t\tif (id in scales && scales[id].type === scaleType) {\n\t\t\t\tscale = scales[id];\n\t\t\t\tscale.options = scaleOptions;\n\t\t\t\tscale.ctx = me.ctx;\n\t\t\t\tscale.chart = me;\n\t\t\t} else {\n\t\t\t\tvar scaleClass = core_scaleService.getScaleConstructor(scaleType);\n\t\t\t\tif (!scaleClass) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tscale = new scaleClass({\n\t\t\t\t\tid: id,\n\t\t\t\t\ttype: scaleType,\n\t\t\t\t\toptions: scaleOptions,\n\t\t\t\t\tctx: me.ctx,\n\t\t\t\t\tchart: me\n\t\t\t\t});\n\t\t\t\tscales[scale.id] = scale;\n\t\t\t}\n\n\t\t\tscale.mergeTicksOptions();\n\n\t\t\t// TODO(SB): I think we should be able to remove this custom case (options.scale)\n\t\t\t// and consider it as a regular scale part of the \"scales\"\" map only! This would\n\t\t\t// make the logic easier and remove some useless? custom code.\n\t\t\tif (item.isDefault) {\n\t\t\t\tme.scale = scale;\n\t\t\t}\n\t\t});\n\t\t// clear up discarded scales\n\t\thelpers$1.each(updated, function(hasUpdated, id) {\n\t\t\tif (!hasUpdated) {\n\t\t\t\tdelete scales[id];\n\t\t\t}\n\t\t});\n\n\t\tme.scales = scales;\n\n\t\tcore_scaleService.addScalesToLayout(this);\n\t},\n\n\tbuildOrUpdateControllers: function() {\n\t\tvar me = this;\n\t\tvar newControllers = [];\n\n\t\thelpers$1.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\tvar meta = me.getDatasetMeta(datasetIndex);\n\t\t\tvar type = dataset.type || me.config.type;\n\n\t\t\tif (meta.type && meta.type !== type) {\n\t\t\t\tme.destroyDatasetMeta(datasetIndex);\n\t\t\t\tmeta = me.getDatasetMeta(datasetIndex);\n\t\t\t}\n\t\t\tmeta.type = type;\n\n\t\t\tif (meta.controller) {\n\t\t\t\tmeta.controller.updateIndex(datasetIndex);\n\t\t\t\tmeta.controller.linkScales();\n\t\t\t} else {\n\t\t\t\tvar ControllerClass = controllers[meta.type];\n\t\t\t\tif (ControllerClass === undefined) {\n\t\t\t\t\tthrow new Error('\"' + meta.type + '\" is not a chart type.');\n\t\t\t\t}\n\n\t\t\t\tmeta.controller = new ControllerClass(me, datasetIndex);\n\t\t\t\tnewControllers.push(meta.controller);\n\t\t\t}\n\t\t}, me);\n\n\t\treturn newControllers;\n\t},\n\n\t/**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n\tresetElements: function() {\n\t\tvar me = this;\n\t\thelpers$1.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\tme.getDatasetMeta(datasetIndex).controller.reset();\n\t\t}, me);\n\t},\n\n\t/**\n\t* Resets the chart back to it's state before the initial animation\n\t*/\n\treset: function() {\n\t\tthis.resetElements();\n\t\tthis.tooltip.initialize();\n\t},\n\n\tupdate: function(config) {\n\t\tvar me = this;\n\n\t\tif (!config || typeof config !== 'object') {\n\t\t\t// backwards compatibility\n\t\t\tconfig = {\n\t\t\t\tduration: config,\n\t\t\t\tlazy: arguments[1]\n\t\t\t};\n\t\t}\n\n\t\tupdateConfig(me);\n\n\t\t// plugins options references might have change, let's invalidate the cache\n\t\t// https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\t\tcore_plugins._invalidate(me);\n\n\t\tif (core_plugins.notify(me, 'beforeUpdate') === false) {\n\t\t\treturn;\n\t\t}\n\n\t\t// In case the entire data object changed\n\t\tme.tooltip._data = me.data;\n\n\t\t// Make sure dataset controllers are updated and new controllers are reset\n\t\tvar newControllers = me.buildOrUpdateControllers();\n\n\t\t// Make sure all dataset controllers have correct meta data counts\n\t\thelpers$1.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\tme.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n\t\t}, me);\n\n\t\tme.updateLayout();\n\n\t\t// Can only reset the new controllers after the scales have been updated\n\t\tif (me.options.animation && me.options.animation.duration) {\n\t\t\thelpers$1.each(newControllers, function(controller) {\n\t\t\t\tcontroller.reset();\n\t\t\t});\n\t\t}\n\n\t\tme.updateDatasets();\n\n\t\t// Need to reset tooltip in case it is displayed with elements that are removed\n\t\t// after update.\n\t\tme.tooltip.initialize();\n\n\t\t// Last active contains items that were previously in the tooltip.\n\t\t// When we reset the tooltip, we need to clear it\n\t\tme.lastActive = [];\n\n\t\t// Do this before render so that any plugins that need final scale updates can use it\n\t\tcore_plugins.notify(me, 'afterUpdate');\n\n\t\tif (me._bufferedRender) {\n\t\t\tme._bufferedRequest = {\n\t\t\t\tduration: config.duration,\n\t\t\t\teasing: config.easing,\n\t\t\t\tlazy: config.lazy\n\t\t\t};\n\t\t} else {\n\t\t\tme.render(config);\n\t\t}\n\t},\n\n\t/**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n\tupdateLayout: function() {\n\t\tvar me = this;\n\n\t\tif (core_plugins.notify(me, 'beforeLayout') === false) {\n\t\t\treturn;\n\t\t}\n\n\t\tcore_layouts.update(this, this.width, this.height);\n\n\t\t/**\n\t\t * Provided for backward compatibility, use `afterLayout` instead.\n\t\t * @method IPlugin#afterScaleUpdate\n\t\t * @deprecated since version 2.5.0\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\tcore_plugins.notify(me, 'afterScaleUpdate');\n\t\tcore_plugins.notify(me, 'afterLayout');\n\t},\n\n\t/**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n\tupdateDatasets: function() {\n\t\tvar me = this;\n\n\t\tif (core_plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\tme.updateDataset(i);\n\t\t}\n\n\t\tcore_plugins.notify(me, 'afterDatasetsUpdate');\n\t},\n\n\t/**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n\tupdateDataset: function(index) {\n\t\tvar me = this;\n\t\tvar meta = me.getDatasetMeta(index);\n\t\tvar args = {\n\t\t\tmeta: meta,\n\t\t\tindex: index\n\t\t};\n\n\t\tif (core_plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\tmeta.controller.update();\n\n\t\tcore_plugins.notify(me, 'afterDatasetUpdate', [args]);\n\t},\n\n\trender: function(config) {\n\t\tvar me = this;\n\n\t\tif (!config || typeof config !== 'object') {\n\t\t\t// backwards compatibility\n\t\t\tconfig = {\n\t\t\t\tduration: config,\n\t\t\t\tlazy: arguments[1]\n\t\t\t};\n\t\t}\n\n\t\tvar animationOptions = me.options.animation;\n\t\tvar duration = valueOrDefault$8(config.duration, animationOptions && animationOptions.duration);\n\t\tvar lazy = config.lazy;\n\n\t\tif (core_plugins.notify(me, 'beforeRender') === false) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar onComplete = function(animation) {\n\t\t\tcore_plugins.notify(me, 'afterRender');\n\t\t\thelpers$1.callback(animationOptions && animationOptions.onComplete, [animation], me);\n\t\t};\n\n\t\tif (animationOptions && duration) {\n\t\t\tvar animation = new core_animation({\n\t\t\t\tnumSteps: duration / 16.66, // 60 fps\n\t\t\t\teasing: config.easing || animationOptions.easing,\n\n\t\t\t\trender: function(chart, animationObject) {\n\t\t\t\t\tvar easingFunction = helpers$1.easing.effects[animationObject.easing];\n\t\t\t\t\tvar currentStep = animationObject.currentStep;\n\t\t\t\t\tvar stepDecimal = currentStep / animationObject.numSteps;\n\n\t\t\t\t\tchart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n\t\t\t\t},\n\n\t\t\t\tonAnimationProgress: animationOptions.onProgress,\n\t\t\t\tonAnimationComplete: onComplete\n\t\t\t});\n\n\t\t\tcore_animations.addAnimation(me, animation, duration, lazy);\n\t\t} else {\n\t\t\tme.draw();\n\n\t\t\t// See https://github.com/chartjs/Chart.js/issues/3781\n\t\t\tonComplete(new core_animation({numSteps: 0, chart: me}));\n\t\t}\n\n\t\treturn me;\n\t},\n\n\tdraw: function(easingValue) {\n\t\tvar me = this;\n\n\t\tme.clear();\n\n\t\tif (helpers$1.isNullOrUndef(easingValue)) {\n\t\t\teasingValue = 1;\n\t\t}\n\n\t\tme.transition(easingValue);\n\n\t\tif (me.width <= 0 || me.height <= 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (core_plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Draw all the scales\n\t\thelpers$1.each(me.boxes, function(box) {\n\t\t\tbox.draw(me.chartArea);\n\t\t}, me);\n\n\t\tme.drawDatasets(easingValue);\n\t\tme._drawTooltip(easingValue);\n\n\t\tcore_plugins.notify(me, 'afterDraw', [easingValue]);\n\t},\n\n\t/**\n\t * @private\n\t */\n\ttransition: function(easingValue) {\n\t\tvar me = this;\n\n\t\tfor (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\tme.getDatasetMeta(i).controller.transition(easingValue);\n\t\t\t}\n\t\t}\n\n\t\tme.tooltip.transition(easingValue);\n\t},\n\n\t/**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n\tdrawDatasets: function(easingValue) {\n\t\tvar me = this;\n\n\t\tif (core_plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Draw datasets reversed to support proper line stacking\n\t\tfor (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\tme.drawDataset(i, easingValue);\n\t\t\t}\n\t\t}\n\n\t\tcore_plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n\t},\n\n\t/**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n\tdrawDataset: function(index, easingValue) {\n\t\tvar me = this;\n\t\tvar meta = me.getDatasetMeta(index);\n\t\tvar args = {\n\t\t\tmeta: meta,\n\t\t\tindex: index,\n\t\t\teasingValue: easingValue\n\t\t};\n\n\t\tif (core_plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\tmeta.controller.draw(easingValue);\n\n\t\tcore_plugins.notify(me, 'afterDatasetDraw', [args]);\n\t},\n\n\t/**\n\t * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n\t * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n\t * @private\n\t */\n\t_drawTooltip: function(easingValue) {\n\t\tvar me = this;\n\t\tvar tooltip = me.tooltip;\n\t\tvar args = {\n\t\t\ttooltip: tooltip,\n\t\t\teasingValue: easingValue\n\t\t};\n\n\t\tif (core_plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\ttooltip.draw();\n\n\t\tcore_plugins.notify(me, 'afterTooltipDraw', [args]);\n\t},\n\n\t/**\n\t * Get the single element that was clicked on\n\t * @return An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n\t */\n\tgetElementAtEvent: function(e) {\n\t\treturn core_interaction.modes.single(this, e);\n\t},\n\n\tgetElementsAtEvent: function(e) {\n\t\treturn core_interaction.modes.label(this, e, {intersect: true});\n\t},\n\n\tgetElementsAtXAxis: function(e) {\n\t\treturn core_interaction.modes['x-axis'](this, e, {intersect: true});\n\t},\n\n\tgetElementsAtEventForMode: function(e, mode, options) {\n\t\tvar method = core_interaction.modes[mode];\n\t\tif (typeof method === 'function') {\n\t\t\treturn method(this, e, options);\n\t\t}\n\n\t\treturn [];\n\t},\n\n\tgetDatasetAtEvent: function(e) {\n\t\treturn core_interaction.modes.dataset(this, e, {intersect: true});\n\t},\n\n\tgetDatasetMeta: function(datasetIndex) {\n\t\tvar me = this;\n\t\tvar dataset = me.data.datasets[datasetIndex];\n\t\tif (!dataset._meta) {\n\t\t\tdataset._meta = {};\n\t\t}\n\n\t\tvar meta = dataset._meta[me.id];\n\t\tif (!meta) {\n\t\t\tmeta = dataset._meta[me.id] = {\n\t\t\t\ttype: null,\n\t\t\t\tdata: [],\n\t\t\t\tdataset: null,\n\t\t\t\tcontroller: null,\n\t\t\t\thidden: null,\t\t\t// See isDatasetVisible() comment\n\t\t\t\txAxisID: null,\n\t\t\t\tyAxisID: null\n\t\t\t};\n\t\t}\n\n\t\treturn meta;\n\t},\n\n\tgetVisibleDatasetCount: function() {\n\t\tvar count = 0;\n\t\tfor (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n\t\t\tif (this.isDatasetVisible(i)) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\treturn count;\n\t},\n\n\tisDatasetVisible: function(datasetIndex) {\n\t\tvar meta = this.getDatasetMeta(datasetIndex);\n\n\t\t// meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n\t\t// the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\t\treturn typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n\t},\n\n\tgenerateLegend: function() {\n\t\treturn this.options.legendCallback(this);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tdestroyDatasetMeta: function(datasetIndex) {\n\t\tvar id = this.id;\n\t\tvar dataset = this.data.datasets[datasetIndex];\n\t\tvar meta = dataset._meta && dataset._meta[id];\n\n\t\tif (meta) {\n\t\t\tmeta.controller.destroy();\n\t\t\tdelete dataset._meta[id];\n\t\t}\n\t},\n\n\tdestroy: function() {\n\t\tvar me = this;\n\t\tvar canvas = me.canvas;\n\t\tvar i, ilen;\n\n\t\tme.stop();\n\n\t\t// dataset controllers need to cleanup associated data\n\t\tfor (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\tme.destroyDatasetMeta(i);\n\t\t}\n\n\t\tif (canvas) {\n\t\t\tme.unbindEvents();\n\t\t\thelpers$1.canvas.clear(me);\n\t\t\tplatform.releaseContext(me.ctx);\n\t\t\tme.canvas = null;\n\t\t\tme.ctx = null;\n\t\t}\n\n\t\tcore_plugins.notify(me, 'destroy');\n\n\t\tdelete Chart.instances[me.id];\n\t},\n\n\ttoBase64Image: function() {\n\t\treturn this.canvas.toDataURL.apply(this.canvas, arguments);\n\t},\n\n\tinitToolTip: function() {\n\t\tvar me = this;\n\t\tme.tooltip = new core_tooltip({\n\t\t\t_chart: me,\n\t\t\t_chartInstance: me, // deprecated, backward compatibility\n\t\t\t_data: me.data,\n\t\t\t_options: me.options.tooltips\n\t\t}, me);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tbindEvents: function() {\n\t\tvar me = this;\n\t\tvar listeners = me._listeners = {};\n\t\tvar listener = function() {\n\t\t\tme.eventHandler.apply(me, arguments);\n\t\t};\n\n\t\thelpers$1.each(me.options.events, function(type) {\n\t\t\tplatform.addEventListener(me, type, listener);\n\t\t\tlisteners[type] = listener;\n\t\t});\n\n\t\t// Elements used to detect size change should not be injected for non responsive charts.\n\t\t// See https://github.com/chartjs/Chart.js/issues/2210\n\t\tif (me.options.responsive) {\n\t\t\tlistener = function() {\n\t\t\t\tme.resize();\n\t\t\t};\n\n\t\t\tplatform.addEventListener(me, 'resize', listener);\n\t\t\tlisteners.resize = listener;\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tunbindEvents: function() {\n\t\tvar me = this;\n\t\tvar listeners = me._listeners;\n\t\tif (!listeners) {\n\t\t\treturn;\n\t\t}\n\n\t\tdelete me._listeners;\n\t\thelpers$1.each(listeners, function(listener, type) {\n\t\t\tplatform.removeEventListener(me, type, listener);\n\t\t});\n\t},\n\n\tupdateHoverStyle: function(elements, mode, enabled) {\n\t\tvar method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n\t\tvar element, i, ilen;\n\n\t\tfor (i = 0, ilen = elements.length; i < ilen; ++i) {\n\t\t\telement = elements[i];\n\t\t\tif (element) {\n\t\t\t\tthis.getDatasetMeta(element._datasetIndex).controller[method](element);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\teventHandler: function(e) {\n\t\tvar me = this;\n\t\tvar tooltip = me.tooltip;\n\n\t\tif (core_plugins.notify(me, 'beforeEvent', [e]) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Buffer any update calls so that renders do not occur\n\t\tme._bufferedRender = true;\n\t\tme._bufferedRequest = null;\n\n\t\tvar changed = me.handleEvent(e);\n\t\t// for smooth tooltip animations issue #4989\n\t\t// the tooltip should be the source of change\n\t\t// Animation check workaround:\n\t\t// tooltip._start will be null when tooltip isn't animating\n\t\tif (tooltip) {\n\t\t\tchanged = tooltip._start\n\t\t\t\t? tooltip.handleEvent(e)\n\t\t\t\t: changed | tooltip.handleEvent(e);\n\t\t}\n\n\t\tcore_plugins.notify(me, 'afterEvent', [e]);\n\n\t\tvar bufferedRequest = me._bufferedRequest;\n\t\tif (bufferedRequest) {\n\t\t\t// If we have an update that was triggered, we need to do a normal render\n\t\t\tme.render(bufferedRequest);\n\t\t} else if (changed && !me.animating) {\n\t\t\t// If entering, leaving, or changing elements, animate the change via pivot\n\t\t\tme.stop();\n\n\t\t\t// We only need to render at this point. Updating will cause scales to be\n\t\t\t// recomputed generating flicker & using more memory than necessary.\n\t\t\tme.render({\n\t\t\t\tduration: me.options.hover.animationDuration,\n\t\t\t\tlazy: true\n\t\t\t});\n\t\t}\n\n\t\tme._bufferedRender = false;\n\t\tme._bufferedRequest = null;\n\n\t\treturn me;\n\t},\n\n\t/**\n\t * Handle an event\n\t * @private\n\t * @param {IEvent} event the event to handle\n\t * @return {boolean} true if the chart needs to re-render\n\t */\n\thandleEvent: function(e) {\n\t\tvar me = this;\n\t\tvar options = me.options || {};\n\t\tvar hoverOptions = options.hover;\n\t\tvar changed = false;\n\n\t\tme.lastActive = me.lastActive || [];\n\n\t\t// Find Active Elements for hover and tooltips\n\t\tif (e.type === 'mouseout') {\n\t\t\tme.active = [];\n\t\t} else {\n\t\t\tme.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n\t\t}\n\n\t\t// Invoke onHover hook\n\t\t// Need to call with native event here to not break backwards compatibility\n\t\thelpers$1.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n\t\tif (e.type === 'mouseup' || e.type === 'click') {\n\t\t\tif (options.onClick) {\n\t\t\t\t// Use e.native here for backwards compatibility\n\t\t\t\toptions.onClick.call(me, e.native, me.active);\n\t\t\t}\n\t\t}\n\n\t\t// Remove styling for last active (even if it may still be active)\n\t\tif (me.lastActive.length) {\n\t\t\tme.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n\t\t}\n\n\t\t// Built in hover styling\n\t\tif (me.active.length && hoverOptions.mode) {\n\t\t\tme.updateHoverStyle(me.active, hoverOptions.mode, true);\n\t\t}\n\n\t\tchanged = !helpers$1.arrayEquals(me.active, me.lastActive);\n\n\t\t// Remember Last Actives\n\t\tme.lastActive = me.active;\n\n\t\treturn changed;\n\t}\n});\n\n/**\n * NOTE(SB) We actually don't use this container anymore but we need to keep it\n * for backward compatibility. Though, it can still be useful for plugins that\n * would need to work on multiple charts?!\n */\nChart.instances = {};\n\nvar core_controller = Chart;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart instead.\n * @class Chart.Controller\n * @deprecated since version 2.6\n * @todo remove at version 3\n * @private\n */\nChart.Controller = Chart;\n\n/**\n * Provided for backward compatibility, not available anymore.\n * @namespace Chart\n * @deprecated since version 2.8\n * @todo remove at version 3\n * @private\n */\nChart.types = {};\n\n/**\n * Provided for backward compatibility, not available anymore.\n * @namespace Chart.helpers.configMerge\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\nhelpers$1.configMerge = mergeConfig;\n\n/**\n * Provided for backward compatibility, not available anymore.\n * @namespace Chart.helpers.scaleMerge\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\nhelpers$1.scaleMerge = mergeScaleConfig;\n\nvar core_helpers = function() {\n\n\t// -- Basic js utility methods\n\n\thelpers$1.where = function(collection, filterCallback) {\n\t\tif (helpers$1.isArray(collection) && Array.prototype.filter) {\n\t\t\treturn collection.filter(filterCallback);\n\t\t}\n\t\tvar filtered = [];\n\n\t\thelpers$1.each(collection, function(item) {\n\t\t\tif (filterCallback(item)) {\n\t\t\t\tfiltered.push(item);\n\t\t\t}\n\t\t});\n\n\t\treturn filtered;\n\t};\n\thelpers$1.findIndex = Array.prototype.findIndex ?\n\t\tfunction(array, callback, scope) {\n\t\t\treturn array.findIndex(callback, scope);\n\t\t} :\n\t\tfunction(array, callback, scope) {\n\t\t\tscope = scope === undefined ? array : scope;\n\t\t\tfor (var i = 0, ilen = array.length; i < ilen; ++i) {\n\t\t\t\tif (callback.call(scope, array[i], i, array)) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t};\n\thelpers$1.findNextWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to start of the array\n\t\tif (helpers$1.isNullOrUndef(startIndex)) {\n\t\t\tstartIndex = -1;\n\t\t}\n\t\tfor (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\thelpers$1.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to end of the array\n\t\tif (helpers$1.isNullOrUndef(startIndex)) {\n\t\t\tstartIndex = arrayToSearch.length;\n\t\t}\n\t\tfor (var i = startIndex - 1; i >= 0; i--) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\n\t// -- Math methods\n\thelpers$1.isNumber = function(n) {\n\t\treturn !isNaN(parseFloat(n)) && isFinite(n);\n\t};\n\thelpers$1.almostEquals = function(x, y, epsilon) {\n\t\treturn Math.abs(x - y) < epsilon;\n\t};\n\thelpers$1.almostWhole = function(x, epsilon) {\n\t\tvar rounded = Math.round(x);\n\t\treturn (((rounded - epsilon) < x) && ((rounded + epsilon) > x));\n\t};\n\thelpers$1.max = function(array) {\n\t\treturn array.reduce(function(max, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.max(max, value);\n\t\t\t}\n\t\t\treturn max;\n\t\t}, Number.NEGATIVE_INFINITY);\n\t};\n\thelpers$1.min = function(array) {\n\t\treturn array.reduce(function(min, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.min(min, value);\n\t\t\t}\n\t\t\treturn min;\n\t\t}, Number.POSITIVE_INFINITY);\n\t};\n\thelpers$1.sign = Math.sign ?\n\t\tfunction(x) {\n\t\t\treturn Math.sign(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tx = +x; // convert to a number\n\t\t\tif (x === 0 || isNaN(x)) {\n\t\t\t\treturn x;\n\t\t\t}\n\t\t\treturn x > 0 ? 1 : -1;\n\t\t};\n\thelpers$1.log10 = Math.log10 ?\n\t\tfunction(x) {\n\t\t\treturn Math.log10(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tvar exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n\t\t\t// Check for whole powers of 10,\n\t\t\t// which due to floating point rounding error should be corrected.\n\t\t\tvar powerOf10 = Math.round(exponent);\n\t\t\tvar isPowerOf10 = x === Math.pow(10, powerOf10);\n\n\t\t\treturn isPowerOf10 ? powerOf10 : exponent;\n\t\t};\n\thelpers$1.toRadians = function(degrees) {\n\t\treturn degrees * (Math.PI / 180);\n\t};\n\thelpers$1.toDegrees = function(radians) {\n\t\treturn radians * (180 / Math.PI);\n\t};\n\n\t/**\n\t * Returns the number of decimal places\n\t * i.e. the number of digits after the decimal point, of the value of this Number.\n\t * @param {number} x - A number.\n\t * @returns {number} The number of decimal places.\n\t * @private\n\t */\n\thelpers$1._decimalPlaces = function(x) {\n\t\tif (!helpers$1.isFinite(x)) {\n\t\t\treturn;\n\t\t}\n\t\tvar e = 1;\n\t\tvar p = 0;\n\t\twhile (Math.round(x * e) / e !== x) {\n\t\t\te *= 10;\n\t\t\tp++;\n\t\t}\n\t\treturn p;\n\t};\n\n\t// Gets the angle from vertical upright to the point about a centre.\n\thelpers$1.getAngleFromPoint = function(centrePoint, anglePoint) {\n\t\tvar distanceFromXCenter = anglePoint.x - centrePoint.x;\n\t\tvar distanceFromYCenter = anglePoint.y - centrePoint.y;\n\t\tvar radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n\t\tvar angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n\t\tif (angle < (-0.5 * Math.PI)) {\n\t\t\tangle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n\t\t}\n\n\t\treturn {\n\t\t\tangle: angle,\n\t\t\tdistance: radialDistanceFromCenter\n\t\t};\n\t};\n\thelpers$1.distanceBetweenPoints = function(pt1, pt2) {\n\t\treturn Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n\t};\n\n\t/**\n\t * Provided for backward compatibility, not available anymore\n\t * @function Chart.helpers.aliasPixel\n\t * @deprecated since version 2.8.0\n\t * @todo remove at version 3\n\t */\n\thelpers$1.aliasPixel = function(pixelWidth) {\n\t\treturn (pixelWidth % 2 === 0) ? 0 : 0.5;\n\t};\n\n\t/**\n\t * Returns the aligned pixel value to avoid anti-aliasing blur\n\t * @param {Chart} chart - The chart instance.\n\t * @param {number} pixel - A pixel value.\n\t * @param {number} width - The width of the element.\n\t * @returns {number} The aligned pixel value.\n\t * @private\n\t */\n\thelpers$1._alignPixel = function(chart, pixel, width) {\n\t\tvar devicePixelRatio = chart.currentDevicePixelRatio;\n\t\tvar halfWidth = width / 2;\n\t\treturn Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n\t};\n\n\thelpers$1.splineCurve = function(firstPoint, middlePoint, afterPoint, t) {\n\t\t// Props to Rob Spencer at scaled innovation for his post on splining between points\n\t\t// http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n\t\t// This function must also respect \"skipped\" points\n\n\t\tvar previous = firstPoint.skip ? middlePoint : firstPoint;\n\t\tvar current = middlePoint;\n\t\tvar next = afterPoint.skip ? middlePoint : afterPoint;\n\n\t\tvar d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n\t\tvar d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n\n\t\tvar s01 = d01 / (d01 + d12);\n\t\tvar s12 = d12 / (d01 + d12);\n\n\t\t// If all points are the same, s01 & s02 will be inf\n\t\ts01 = isNaN(s01) ? 0 : s01;\n\t\ts12 = isNaN(s12) ? 0 : s12;\n\n\t\tvar fa = t * s01; // scaling factor for triangle Ta\n\t\tvar fb = t * s12;\n\n\t\treturn {\n\t\t\tprevious: {\n\t\t\t\tx: current.x - fa * (next.x - previous.x),\n\t\t\t\ty: current.y - fa * (next.y - previous.y)\n\t\t\t},\n\t\t\tnext: {\n\t\t\t\tx: current.x + fb * (next.x - previous.x),\n\t\t\t\ty: current.y + fb * (next.y - previous.y)\n\t\t\t}\n\t\t};\n\t};\n\thelpers$1.EPSILON = Number.EPSILON || 1e-14;\n\thelpers$1.splineCurveMonotone = function(points) {\n\t\t// This function calculates Bézier control points in a similar way than |splineCurve|,\n\t\t// but preserves monotonicity of the provided data and ensures no local extremums are added\n\t\t// between the dataset discrete points due to the interpolation.\n\t\t// See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n\n\t\tvar pointsWithTangents = (points || []).map(function(point) {\n\t\t\treturn {\n\t\t\t\tmodel: point._model,\n\t\t\t\tdeltaK: 0,\n\t\t\t\tmK: 0\n\t\t\t};\n\t\t});\n\n\t\t// Calculate slopes (deltaK) and initialize tangents (mK)\n\t\tvar pointsLen = pointsWithTangents.length;\n\t\tvar i, pointBefore, pointCurrent, pointAfter;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tvar slopeDeltaX = (pointAfter.model.x - pointCurrent.model.x);\n\n\t\t\t\t// In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\t\t\t\tpointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n\t\t\t}\n\n\t\t\tif (!pointBefore || pointBefore.model.skip) {\n\t\t\t\tpointCurrent.mK = pointCurrent.deltaK;\n\t\t\t} else if (!pointAfter || pointAfter.model.skip) {\n\t\t\t\tpointCurrent.mK = pointBefore.deltaK;\n\t\t\t} else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n\t\t\t\tpointCurrent.mK = 0;\n\t\t\t} else {\n\t\t\t\tpointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n\t\t\t}\n\t\t}\n\n\t\t// Adjust tangents to ensure monotonic properties\n\t\tvar alphaK, betaK, tauK, squaredMagnitude;\n\t\tfor (i = 0; i < pointsLen - 1; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tpointAfter = pointsWithTangents[i + 1];\n\t\t\tif (pointCurrent.model.skip || pointAfter.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (helpers$1.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n\t\t\t\tpointCurrent.mK = pointAfter.mK = 0;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\talphaK = pointCurrent.mK / pointCurrent.deltaK;\n\t\t\tbetaK = pointAfter.mK / pointCurrent.deltaK;\n\t\t\tsquaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\t\t\tif (squaredMagnitude <= 9) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\ttauK = 3 / Math.sqrt(squaredMagnitude);\n\t\t\tpointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n\t\t\tpointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n\t\t}\n\n\t\t// Compute control points\n\t\tvar deltaX;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointBefore && !pointBefore.model.skip) {\n\t\t\t\tdeltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n\t\t\t\tpointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tdeltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n\t\t\t\tpointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t}\n\t};\n\thelpers$1.nextItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index >= collection.length - 1 ? collection[0] : collection[index + 1];\n\t\t}\n\t\treturn index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n\t};\n\thelpers$1.previousItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n\t\t}\n\t\treturn index <= 0 ? collection[0] : collection[index - 1];\n\t};\n\t// Implementation of the nice number algorithm used in determining where axis labels will go\n\thelpers$1.niceNum = function(range, round) {\n\t\tvar exponent = Math.floor(helpers$1.log10(range));\n\t\tvar fraction = range / Math.pow(10, exponent);\n\t\tvar niceFraction;\n\n\t\tif (round) {\n\t\t\tif (fraction < 1.5) {\n\t\t\t\tniceFraction = 1;\n\t\t\t} else if (fraction < 3) {\n\t\t\t\tniceFraction = 2;\n\t\t\t} else if (fraction < 7) {\n\t\t\t\tniceFraction = 5;\n\t\t\t} else {\n\t\t\t\tniceFraction = 10;\n\t\t\t}\n\t\t} else if (fraction <= 1.0) {\n\t\t\tniceFraction = 1;\n\t\t} else if (fraction <= 2) {\n\t\t\tniceFraction = 2;\n\t\t} else if (fraction <= 5) {\n\t\t\tniceFraction = 5;\n\t\t} else {\n\t\t\tniceFraction = 10;\n\t\t}\n\n\t\treturn niceFraction * Math.pow(10, exponent);\n\t};\n\t// Request animation polyfill - https://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\thelpers$1.requestAnimFrame = (function() {\n\t\tif (typeof window === 'undefined') {\n\t\t\treturn function(callback) {\n\t\t\t\tcallback();\n\t\t\t};\n\t\t}\n\t\treturn window.requestAnimationFrame ||\n\t\t\twindow.webkitRequestAnimationFrame ||\n\t\t\twindow.mozRequestAnimationFrame ||\n\t\t\twindow.oRequestAnimationFrame ||\n\t\t\twindow.msRequestAnimationFrame ||\n\t\t\tfunction(callback) {\n\t\t\t\treturn window.setTimeout(callback, 1000 / 60);\n\t\t\t};\n\t}());\n\t// -- DOM methods\n\thelpers$1.getRelativePosition = function(evt, chart) {\n\t\tvar mouseX, mouseY;\n\t\tvar e = evt.originalEvent || evt;\n\t\tvar canvas = evt.target || evt.srcElement;\n\t\tvar boundingRect = canvas.getBoundingClientRect();\n\n\t\tvar touches = e.touches;\n\t\tif (touches && touches.length > 0) {\n\t\t\tmouseX = touches[0].clientX;\n\t\t\tmouseY = touches[0].clientY;\n\n\t\t} else {\n\t\t\tmouseX = e.clientX;\n\t\t\tmouseY = e.clientY;\n\t\t}\n\n\t\t// Scale mouse coordinates into canvas coordinates\n\t\t// by following the pattern laid out by 'jerryj' in the comments of\n\t\t// https://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\t\tvar paddingLeft = parseFloat(helpers$1.getStyle(canvas, 'padding-left'));\n\t\tvar paddingTop = parseFloat(helpers$1.getStyle(canvas, 'padding-top'));\n\t\tvar paddingRight = parseFloat(helpers$1.getStyle(canvas, 'padding-right'));\n\t\tvar paddingBottom = parseFloat(helpers$1.getStyle(canvas, 'padding-bottom'));\n\t\tvar width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n\t\tvar height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom;\n\n\t\t// We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n\t\t// the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\t\tmouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / (width) * canvas.width / chart.currentDevicePixelRatio);\n\t\tmouseY = Math.round((mouseY - boundingRect.top - paddingTop) / (height) * canvas.height / chart.currentDevicePixelRatio);\n\n\t\treturn {\n\t\t\tx: mouseX,\n\t\t\ty: mouseY\n\t\t};\n\n\t};\n\n\t// Private helper function to convert max-width/max-height values that may be percentages into a number\n\tfunction parseMaxStyle(styleValue, node, parentProperty) {\n\t\tvar valueInPixels;\n\t\tif (typeof styleValue === 'string') {\n\t\t\tvalueInPixels = parseInt(styleValue, 10);\n\n\t\t\tif (styleValue.indexOf('%') !== -1) {\n\t\t\t\t// percentage * size in dimension\n\t\t\t\tvalueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n\t\t\t}\n\t\t} else {\n\t\t\tvalueInPixels = styleValue;\n\t\t}\n\n\t\treturn valueInPixels;\n\t}\n\n\t/**\n\t * Returns if the given value contains an effective constraint.\n\t * @private\n\t */\n\tfunction isConstrainedValue(value) {\n\t\treturn value !== undefined && value !== null && value !== 'none';\n\t}\n\n\t/**\n\t * Returns the max width or height of the given DOM node in a cross-browser compatible fashion\n\t * @param {HTMLElement} domNode - the node to check the constraint on\n\t * @param {string} maxStyle - the style that defines the maximum for the direction we are using ('max-width' / 'max-height')\n\t * @param {string} percentageProperty - property of parent to use when calculating width as a percentage\n\t * @see {@link https://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser}\n\t */\n\tfunction getConstraintDimension(domNode, maxStyle, percentageProperty) {\n\t\tvar view = document.defaultView;\n\t\tvar parentNode = helpers$1._getParentNode(domNode);\n\t\tvar constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n\t\tvar constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n\t\tvar hasCNode = isConstrainedValue(constrainedNode);\n\t\tvar hasCContainer = isConstrainedValue(constrainedContainer);\n\t\tvar infinity = Number.POSITIVE_INFINITY;\n\n\t\tif (hasCNode || hasCContainer) {\n\t\t\treturn Math.min(\n\t\t\t\thasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity,\n\t\t\t\thasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n\t\t}\n\n\t\treturn 'none';\n\t}\n\t// returns Number or undefined if no constraint\n\thelpers$1.getConstraintWidth = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-width', 'clientWidth');\n\t};\n\t// returns Number or undefined if no constraint\n\thelpers$1.getConstraintHeight = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-height', 'clientHeight');\n\t};\n\t/**\n\t * @private\n \t */\n\thelpers$1._calculatePadding = function(container, padding, parentDimension) {\n\t\tpadding = helpers$1.getStyle(container, padding);\n\n\t\treturn padding.indexOf('%') > -1 ? parentDimension * parseInt(padding, 10) / 100 : parseInt(padding, 10);\n\t};\n\t/**\n\t * @private\n\t */\n\thelpers$1._getParentNode = function(domNode) {\n\t\tvar parent = domNode.parentNode;\n\t\tif (parent && parent.toString() === '[object ShadowRoot]') {\n\t\t\tparent = parent.host;\n\t\t}\n\t\treturn parent;\n\t};\n\thelpers$1.getMaximumWidth = function(domNode) {\n\t\tvar container = helpers$1._getParentNode(domNode);\n\t\tif (!container) {\n\t\t\treturn domNode.clientWidth;\n\t\t}\n\n\t\tvar clientWidth = container.clientWidth;\n\t\tvar paddingLeft = helpers$1._calculatePadding(container, 'padding-left', clientWidth);\n\t\tvar paddingRight = helpers$1._calculatePadding(container, 'padding-right', clientWidth);\n\n\t\tvar w = clientWidth - paddingLeft - paddingRight;\n\t\tvar cw = helpers$1.getConstraintWidth(domNode);\n\t\treturn isNaN(cw) ? w : Math.min(w, cw);\n\t};\n\thelpers$1.getMaximumHeight = function(domNode) {\n\t\tvar container = helpers$1._getParentNode(domNode);\n\t\tif (!container) {\n\t\t\treturn domNode.clientHeight;\n\t\t}\n\n\t\tvar clientHeight = container.clientHeight;\n\t\tvar paddingTop = helpers$1._calculatePadding(container, 'padding-top', clientHeight);\n\t\tvar paddingBottom = helpers$1._calculatePadding(container, 'padding-bottom', clientHeight);\n\n\t\tvar h = clientHeight - paddingTop - paddingBottom;\n\t\tvar ch = helpers$1.getConstraintHeight(domNode);\n\t\treturn isNaN(ch) ? h : Math.min(h, ch);\n\t};\n\thelpers$1.getStyle = function(el, property) {\n\t\treturn el.currentStyle ?\n\t\t\tel.currentStyle[property] :\n\t\t\tdocument.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n\t};\n\thelpers$1.retinaScale = function(chart, forceRatio) {\n\t\tvar pixelRatio = chart.currentDevicePixelRatio = forceRatio || (typeof window !== 'undefined' && window.devicePixelRatio) || 1;\n\t\tif (pixelRatio === 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar canvas = chart.canvas;\n\t\tvar height = chart.height;\n\t\tvar width = chart.width;\n\n\t\tcanvas.height = height * pixelRatio;\n\t\tcanvas.width = width * pixelRatio;\n\t\tchart.ctx.scale(pixelRatio, pixelRatio);\n\n\t\t// If no style has been set on the canvas, the render size is used as display size,\n\t\t// making the chart visually bigger, so let's enforce it to the \"correct\" values.\n\t\t// See https://github.com/chartjs/Chart.js/issues/3575\n\t\tif (!canvas.style.height && !canvas.style.width) {\n\t\t\tcanvas.style.height = height + 'px';\n\t\t\tcanvas.style.width = width + 'px';\n\t\t}\n\t};\n\t// -- Canvas methods\n\thelpers$1.fontString = function(pixelSize, fontStyle, fontFamily) {\n\t\treturn fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n\t};\n\thelpers$1.longestText = function(ctx, font, arrayOfThings, cache) {\n\t\tcache = cache || {};\n\t\tvar data = cache.data = cache.data || {};\n\t\tvar gc = cache.garbageCollect = cache.garbageCollect || [];\n\n\t\tif (cache.font !== font) {\n\t\t\tdata = cache.data = {};\n\t\t\tgc = cache.garbageCollect = [];\n\t\t\tcache.font = font;\n\t\t}\n\n\t\tctx.font = font;\n\t\tvar longest = 0;\n\t\thelpers$1.each(arrayOfThings, function(thing) {\n\t\t\t// Undefined strings and arrays should not be measured\n\t\t\tif (thing !== undefined && thing !== null && helpers$1.isArray(thing) !== true) {\n\t\t\t\tlongest = helpers$1.measureText(ctx, data, gc, longest, thing);\n\t\t\t} else if (helpers$1.isArray(thing)) {\n\t\t\t\t// if it is an array lets measure each element\n\t\t\t\t// to do maybe simplify this function a bit so we can do this more recursively?\n\t\t\t\thelpers$1.each(thing, function(nestedThing) {\n\t\t\t\t\t// Undefined strings and arrays should not be measured\n\t\t\t\t\tif (nestedThing !== undefined && nestedThing !== null && !helpers$1.isArray(nestedThing)) {\n\t\t\t\t\t\tlongest = helpers$1.measureText(ctx, data, gc, longest, nestedThing);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tvar gcLen = gc.length / 2;\n\t\tif (gcLen > arrayOfThings.length) {\n\t\t\tfor (var i = 0; i < gcLen; i++) {\n\t\t\t\tdelete data[gc[i]];\n\t\t\t}\n\t\t\tgc.splice(0, gcLen);\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers$1.measureText = function(ctx, data, gc, longest, string) {\n\t\tvar textWidth = data[string];\n\t\tif (!textWidth) {\n\t\t\ttextWidth = data[string] = ctx.measureText(string).width;\n\t\t\tgc.push(string);\n\t\t}\n\t\tif (textWidth > longest) {\n\t\t\tlongest = textWidth;\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers$1.numberOfLabelLines = function(arrayOfThings) {\n\t\tvar numberOfLines = 1;\n\t\thelpers$1.each(arrayOfThings, function(thing) {\n\t\t\tif (helpers$1.isArray(thing)) {\n\t\t\t\tif (thing.length > numberOfLines) {\n\t\t\t\t\tnumberOfLines = thing.length;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn numberOfLines;\n\t};\n\n\thelpers$1.color = !chartjsColor ?\n\t\tfunction(value) {\n\t\t\tconsole.error('Color.js not found!');\n\t\t\treturn value;\n\t\t} :\n\t\tfunction(value) {\n\t\t\t/* global CanvasGradient */\n\t\t\tif (value instanceof CanvasGradient) {\n\t\t\t\tvalue = core_defaults.global.defaultColor;\n\t\t\t}\n\n\t\t\treturn chartjsColor(value);\n\t\t};\n\n\thelpers$1.getHoverColor = function(colorValue) {\n\t\t/* global CanvasPattern */\n\t\treturn (colorValue instanceof CanvasPattern || colorValue instanceof CanvasGradient) ?\n\t\t\tcolorValue :\n\t\t\thelpers$1.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n\t};\n};\n\nfunction abstract() {\n\tthrow new Error(\n\t\t'This method is not implemented: either no adapter can ' +\n\t\t'be found or an incomplete integration was provided.'\n\t);\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\n\n/**\n * Currently supported unit string values.\n * @typedef {('millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year')}\n * @memberof Chart._adapters._date\n * @name Unit\n */\n\n/**\n * @class\n */\nfunction DateAdapter(options) {\n\tthis.options = options || {};\n}\n\nhelpers$1.extend(DateAdapter.prototype, /** @lends DateAdapter */ {\n\t/**\n\t * Returns a map of time formats for the supported formatting units defined\n\t * in Unit as well as 'datetime' representing a detailed date/time string.\n\t * @returns {{string: string}}\n\t */\n\tformats: abstract,\n\n\t/**\n\t * Parses the given `value` and return the associated timestamp.\n\t * @param {any} value - the value to parse (usually comes from the data)\n\t * @param {string} [format] - the expected data format\n\t * @returns {(number|null)}\n\t * @function\n\t */\n\tparse: abstract,\n\n\t/**\n\t * Returns the formatted date in the specified `format` for a given `timestamp`.\n\t * @param {number} timestamp - the timestamp to format\n\t * @param {string} format - the date/time token\n\t * @return {string}\n\t * @function\n\t */\n\tformat: abstract,\n\n\t/**\n\t * Adds the specified `amount` of `unit` to the given `timestamp`.\n\t * @param {number} timestamp - the input timestamp\n\t * @param {number} amount - the amount to add\n\t * @param {Unit} unit - the unit as string\n\t * @return {number}\n\t * @function\n\t */\n\tadd: abstract,\n\n\t/**\n\t * Returns the number of `unit` between the given timestamps.\n\t * @param {number} max - the input timestamp (reference)\n\t * @param {number} min - the timestamp to substract\n\t * @param {Unit} unit - the unit as string\n\t * @return {number}\n\t * @function\n\t */\n\tdiff: abstract,\n\n\t/**\n\t * Returns start of `unit` for the given `timestamp`.\n\t * @param {number} timestamp - the input timestamp\n\t * @param {Unit} unit - the unit as string\n\t * @param {number} [weekday] - the ISO day of the week with 1 being Monday\n\t * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n\t * @function\n\t */\n\tstartOf: abstract,\n\n\t/**\n\t * Returns end of `unit` for the given `timestamp`.\n\t * @param {number} timestamp - the input timestamp\n\t * @param {Unit} unit - the unit as string\n\t * @function\n\t */\n\tendOf: abstract,\n\n\t// DEPRECATIONS\n\n\t/**\n\t * Provided for backward compatibility for scale.getValueForPixel(),\n\t * this method should be overridden only by the moment adapter.\n\t * @deprecated since version 2.8.0\n\t * @todo remove at version 3\n\t * @private\n\t */\n\t_create: function(value) {\n\t\treturn value;\n\t}\n});\n\nDateAdapter.override = function(members) {\n\thelpers$1.extend(DateAdapter.prototype, members);\n};\n\nvar _date = DateAdapter;\n\nvar core_adapters = {\n\t_date: _date\n};\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nvar core_ticks = {\n\t/**\n\t * Namespace to hold formatters for different types of ticks\n\t * @namespace Chart.Ticks.formatters\n\t */\n\tformatters: {\n\t\t/**\n\t\t * Formatter for value labels\n\t\t * @method Chart.Ticks.formatters.values\n\t\t * @param value the value to display\n\t\t * @return {string|string[]} the label to display\n\t\t */\n\t\tvalues: function(value) {\n\t\t\treturn helpers$1.isArray(value) ? value : '' + value;\n\t\t},\n\n\t\t/**\n\t\t * Formatter for linear numeric ticks\n\t\t * @method Chart.Ticks.formatters.linear\n\t\t * @param tickValue {number} the value to be formatted\n\t\t * @param index {number} the position of the tickValue parameter in the ticks array\n\t\t * @param ticks {number[]} the list of ticks being converted\n\t\t * @return {string} string representation of the tickValue parameter\n\t\t */\n\t\tlinear: function(tickValue, index, ticks) {\n\t\t\t// If we have lots of ticks, don't use the ones\n\t\t\tvar delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];\n\n\t\t\t// If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\t\t\tif (Math.abs(delta) > 1) {\n\t\t\t\tif (tickValue !== Math.floor(tickValue)) {\n\t\t\t\t\t// not an integer\n\t\t\t\t\tdelta = tickValue - Math.floor(tickValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar logDelta = helpers$1.log10(Math.abs(delta));\n\t\t\tvar tickString = '';\n\n\t\t\tif (tickValue !== 0) {\n\t\t\t\tvar maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\t\t\t\tif (maxTick < 1e-4) { // all ticks are small numbers; use scientific notation\n\t\t\t\t\tvar logTick = helpers$1.log10(Math.abs(tickValue));\n\t\t\t\t\ttickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n\t\t\t\t} else {\n\t\t\t\t\tvar numDecimal = -1 * Math.floor(logDelta);\n\t\t\t\t\tnumDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\t\t\t\t\ttickString = tickValue.toFixed(numDecimal);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttickString = '0'; // never show decimal places for 0\n\t\t\t}\n\n\t\t\treturn tickString;\n\t\t},\n\n\t\tlogarithmic: function(tickValue, index, ticks) {\n\t\t\tvar remain = tickValue / (Math.pow(10, Math.floor(helpers$1.log10(tickValue))));\n\n\t\t\tif (tickValue === 0) {\n\t\t\t\treturn '0';\n\t\t\t} else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n\t\t\t\treturn tickValue.toExponential();\n\t\t\t}\n\t\t\treturn '';\n\t\t}\n\t}\n};\n\nvar valueOrDefault$9 = helpers$1.valueOrDefault;\nvar valueAtIndexOrDefault = helpers$1.valueAtIndexOrDefault;\n\ncore_defaults._set('scale', {\n\tdisplay: true,\n\tposition: 'left',\n\toffset: false,\n\n\t// grid line settings\n\tgridLines: {\n\t\tdisplay: true,\n\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\tlineWidth: 1,\n\t\tdrawBorder: true,\n\t\tdrawOnChartArea: true,\n\t\tdrawTicks: true,\n\t\ttickMarkLength: 10,\n\t\tzeroLineWidth: 1,\n\t\tzeroLineColor: 'rgba(0,0,0,0.25)',\n\t\tzeroLineBorderDash: [],\n\t\tzeroLineBorderDashOffset: 0.0,\n\t\toffsetGridLines: false,\n\t\tborderDash: [],\n\t\tborderDashOffset: 0.0\n\t},\n\n\t// scale label\n\tscaleLabel: {\n\t\t// display property\n\t\tdisplay: false,\n\n\t\t// actual label\n\t\tlabelString: '',\n\n\t\t// top/bottom padding\n\t\tpadding: {\n\t\t\ttop: 4,\n\t\t\tbottom: 4\n\t\t}\n\t},\n\n\t// label settings\n\tticks: {\n\t\tbeginAtZero: false,\n\t\tminRotation: 0,\n\t\tmaxRotation: 50,\n\t\tmirror: false,\n\t\tpadding: 0,\n\t\treverse: false,\n\t\tdisplay: true,\n\t\tautoSkip: true,\n\t\tautoSkipPadding: 0,\n\t\tlabelOffset: 0,\n\t\t// We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n\t\tcallback: core_ticks.formatters.values,\n\t\tminor: {},\n\t\tmajor: {}\n\t}\n});\n\nfunction labelsFromTicks(ticks) {\n\tvar labels = [];\n\tvar i, ilen;\n\n\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\tlabels.push(ticks[i].label);\n\t}\n\n\treturn labels;\n}\n\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n\tvar lineValue = scale.getPixelForTick(index);\n\n\tif (offsetGridLines) {\n\t\tif (scale.getTicks().length === 1) {\n\t\t\tlineValue -= scale.isHorizontal() ?\n\t\t\t\tMath.max(lineValue - scale.left, scale.right - lineValue) :\n\t\t\t\tMath.max(lineValue - scale.top, scale.bottom - lineValue);\n\t\t} else if (index === 0) {\n\t\t\tlineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n\t\t} else {\n\t\t\tlineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n\t\t}\n\t}\n\treturn lineValue;\n}\n\nfunction computeTextSize(context, tick, font) {\n\treturn helpers$1.isArray(tick) ?\n\t\thelpers$1.longestText(context, font, tick) :\n\t\tcontext.measureText(tick).width;\n}\n\nvar core_scale = core_element.extend({\n\t/**\n\t * Get the padding needed for the scale\n\t * @method getPadding\n\t * @private\n\t * @returns {Padding} the necessary padding\n\t */\n\tgetPadding: function() {\n\t\tvar me = this;\n\t\treturn {\n\t\t\tleft: me.paddingLeft || 0,\n\t\t\ttop: me.paddingTop || 0,\n\t\t\tright: me.paddingRight || 0,\n\t\t\tbottom: me.paddingBottom || 0\n\t\t};\n\t},\n\n\t/**\n\t * Returns the scale tick objects ({label, major})\n\t * @since 2.7\n\t */\n\tgetTicks: function() {\n\t\treturn this._ticks;\n\t},\n\n\t// These methods are ordered by lifecyle. Utilities then follow.\n\t// Any function defined here is inherited by all scale types.\n\t// Any function can be extended by the scale type\n\n\tmergeTicksOptions: function() {\n\t\tvar ticks = this.options.ticks;\n\t\tif (ticks.minor === false) {\n\t\t\tticks.minor = {\n\t\t\t\tdisplay: false\n\t\t\t};\n\t\t}\n\t\tif (ticks.major === false) {\n\t\t\tticks.major = {\n\t\t\t\tdisplay: false\n\t\t\t};\n\t\t}\n\t\tfor (var key in ticks) {\n\t\t\tif (key !== 'major' && key !== 'minor') {\n\t\t\t\tif (typeof ticks.minor[key] === 'undefined') {\n\t\t\t\t\tticks.minor[key] = ticks[key];\n\t\t\t\t}\n\t\t\t\tif (typeof ticks.major[key] === 'undefined') {\n\t\t\t\t\tticks.major[key] = ticks[key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tbeforeUpdate: function() {\n\t\thelpers$1.callback(this.options.beforeUpdate, [this]);\n\t},\n\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\t\tvar i, ilen, labels, label, ticks, tick;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = helpers$1.extend({\n\t\t\tleft: 0,\n\t\t\tright: 0,\n\t\t\ttop: 0,\n\t\t\tbottom: 0\n\t\t}, margins);\n\n\t\tme._maxLabelLines = 0;\n\t\tme.longestLabelWidth = 0;\n\t\tme.longestTextCache = me.longestTextCache || {};\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\n\t\t// Data min/max\n\t\tme.beforeDataLimits();\n\t\tme.determineDataLimits();\n\t\tme.afterDataLimits();\n\n\t\t// Ticks - `this.ticks` is now DEPRECATED!\n\t\t// Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n\t\t// and must not be accessed directly from outside this class. `this.ticks` being\n\t\t// around for long time and not marked as private, we can't change its structure\n\t\t// without unexpected breaking changes. If you need to access the scale ticks,\n\t\t// use scale.getTicks() instead.\n\n\t\tme.beforeBuildTicks();\n\n\t\t// New implementations should return an array of objects but for BACKWARD COMPAT,\n\t\t// we still support no return (`this.ticks` internally set by calling this method).\n\t\tticks = me.buildTicks() || [];\n\n\t\t// Allow modification of ticks in callback.\n\t\tticks = me.afterBuildTicks(ticks) || ticks;\n\n\t\tme.beforeTickToLabelConversion();\n\n\t\t// New implementations should return the formatted tick labels but for BACKWARD\n\t\t// COMPAT, we still support no return (`this.ticks` internally changed by calling\n\t\t// this method and supposed to contain only string values).\n\t\tlabels = me.convertTicksToLabels(ticks) || me.ticks;\n\n\t\tme.afterTickToLabelConversion();\n\n\t\tme.ticks = labels;   // BACKWARD COMPATIBILITY\n\n\t\t// IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n\n\t\t// BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\t\tfor (i = 0, ilen = labels.length; i < ilen; ++i) {\n\t\t\tlabel = labels[i];\n\t\t\ttick = ticks[i];\n\t\t\tif (!tick) {\n\t\t\t\tticks.push(tick = {\n\t\t\t\t\tlabel: label,\n\t\t\t\t\tmajor: false\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\ttick.label = label;\n\t\t\t}\n\t\t}\n\n\t\tme._ticks = ticks;\n\n\t\t// Tick Rotation\n\t\tme.beforeCalculateTickRotation();\n\t\tme.calculateTickRotation();\n\t\tme.afterCalculateTickRotation();\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\n\t},\n\tafterUpdate: function() {\n\t\thelpers$1.callback(this.options.afterUpdate, [this]);\n\t},\n\n\t//\n\n\tbeforeSetDimensions: function() {\n\t\thelpers$1.callback(this.options.beforeSetDimensions, [this]);\n\t},\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\t},\n\tafterSetDimensions: function() {\n\t\thelpers$1.callback(this.options.afterSetDimensions, [this]);\n\t},\n\n\t// Data limits\n\tbeforeDataLimits: function() {\n\t\thelpers$1.callback(this.options.beforeDataLimits, [this]);\n\t},\n\tdetermineDataLimits: helpers$1.noop,\n\tafterDataLimits: function() {\n\t\thelpers$1.callback(this.options.afterDataLimits, [this]);\n\t},\n\n\t//\n\tbeforeBuildTicks: function() {\n\t\thelpers$1.callback(this.options.beforeBuildTicks, [this]);\n\t},\n\tbuildTicks: helpers$1.noop,\n\tafterBuildTicks: function(ticks) {\n\t\tvar me = this;\n\t\t// ticks is empty for old axis implementations here\n\t\tif (helpers$1.isArray(ticks) && ticks.length) {\n\t\t\treturn helpers$1.callback(me.options.afterBuildTicks, [me, ticks]);\n\t\t}\n\t\t// Support old implementations (that modified `this.ticks` directly in buildTicks)\n\t\tme.ticks = helpers$1.callback(me.options.afterBuildTicks, [me, me.ticks]) || me.ticks;\n\t\treturn ticks;\n\t},\n\n\tbeforeTickToLabelConversion: function() {\n\t\thelpers$1.callback(this.options.beforeTickToLabelConversion, [this]);\n\t},\n\tconvertTicksToLabels: function() {\n\t\tvar me = this;\n\t\t// Convert ticks to strings\n\t\tvar tickOpts = me.options.ticks;\n\t\tme.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n\t},\n\tafterTickToLabelConversion: function() {\n\t\thelpers$1.callback(this.options.afterTickToLabelConversion, [this]);\n\t},\n\n\t//\n\n\tbeforeCalculateTickRotation: function() {\n\t\thelpers$1.callback(this.options.beforeCalculateTickRotation, [this]);\n\t},\n\tcalculateTickRotation: function() {\n\t\tvar me = this;\n\t\tvar context = me.ctx;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar labels = labelsFromTicks(me._ticks);\n\n\t\t// Get the width of each grid by calculating the difference\n\t\t// between x offsets between 0 and 1.\n\t\tvar tickFont = helpers$1.options._parseFont(tickOpts);\n\t\tcontext.font = tickFont.string;\n\n\t\tvar labelRotation = tickOpts.minRotation || 0;\n\n\t\tif (labels.length && me.options.display && me.isHorizontal()) {\n\t\t\tvar originalLabelWidth = helpers$1.longestText(context, tickFont.string, labels, me.longestTextCache);\n\t\t\tvar labelWidth = originalLabelWidth;\n\t\t\tvar cosRotation, sinRotation;\n\n\t\t\t// Allow 3 pixels x2 padding either side for label readability\n\t\t\tvar tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6;\n\n\t\t\t// Max label rotation can be set or default to 90 - also act as a loop counter\n\t\t\twhile (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n\t\t\t\tvar angleRadians = helpers$1.toRadians(labelRotation);\n\t\t\t\tcosRotation = Math.cos(angleRadians);\n\t\t\t\tsinRotation = Math.sin(angleRadians);\n\n\t\t\t\tif (sinRotation * originalLabelWidth > me.maxHeight) {\n\t\t\t\t\t// go back one step\n\t\t\t\t\tlabelRotation--;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tlabelRotation++;\n\t\t\t\tlabelWidth = cosRotation * originalLabelWidth;\n\t\t\t}\n\t\t}\n\n\t\tme.labelRotation = labelRotation;\n\t},\n\tafterCalculateTickRotation: function() {\n\t\thelpers$1.callback(this.options.afterCalculateTickRotation, [this]);\n\t},\n\n\t//\n\n\tbeforeFit: function() {\n\t\thelpers$1.callback(this.options.beforeFit, [this]);\n\t},\n\tfit: function() {\n\t\tvar me = this;\n\t\t// Reset\n\t\tvar minSize = me.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\n\t\tvar labels = labelsFromTicks(me._ticks);\n\n\t\tvar opts = me.options;\n\t\tvar tickOpts = opts.ticks;\n\t\tvar scaleLabelOpts = opts.scaleLabel;\n\t\tvar gridLineOpts = opts.gridLines;\n\t\tvar display = me._isVisible();\n\t\tvar position = opts.position;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tvar parseFont = helpers$1.options._parseFont;\n\t\tvar tickFont = parseFont(tickOpts);\n\t\tvar tickMarkLength = opts.gridLines.tickMarkLength;\n\n\t\t// Width\n\t\tif (isHorizontal) {\n\t\t\t// subtract the margins to line up with the chartArea if we are a full width scale\n\t\t\tminSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n\t\t} else {\n\t\t\tminSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t}\n\n\t\t// height\n\t\tif (isHorizontal) {\n\t\t\tminSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t} else {\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\t// Are we showing a title for the scale?\n\t\tif (scaleLabelOpts.display && display) {\n\t\t\tvar scaleLabelFont = parseFont(scaleLabelOpts);\n\t\t\tvar scaleLabelPadding = helpers$1.options.toPadding(scaleLabelOpts.padding);\n\t\t\tvar deltaHeight = scaleLabelFont.lineHeight + scaleLabelPadding.height;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize.height += deltaHeight;\n\t\t\t} else {\n\t\t\t\tminSize.width += deltaHeight;\n\t\t\t}\n\t\t}\n\n\t\t// Don't bother fitting the ticks if we are not showing the labels\n\t\tif (tickOpts.display && display) {\n\t\t\tvar largestTextWidth = helpers$1.longestText(me.ctx, tickFont.string, labels, me.longestTextCache);\n\t\t\tvar tallestLabelHeightInLines = helpers$1.numberOfLabelLines(labels);\n\t\t\tvar lineSpace = tickFont.size * 0.5;\n\t\t\tvar tickPadding = me.options.ticks.padding;\n\n\t\t\t// Store max number of lines and widest label for _autoSkip\n\t\t\tme._maxLabelLines = tallestLabelHeightInLines;\n\t\t\tme.longestLabelWidth = largestTextWidth;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tvar angleRadians = helpers$1.toRadians(me.labelRotation);\n\t\t\t\tvar cosRotation = Math.cos(angleRadians);\n\t\t\t\tvar sinRotation = Math.sin(angleRadians);\n\n\t\t\t\t// TODO - improve this calculation\n\t\t\t\tvar labelHeight = (sinRotation * largestTextWidth)\n\t\t\t\t\t+ (tickFont.lineHeight * tallestLabelHeightInLines)\n\t\t\t\t\t+ lineSpace; // padding\n\n\t\t\t\tminSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n\n\t\t\t\tme.ctx.font = tickFont.string;\n\t\t\t\tvar firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.string);\n\t\t\t\tvar lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.string);\n\t\t\t\tvar offsetLeft = me.getPixelForTick(0) - me.left;\n\t\t\t\tvar offsetRight = me.right - me.getPixelForTick(labels.length - 1);\n\t\t\t\tvar paddingLeft, paddingRight;\n\n\t\t\t\t// Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n\t\t\t\t// which means that the right padding is dominated by the font height\n\t\t\t\tif (me.labelRotation !== 0) {\n\t\t\t\t\tpaddingLeft = position === 'bottom' ? (cosRotation * firstLabelWidth) : (cosRotation * lineSpace);\n\t\t\t\t\tpaddingRight = position === 'bottom' ? (cosRotation * lineSpace) : (cosRotation * lastLabelWidth);\n\t\t\t\t} else {\n\t\t\t\t\tpaddingLeft = firstLabelWidth / 2;\n\t\t\t\t\tpaddingRight = lastLabelWidth / 2;\n\t\t\t\t}\n\t\t\t\tme.paddingLeft = Math.max(paddingLeft - offsetLeft, 0) + 3; // add 3 px to move away from canvas edges\n\t\t\t\tme.paddingRight = Math.max(paddingRight - offsetRight, 0) + 3;\n\t\t\t} else {\n\t\t\t\t// A vertical axis is more constrained by the width. Labels are the\n\t\t\t\t// dominant factor here, so get that length first and account for padding\n\t\t\t\tif (tickOpts.mirror) {\n\t\t\t\t\tlargestTextWidth = 0;\n\t\t\t\t} else {\n\t\t\t\t\t// use lineSpace for consistency with horizontal axis\n\t\t\t\t\t// tickPadding is not implemented for horizontal\n\t\t\t\t\tlargestTextWidth += tickPadding + lineSpace;\n\t\t\t\t}\n\n\t\t\t\tminSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n\n\t\t\t\tme.paddingTop = tickFont.size / 2;\n\t\t\t\tme.paddingBottom = tickFont.size / 2;\n\t\t\t}\n\t\t}\n\n\t\tme.handleMargins();\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\t},\n\n\t/**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n\thandleMargins: function() {\n\t\tvar me = this;\n\t\tif (me.margins) {\n\t\t\tme.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n\t\t\tme.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n\t\t\tme.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n\t\t\tme.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n\t\t}\n\t},\n\n\tafterFit: function() {\n\t\thelpers$1.callback(this.options.afterFit, [this]);\n\t},\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t},\n\tisFullWidth: function() {\n\t\treturn (this.options.fullWidth);\n\t},\n\n\t// Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n\tgetRightValue: function(rawValue) {\n\t\t// Null and undefined values first\n\t\tif (helpers$1.isNullOrUndef(rawValue)) {\n\t\t\treturn NaN;\n\t\t}\n\t\t// isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\t\tif ((typeof rawValue === 'number' || rawValue instanceof Number) && !isFinite(rawValue)) {\n\t\t\treturn NaN;\n\t\t}\n\t\t// If it is in fact an object, dive in one more level\n\t\tif (rawValue) {\n\t\t\tif (this.isHorizontal()) {\n\t\t\t\tif (rawValue.x !== undefined) {\n\t\t\t\t\treturn this.getRightValue(rawValue.x);\n\t\t\t\t}\n\t\t\t} else if (rawValue.y !== undefined) {\n\t\t\t\treturn this.getRightValue(rawValue.y);\n\t\t\t}\n\t\t}\n\n\t\t// Value is good, return it\n\t\treturn rawValue;\n\t},\n\n\t/**\n\t * Used to get the value to display in the tooltip for the data at the given index\n\t * @param index\n\t * @param datasetIndex\n\t */\n\tgetLabelForIndex: helpers$1.noop,\n\n\t/**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param value\n\t * @param index\n\t * @param datasetIndex\n\t */\n\tgetPixelForValue: helpers$1.noop,\n\n\t/**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param pixel\n\t */\n\tgetValueForPixel: helpers$1.noop,\n\n\t/**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t */\n\tgetPixelForTick: function(index) {\n\t\tvar me = this;\n\t\tvar offset = me.options.offset;\n\t\tif (me.isHorizontal()) {\n\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\tvar tickWidth = innerWidth / Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n\t\t\tvar pixel = (tickWidth * index) + me.paddingLeft;\n\n\t\t\tif (offset) {\n\t\t\t\tpixel += tickWidth / 2;\n\t\t\t}\n\n\t\t\tvar finalVal = me.left + pixel;\n\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\treturn finalVal;\n\t\t}\n\t\tvar innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n\t\treturn me.top + (index * (innerHeight / (me._ticks.length - 1)));\n\t},\n\n\t/**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t */\n\tgetPixelForDecimal: function(decimal) {\n\t\tvar me = this;\n\t\tif (me.isHorizontal()) {\n\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\tvar valueOffset = (innerWidth * decimal) + me.paddingLeft;\n\n\t\t\tvar finalVal = me.left + valueOffset;\n\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\treturn finalVal;\n\t\t}\n\t\treturn me.top + (decimal * me.height);\n\t},\n\n\t/**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t */\n\tgetBasePixel: function() {\n\t\treturn this.getPixelForValue(this.getBaseValue());\n\t},\n\n\tgetBaseValue: function() {\n\t\tvar me = this;\n\t\tvar min = me.min;\n\t\tvar max = me.max;\n\n\t\treturn me.beginAtZero ? 0 :\n\t\t\tmin < 0 && max < 0 ? max :\n\t\t\tmin > 0 && max > 0 ? min :\n\t\t\t0;\n\t},\n\n\t/**\n\t * Returns a subset of ticks to be plotted to avoid overlapping labels.\n\t * @private\n\t */\n\t_autoSkip: function(ticks) {\n\t\tvar me = this;\n\t\tvar isHorizontal = me.isHorizontal();\n\t\tvar optionTicks = me.options.ticks.minor;\n\t\tvar tickCount = ticks.length;\n\t\tvar skipRatio = false;\n\t\tvar maxTicks = optionTicks.maxTicksLimit;\n\n\t\t// Total space needed to display all ticks. First and last ticks are\n\t\t// drawn as their center at end of axis, so tickCount-1\n\t\tvar ticksLength = me._tickSize() * (tickCount - 1);\n\n\t\t// Axis length\n\t\tvar axisLength = isHorizontal\n\t\t\t? me.width - (me.paddingLeft + me.paddingRight)\n\t\t\t: me.height - (me.paddingTop + me.PaddingBottom);\n\n\t\tvar result = [];\n\t\tvar i, tick;\n\n\t\tif (ticksLength > axisLength) {\n\t\t\tskipRatio = 1 + Math.floor(ticksLength / axisLength);\n\t\t}\n\n\t\t// if they defined a max number of optionTicks,\n\t\t// increase skipRatio until that number is met\n\t\tif (tickCount > maxTicks) {\n\t\t\tskipRatio = Math.max(skipRatio, 1 + Math.floor(tickCount / maxTicks));\n\t\t}\n\n\t\tfor (i = 0; i < tickCount; i++) {\n\t\t\ttick = ticks[i];\n\n\t\t\tif (skipRatio > 1 && i % skipRatio > 0) {\n\t\t\t\t// leave tick in place but make sure it's not displayed (#4635)\n\t\t\t\tdelete tick.label;\n\t\t\t}\n\t\t\tresult.push(tick);\n\t\t}\n\t\treturn result;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_tickSize: function() {\n\t\tvar me = this;\n\t\tvar isHorizontal = me.isHorizontal();\n\t\tvar optionTicks = me.options.ticks.minor;\n\n\t\t// Calculate space needed by label in axis direction.\n\t\tvar rot = helpers$1.toRadians(me.labelRotation);\n\t\tvar cos = Math.abs(Math.cos(rot));\n\t\tvar sin = Math.abs(Math.sin(rot));\n\n\t\tvar padding = optionTicks.autoSkipPadding || 0;\n\t\tvar w = (me.longestLabelWidth + padding) || 0;\n\n\t\tvar tickFont = helpers$1.options._parseFont(optionTicks);\n\t\tvar h = (me._maxLabelLines * tickFont.lineHeight + padding) || 0;\n\n\t\t// Calculate space needed for 1 tick in axis direction.\n\t\treturn isHorizontal\n\t\t\t? h * cos > w * sin ? w / cos : h / sin\n\t\t\t: h * sin < w * cos ? h / cos : w / sin;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_isVisible: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar display = me.options.display;\n\t\tvar i, ilen, meta;\n\n\t\tif (display !== 'auto') {\n\t\t\treturn !!display;\n\t\t}\n\n\t\t// When 'auto', the scale is visible if at least one associated dataset is visible.\n\t\tfor (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n\t\t\tif (chart.isDatasetVisible(i)) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\tif (meta.xAxisID === me.id || meta.yAxisID === me.id) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t},\n\n\t/**\n\t * Actually draw the scale on the canvas\n\t * @param {object} chartArea - the area of the chart to draw full grid lines on\n\t */\n\tdraw: function(chartArea) {\n\t\tvar me = this;\n\t\tvar options = me.options;\n\n\t\tif (!me._isVisible()) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar chart = me.chart;\n\t\tvar context = me.ctx;\n\t\tvar globalDefaults = core_defaults.global;\n\t\tvar defaultFontColor = globalDefaults.defaultFontColor;\n\t\tvar optionTicks = options.ticks.minor;\n\t\tvar optionMajorTicks = options.ticks.major || optionTicks;\n\t\tvar gridLines = options.gridLines;\n\t\tvar scaleLabel = options.scaleLabel;\n\t\tvar position = options.position;\n\n\t\tvar isRotated = me.labelRotation !== 0;\n\t\tvar isMirrored = optionTicks.mirror;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tvar parseFont = helpers$1.options._parseFont;\n\t\tvar ticks = optionTicks.display && optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n\t\tvar tickFontColor = valueOrDefault$9(optionTicks.fontColor, defaultFontColor);\n\t\tvar tickFont = parseFont(optionTicks);\n\t\tvar lineHeight = tickFont.lineHeight;\n\t\tvar majorTickFontColor = valueOrDefault$9(optionMajorTicks.fontColor, defaultFontColor);\n\t\tvar majorTickFont = parseFont(optionMajorTicks);\n\t\tvar tickPadding = optionTicks.padding;\n\t\tvar labelOffset = optionTicks.labelOffset;\n\n\t\tvar tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n\n\t\tvar scaleLabelFontColor = valueOrDefault$9(scaleLabel.fontColor, defaultFontColor);\n\t\tvar scaleLabelFont = parseFont(scaleLabel);\n\t\tvar scaleLabelPadding = helpers$1.options.toPadding(scaleLabel.padding);\n\t\tvar labelRotationRadians = helpers$1.toRadians(me.labelRotation);\n\n\t\tvar itemsToDraw = [];\n\n\t\tvar axisWidth = gridLines.drawBorder ? valueAtIndexOrDefault(gridLines.lineWidth, 0, 0) : 0;\n\t\tvar alignPixel = helpers$1._alignPixel;\n\t\tvar borderValue, tickStart, tickEnd;\n\n\t\tif (position === 'top') {\n\t\t\tborderValue = alignPixel(chart, me.bottom, axisWidth);\n\t\t\ttickStart = me.bottom - tl;\n\t\t\ttickEnd = borderValue - axisWidth / 2;\n\t\t} else if (position === 'bottom') {\n\t\t\tborderValue = alignPixel(chart, me.top, axisWidth);\n\t\t\ttickStart = borderValue + axisWidth / 2;\n\t\t\ttickEnd = me.top + tl;\n\t\t} else if (position === 'left') {\n\t\t\tborderValue = alignPixel(chart, me.right, axisWidth);\n\t\t\ttickStart = me.right - tl;\n\t\t\ttickEnd = borderValue - axisWidth / 2;\n\t\t} else {\n\t\t\tborderValue = alignPixel(chart, me.left, axisWidth);\n\t\t\ttickStart = borderValue + axisWidth / 2;\n\t\t\ttickEnd = me.left + tl;\n\t\t}\n\n\t\tvar epsilon = 0.0000001; // 0.0000001 is margin in pixels for Accumulated error.\n\n\t\thelpers$1.each(ticks, function(tick, index) {\n\t\t\t// autoskipper skipped this tick (#4635)\n\t\t\tif (helpers$1.isNullOrUndef(tick.label)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar label = tick.label;\n\t\t\tvar lineWidth, lineColor, borderDash, borderDashOffset;\n\t\t\tif (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n\t\t\t\t// Draw the first index specially\n\t\t\t\tlineWidth = gridLines.zeroLineWidth;\n\t\t\t\tlineColor = gridLines.zeroLineColor;\n\t\t\t\tborderDash = gridLines.zeroLineBorderDash || [];\n\t\t\t\tborderDashOffset = gridLines.zeroLineBorderDashOffset || 0.0;\n\t\t\t} else {\n\t\t\t\tlineWidth = valueAtIndexOrDefault(gridLines.lineWidth, index);\n\t\t\t\tlineColor = valueAtIndexOrDefault(gridLines.color, index);\n\t\t\t\tborderDash = gridLines.borderDash || [];\n\t\t\t\tborderDashOffset = gridLines.borderDashOffset || 0.0;\n\t\t\t}\n\n\t\t\t// Common properties\n\t\t\tvar tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY, textOffset, textAlign;\n\t\t\tvar labelCount = helpers$1.isArray(label) ? label.length : 1;\n\t\t\tvar lineValue = getPixelForGridLine(me, index, gridLines.offsetGridLines);\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tvar labelYOffset = tl + tickPadding;\n\n\t\t\t\tif (lineValue < me.left - epsilon) {\n\t\t\t\t\tlineColor = 'rgba(0,0,0,0)';\n\t\t\t\t}\n\n\t\t\t\ttx1 = tx2 = x1 = x2 = alignPixel(chart, lineValue, lineWidth);\n\t\t\t\tty1 = tickStart;\n\t\t\t\tty2 = tickEnd;\n\t\t\t\tlabelX = me.getPixelForTick(index) + labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n\t\t\t\tif (position === 'top') {\n\t\t\t\t\ty1 = alignPixel(chart, chartArea.top, axisWidth) + axisWidth / 2;\n\t\t\t\t\ty2 = chartArea.bottom;\n\t\t\t\t\ttextOffset = ((!isRotated ? 0.5 : 1) - labelCount) * lineHeight;\n\t\t\t\t\ttextAlign = !isRotated ? 'center' : 'left';\n\t\t\t\t\tlabelY = me.bottom - labelYOffset;\n\t\t\t\t} else {\n\t\t\t\t\ty1 = chartArea.top;\n\t\t\t\t\ty2 = alignPixel(chart, chartArea.bottom, axisWidth) - axisWidth / 2;\n\t\t\t\t\ttextOffset = (!isRotated ? 0.5 : 0) * lineHeight;\n\t\t\t\t\ttextAlign = !isRotated ? 'center' : 'right';\n\t\t\t\t\tlabelY = me.top + labelYOffset;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar labelXOffset = (isMirrored ? 0 : tl) + tickPadding;\n\n\t\t\t\tif (lineValue < me.top - epsilon) {\n\t\t\t\t\tlineColor = 'rgba(0,0,0,0)';\n\t\t\t\t}\n\n\t\t\t\ttx1 = tickStart;\n\t\t\t\ttx2 = tickEnd;\n\t\t\t\tty1 = ty2 = y1 = y2 = alignPixel(chart, lineValue, lineWidth);\n\t\t\t\tlabelY = me.getPixelForTick(index) + labelOffset;\n\t\t\t\ttextOffset = (1 - labelCount) * lineHeight / 2;\n\n\t\t\t\tif (position === 'left') {\n\t\t\t\t\tx1 = alignPixel(chart, chartArea.left, axisWidth) + axisWidth / 2;\n\t\t\t\t\tx2 = chartArea.right;\n\t\t\t\t\ttextAlign = isMirrored ? 'left' : 'right';\n\t\t\t\t\tlabelX = me.right - labelXOffset;\n\t\t\t\t} else {\n\t\t\t\t\tx1 = chartArea.left;\n\t\t\t\t\tx2 = alignPixel(chart, chartArea.right, axisWidth) - axisWidth / 2;\n\t\t\t\t\ttextAlign = isMirrored ? 'right' : 'left';\n\t\t\t\t\tlabelX = me.left + labelXOffset;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\titemsToDraw.push({\n\t\t\t\ttx1: tx1,\n\t\t\t\tty1: ty1,\n\t\t\t\ttx2: tx2,\n\t\t\t\tty2: ty2,\n\t\t\t\tx1: x1,\n\t\t\t\ty1: y1,\n\t\t\t\tx2: x2,\n\t\t\t\ty2: y2,\n\t\t\t\tlabelX: labelX,\n\t\t\t\tlabelY: labelY,\n\t\t\t\tglWidth: lineWidth,\n\t\t\t\tglColor: lineColor,\n\t\t\t\tglBorderDash: borderDash,\n\t\t\t\tglBorderDashOffset: borderDashOffset,\n\t\t\t\trotation: -1 * labelRotationRadians,\n\t\t\t\tlabel: label,\n\t\t\t\tmajor: tick.major,\n\t\t\t\ttextOffset: textOffset,\n\t\t\t\ttextAlign: textAlign\n\t\t\t});\n\t\t});\n\n\t\t// Draw all of the tick labels, tick marks, and grid lines at the correct places\n\t\thelpers$1.each(itemsToDraw, function(itemToDraw) {\n\t\t\tvar glWidth = itemToDraw.glWidth;\n\t\t\tvar glColor = itemToDraw.glColor;\n\n\t\t\tif (gridLines.display && glWidth && glColor) {\n\t\t\t\tcontext.save();\n\t\t\t\tcontext.lineWidth = glWidth;\n\t\t\t\tcontext.strokeStyle = glColor;\n\t\t\t\tif (context.setLineDash) {\n\t\t\t\t\tcontext.setLineDash(itemToDraw.glBorderDash);\n\t\t\t\t\tcontext.lineDashOffset = itemToDraw.glBorderDashOffset;\n\t\t\t\t}\n\n\t\t\t\tcontext.beginPath();\n\n\t\t\t\tif (gridLines.drawTicks) {\n\t\t\t\t\tcontext.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n\t\t\t\t\tcontext.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n\t\t\t\t}\n\n\t\t\t\tif (gridLines.drawOnChartArea) {\n\t\t\t\t\tcontext.moveTo(itemToDraw.x1, itemToDraw.y1);\n\t\t\t\t\tcontext.lineTo(itemToDraw.x2, itemToDraw.y2);\n\t\t\t\t}\n\n\t\t\t\tcontext.stroke();\n\t\t\t\tcontext.restore();\n\t\t\t}\n\n\t\t\tif (optionTicks.display) {\n\t\t\t\t// Make sure we draw text in the correct color and font\n\t\t\t\tcontext.save();\n\t\t\t\tcontext.translate(itemToDraw.labelX, itemToDraw.labelY);\n\t\t\t\tcontext.rotate(itemToDraw.rotation);\n\t\t\t\tcontext.font = itemToDraw.major ? majorTickFont.string : tickFont.string;\n\t\t\t\tcontext.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n\t\t\t\tcontext.textBaseline = 'middle';\n\t\t\t\tcontext.textAlign = itemToDraw.textAlign;\n\n\t\t\t\tvar label = itemToDraw.label;\n\t\t\t\tvar y = itemToDraw.textOffset;\n\t\t\t\tif (helpers$1.isArray(label)) {\n\t\t\t\t\tfor (var i = 0; i < label.length; ++i) {\n\t\t\t\t\t\t// We just make sure the multiline element is a string here..\n\t\t\t\t\t\tcontext.fillText('' + label[i], 0, y);\n\t\t\t\t\t\ty += lineHeight;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tcontext.fillText(label, 0, y);\n\t\t\t\t}\n\t\t\t\tcontext.restore();\n\t\t\t}\n\t\t});\n\n\t\tif (scaleLabel.display) {\n\t\t\t// Draw the scale label\n\t\t\tvar scaleLabelX;\n\t\t\tvar scaleLabelY;\n\t\t\tvar rotation = 0;\n\t\t\tvar halfLineHeight = scaleLabelFont.lineHeight / 2;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tscaleLabelX = me.left + ((me.right - me.left) / 2); // midpoint of the width\n\t\t\t\tscaleLabelY = position === 'bottom'\n\t\t\t\t\t? me.bottom - halfLineHeight - scaleLabelPadding.bottom\n\t\t\t\t\t: me.top + halfLineHeight + scaleLabelPadding.top;\n\t\t\t} else {\n\t\t\t\tvar isLeft = position === 'left';\n\t\t\t\tscaleLabelX = isLeft\n\t\t\t\t\t? me.left + halfLineHeight + scaleLabelPadding.top\n\t\t\t\t\t: me.right - halfLineHeight - scaleLabelPadding.top;\n\t\t\t\tscaleLabelY = me.top + ((me.bottom - me.top) / 2);\n\t\t\t\trotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n\t\t\t}\n\n\t\t\tcontext.save();\n\t\t\tcontext.translate(scaleLabelX, scaleLabelY);\n\t\t\tcontext.rotate(rotation);\n\t\t\tcontext.textAlign = 'center';\n\t\t\tcontext.textBaseline = 'middle';\n\t\t\tcontext.fillStyle = scaleLabelFontColor; // render in correct colour\n\t\t\tcontext.font = scaleLabelFont.string;\n\t\t\tcontext.fillText(scaleLabel.labelString, 0, 0);\n\t\t\tcontext.restore();\n\t\t}\n\n\t\tif (axisWidth) {\n\t\t\t// Draw the line at the edge of the axis\n\t\t\tvar firstLineWidth = axisWidth;\n\t\t\tvar lastLineWidth = valueAtIndexOrDefault(gridLines.lineWidth, ticks.length - 1, 0);\n\t\t\tvar x1, x2, y1, y2;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tx1 = alignPixel(chart, me.left, firstLineWidth) - firstLineWidth / 2;\n\t\t\t\tx2 = alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n\t\t\t\ty1 = y2 = borderValue;\n\t\t\t} else {\n\t\t\t\ty1 = alignPixel(chart, me.top, firstLineWidth) - firstLineWidth / 2;\n\t\t\t\ty2 = alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n\t\t\t\tx1 = x2 = borderValue;\n\t\t\t}\n\n\t\t\tcontext.lineWidth = axisWidth;\n\t\t\tcontext.strokeStyle = valueAtIndexOrDefault(gridLines.color, 0);\n\t\t\tcontext.beginPath();\n\t\t\tcontext.moveTo(x1, y1);\n\t\t\tcontext.lineTo(x2, y2);\n\t\t\tcontext.stroke();\n\t\t}\n\t}\n});\n\nvar defaultConfig = {\n\tposition: 'bottom'\n};\n\nvar scale_category = core_scale.extend({\n\t/**\n\t* Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n\t* else fall back to data.labels\n\t* @private\n\t*/\n\tgetLabels: function() {\n\t\tvar data = this.chart.data;\n\t\treturn this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n\t},\n\n\tdetermineDataLimits: function() {\n\t\tvar me = this;\n\t\tvar labels = me.getLabels();\n\t\tme.minIndex = 0;\n\t\tme.maxIndex = labels.length - 1;\n\t\tvar findIndex;\n\n\t\tif (me.options.ticks.min !== undefined) {\n\t\t\t// user specified min value\n\t\t\tfindIndex = labels.indexOf(me.options.ticks.min);\n\t\t\tme.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n\t\t}\n\n\t\tif (me.options.ticks.max !== undefined) {\n\t\t\t// user specified max value\n\t\t\tfindIndex = labels.indexOf(me.options.ticks.max);\n\t\t\tme.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n\t\t}\n\n\t\tme.min = labels[me.minIndex];\n\t\tme.max = labels[me.maxIndex];\n\t},\n\n\tbuildTicks: function() {\n\t\tvar me = this;\n\t\tvar labels = me.getLabels();\n\t\t// If we are viewing some subset of labels, slice the original array\n\t\tme.ticks = (me.minIndex === 0 && me.maxIndex === labels.length - 1) ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n\t},\n\n\tgetLabelForIndex: function(index, datasetIndex) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\n\t\tif (chart.getDatasetMeta(datasetIndex).controller._getValueScaleId() === me.id) {\n\t\t\treturn me.getRightValue(chart.data.datasets[datasetIndex].data[index]);\n\t\t}\n\n\t\treturn me.ticks[index - me.minIndex];\n\t},\n\n\t// Used to get data value locations.  Value can either be an index or a numerical value\n\tgetPixelForValue: function(value, index) {\n\t\tvar me = this;\n\t\tvar offset = me.options.offset;\n\t\t// 1 is added because we need the length but we have the indexes\n\t\tvar offsetAmt = Math.max((me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1)), 1);\n\n\t\t// If value is a data object, then index is the index in the data array,\n\t\t// not the index of the scale. We need to change that.\n\t\tvar valueCategory;\n\t\tif (value !== undefined && value !== null) {\n\t\t\tvalueCategory = me.isHorizontal() ? value.x : value.y;\n\t\t}\n\t\tif (valueCategory !== undefined || (value !== undefined && isNaN(index))) {\n\t\t\tvar labels = me.getLabels();\n\t\t\tvalue = valueCategory || value;\n\t\t\tvar idx = labels.indexOf(value);\n\t\t\tindex = idx !== -1 ? idx : index;\n\t\t}\n\n\t\tif (me.isHorizontal()) {\n\t\t\tvar valueWidth = me.width / offsetAmt;\n\t\t\tvar widthOffset = (valueWidth * (index - me.minIndex));\n\n\t\t\tif (offset) {\n\t\t\t\twidthOffset += (valueWidth / 2);\n\t\t\t}\n\n\t\t\treturn me.left + widthOffset;\n\t\t}\n\t\tvar valueHeight = me.height / offsetAmt;\n\t\tvar heightOffset = (valueHeight * (index - me.minIndex));\n\n\t\tif (offset) {\n\t\t\theightOffset += (valueHeight / 2);\n\t\t}\n\n\t\treturn me.top + heightOffset;\n\t},\n\n\tgetPixelForTick: function(index) {\n\t\treturn this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n\t},\n\n\tgetValueForPixel: function(pixel) {\n\t\tvar me = this;\n\t\tvar offset = me.options.offset;\n\t\tvar value;\n\t\tvar offsetAmt = Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n\t\tvar horz = me.isHorizontal();\n\t\tvar valueDimension = (horz ? me.width : me.height) / offsetAmt;\n\n\t\tpixel -= horz ? me.left : me.top;\n\n\t\tif (offset) {\n\t\t\tpixel -= (valueDimension / 2);\n\t\t}\n\n\t\tif (pixel <= 0) {\n\t\t\tvalue = 0;\n\t\t} else {\n\t\t\tvalue = Math.round(pixel / valueDimension);\n\t\t}\n\n\t\treturn value + me.minIndex;\n\t},\n\n\tgetBasePixel: function() {\n\t\treturn this.bottom;\n\t}\n});\n\n// INTERNAL: static default options, registered in src/index.js\nvar _defaults = defaultConfig;\nscale_category._defaults = _defaults;\n\nvar noop = helpers$1.noop;\nvar isNullOrUndef = helpers$1.isNullOrUndef;\n\n/**\n * Generate a set of linear ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {number[]} array of tick values\n */\nfunction generateTicks(generationOptions, dataRange) {\n\tvar ticks = [];\n\t// To get a \"nice\" value for the tick spacing, we will use the appropriately named\n\t// \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n\t// for details.\n\n\tvar MIN_SPACING = 1e-14;\n\tvar stepSize = generationOptions.stepSize;\n\tvar unit = stepSize || 1;\n\tvar maxNumSpaces = generationOptions.maxTicks - 1;\n\tvar min = generationOptions.min;\n\tvar max = generationOptions.max;\n\tvar precision = generationOptions.precision;\n\tvar rmin = dataRange.min;\n\tvar rmax = dataRange.max;\n\tvar spacing = helpers$1.niceNum((rmax - rmin) / maxNumSpaces / unit) * unit;\n\tvar factor, niceMin, niceMax, numSpaces;\n\n\t// Beyond MIN_SPACING floating point numbers being to lose precision\n\t// such that we can't do the math necessary to generate ticks\n\tif (spacing < MIN_SPACING && isNullOrUndef(min) && isNullOrUndef(max)) {\n\t\treturn [rmin, rmax];\n\t}\n\n\tnumSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\tif (numSpaces > maxNumSpaces) {\n\t\t// If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n\t\tspacing = helpers$1.niceNum(numSpaces * spacing / maxNumSpaces / unit) * unit;\n\t}\n\n\tif (stepSize || isNullOrUndef(precision)) {\n\t\t// If a precision is not specified, calculate factor based on spacing\n\t\tfactor = Math.pow(10, helpers$1._decimalPlaces(spacing));\n\t} else {\n\t\t// If the user specified a precision, round to that number of decimal places\n\t\tfactor = Math.pow(10, precision);\n\t\tspacing = Math.ceil(spacing * factor) / factor;\n\t}\n\n\tniceMin = Math.floor(rmin / spacing) * spacing;\n\tniceMax = Math.ceil(rmax / spacing) * spacing;\n\n\t// If min, max and stepSize is set and they make an evenly spaced scale use it.\n\tif (stepSize) {\n\t\t// If very close to our whole number, use it.\n\t\tif (!isNullOrUndef(min) && helpers$1.almostWhole(min / spacing, spacing / 1000)) {\n\t\t\tniceMin = min;\n\t\t}\n\t\tif (!isNullOrUndef(max) && helpers$1.almostWhole(max / spacing, spacing / 1000)) {\n\t\t\tniceMax = max;\n\t\t}\n\t}\n\n\tnumSpaces = (niceMax - niceMin) / spacing;\n\t// If very close to our rounded value, use it.\n\tif (helpers$1.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n\t\tnumSpaces = Math.round(numSpaces);\n\t} else {\n\t\tnumSpaces = Math.ceil(numSpaces);\n\t}\n\n\tniceMin = Math.round(niceMin * factor) / factor;\n\tniceMax = Math.round(niceMax * factor) / factor;\n\tticks.push(isNullOrUndef(min) ? niceMin : min);\n\tfor (var j = 1; j < numSpaces; ++j) {\n\t\tticks.push(Math.round((niceMin + j * spacing) * factor) / factor);\n\t}\n\tticks.push(isNullOrUndef(max) ? niceMax : max);\n\n\treturn ticks;\n}\n\nvar scale_linearbase = core_scale.extend({\n\tgetRightValue: function(value) {\n\t\tif (typeof value === 'string') {\n\t\t\treturn +value;\n\t\t}\n\t\treturn core_scale.prototype.getRightValue.call(this, value);\n\t},\n\n\thandleTickRangeOptions: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar tickOpts = opts.ticks;\n\n\t\t// If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n\t\t// do nothing since that would make the chart weird. If the user really wants a weird chart\n\t\t// axis, they can manually override it\n\t\tif (tickOpts.beginAtZero) {\n\t\t\tvar minSign = helpers$1.sign(me.min);\n\t\t\tvar maxSign = helpers$1.sign(me.max);\n\n\t\t\tif (minSign < 0 && maxSign < 0) {\n\t\t\t\t// move the top up to 0\n\t\t\t\tme.max = 0;\n\t\t\t} else if (minSign > 0 && maxSign > 0) {\n\t\t\t\t// move the bottom down to 0\n\t\t\t\tme.min = 0;\n\t\t\t}\n\t\t}\n\n\t\tvar setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n\t\tvar setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n\t\tif (tickOpts.min !== undefined) {\n\t\t\tme.min = tickOpts.min;\n\t\t} else if (tickOpts.suggestedMin !== undefined) {\n\t\t\tif (me.min === null) {\n\t\t\t\tme.min = tickOpts.suggestedMin;\n\t\t\t} else {\n\t\t\t\tme.min = Math.min(me.min, tickOpts.suggestedMin);\n\t\t\t}\n\t\t}\n\n\t\tif (tickOpts.max !== undefined) {\n\t\t\tme.max = tickOpts.max;\n\t\t} else if (tickOpts.suggestedMax !== undefined) {\n\t\t\tif (me.max === null) {\n\t\t\t\tme.max = tickOpts.suggestedMax;\n\t\t\t} else {\n\t\t\t\tme.max = Math.max(me.max, tickOpts.suggestedMax);\n\t\t\t}\n\t\t}\n\n\t\tif (setMin !== setMax) {\n\t\t\t// We set the min or the max but not both.\n\t\t\t// So ensure that our range is good\n\t\t\t// Inverted or 0 length range can happen when\n\t\t\t// ticks.min is set, and no datasets are visible\n\t\t\tif (me.min >= me.max) {\n\t\t\t\tif (setMin) {\n\t\t\t\t\tme.max = me.min + 1;\n\t\t\t\t} else {\n\t\t\t\t\tme.min = me.max - 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (me.min === me.max) {\n\t\t\tme.max++;\n\n\t\t\tif (!tickOpts.beginAtZero) {\n\t\t\t\tme.min--;\n\t\t\t}\n\t\t}\n\t},\n\n\tgetTickLimit: function() {\n\t\tvar me = this;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar stepSize = tickOpts.stepSize;\n\t\tvar maxTicksLimit = tickOpts.maxTicksLimit;\n\t\tvar maxTicks;\n\n\t\tif (stepSize) {\n\t\t\tmaxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n\t\t} else {\n\t\t\tmaxTicks = me._computeTickLimit();\n\t\t\tmaxTicksLimit = maxTicksLimit || 11;\n\t\t}\n\n\t\tif (maxTicksLimit) {\n\t\t\tmaxTicks = Math.min(maxTicksLimit, maxTicks);\n\t\t}\n\n\t\treturn maxTicks;\n\t},\n\n\t_computeTickLimit: function() {\n\t\treturn Number.POSITIVE_INFINITY;\n\t},\n\n\thandleDirectionalChanges: noop,\n\n\tbuildTicks: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar tickOpts = opts.ticks;\n\n\t\t// Figure out what the max number of ticks we can support it is based on the size of\n\t\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n\t\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n\t\t// the graph. Make sure we always have at least 2 ticks\n\t\tvar maxTicks = me.getTickLimit();\n\t\tmaxTicks = Math.max(2, maxTicks);\n\n\t\tvar numericGeneratorOptions = {\n\t\t\tmaxTicks: maxTicks,\n\t\t\tmin: tickOpts.min,\n\t\t\tmax: tickOpts.max,\n\t\t\tprecision: tickOpts.precision,\n\t\t\tstepSize: helpers$1.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n\t\t};\n\t\tvar ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n\n\t\tme.handleDirectionalChanges();\n\n\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t// range of the scale\n\t\tme.max = helpers$1.max(ticks);\n\t\tme.min = helpers$1.min(ticks);\n\n\t\tif (tickOpts.reverse) {\n\t\t\tticks.reverse();\n\n\t\t\tme.start = me.max;\n\t\t\tme.end = me.min;\n\t\t} else {\n\t\t\tme.start = me.min;\n\t\t\tme.end = me.max;\n\t\t}\n\t},\n\n\tconvertTicksToLabels: function() {\n\t\tvar me = this;\n\t\tme.ticksAsNumbers = me.ticks.slice();\n\t\tme.zeroLineIndex = me.ticks.indexOf(0);\n\n\t\tcore_scale.prototype.convertTicksToLabels.call(me);\n\t}\n});\n\nvar defaultConfig$1 = {\n\tposition: 'left',\n\tticks: {\n\t\tcallback: core_ticks.formatters.linear\n\t}\n};\n\nvar scale_linear = scale_linearbase.extend({\n\tdetermineDataLimits: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar chart = me.chart;\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar isHorizontal = me.isHorizontal();\n\t\tvar DEFAULT_MIN = 0;\n\t\tvar DEFAULT_MAX = 1;\n\n\t\tfunction IDMatches(meta) {\n\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t}\n\n\t\t// First Calculate the range\n\t\tme.min = null;\n\t\tme.max = null;\n\n\t\tvar hasStacks = opts.stacked;\n\t\tif (hasStacks === undefined) {\n\t\t\thelpers$1.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\tif (hasStacks) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\thasStacks = true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (opts.stacked || hasStacks) {\n\t\t\tvar valuesPerStack = {};\n\n\t\t\thelpers$1.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\tvar key = [\n\t\t\t\t\tmeta.type,\n\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\tmeta.stack\n\t\t\t\t].join('.');\n\n\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\tvaluesPerStack[key] = {\n\t\t\t\t\t\tpositiveValues: [],\n\t\t\t\t\t\tnegativeValues: []\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// Store these per type\n\t\t\t\tvar positiveValues = valuesPerStack[key].positiveValues;\n\t\t\t\tvar negativeValues = valuesPerStack[key].negativeValues;\n\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\thelpers$1.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tpositiveValues[index] = positiveValues[index] || 0;\n\t\t\t\t\t\tnegativeValues[index] = negativeValues[index] || 0;\n\n\t\t\t\t\t\tif (opts.relativePoints) {\n\t\t\t\t\t\t\tpositiveValues[index] = 100;\n\t\t\t\t\t\t} else if (value < 0) {\n\t\t\t\t\t\t\tnegativeValues[index] += value;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpositiveValues[index] += value;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\thelpers$1.each(valuesPerStack, function(valuesForType) {\n\t\t\t\tvar values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n\t\t\t\tvar minVal = helpers$1.min(values);\n\t\t\t\tvar maxVal = helpers$1.max(values);\n\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t});\n\n\t\t} else {\n\t\t\thelpers$1.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\thelpers$1.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tme.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n\t\tme.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX;\n\n\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\tthis.handleTickRangeOptions();\n\t},\n\n\t// Returns the maximum number of ticks based on the scale dimension\n\t_computeTickLimit: function() {\n\t\tvar me = this;\n\t\tvar tickFont;\n\n\t\tif (me.isHorizontal()) {\n\t\t\treturn Math.ceil(me.width / 40);\n\t\t}\n\t\ttickFont = helpers$1.options._parseFont(me.options.ticks);\n\t\treturn Math.ceil(me.height / tickFont.lineHeight);\n\t},\n\n\t// Called after the ticks are built. We need\n\thandleDirectionalChanges: function() {\n\t\tif (!this.isHorizontal()) {\n\t\t\t// We are in a vertical orientation. The top value is the highest. So reverse the array\n\t\t\tthis.ticks.reverse();\n\t\t}\n\t},\n\n\tgetLabelForIndex: function(index, datasetIndex) {\n\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t},\n\n\t// Utils\n\tgetPixelForValue: function(value) {\n\t\t// This must be called after fit has been run so that\n\t\t// this.left, this.top, this.right, and this.bottom have been defined\n\t\tvar me = this;\n\t\tvar start = me.start;\n\n\t\tvar rightValue = +me.getRightValue(value);\n\t\tvar pixel;\n\t\tvar range = me.end - start;\n\n\t\tif (me.isHorizontal()) {\n\t\t\tpixel = me.left + (me.width / range * (rightValue - start));\n\t\t} else {\n\t\t\tpixel = me.bottom - (me.height / range * (rightValue - start));\n\t\t}\n\t\treturn pixel;\n\t},\n\n\tgetValueForPixel: function(pixel) {\n\t\tvar me = this;\n\t\tvar isHorizontal = me.isHorizontal();\n\t\tvar innerDimension = isHorizontal ? me.width : me.height;\n\t\tvar offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n\t\treturn me.start + ((me.end - me.start) * offset);\n\t},\n\n\tgetPixelForTick: function(index) {\n\t\treturn this.getPixelForValue(this.ticksAsNumbers[index]);\n\t}\n});\n\n// INTERNAL: static default options, registered in src/index.js\nvar _defaults$1 = defaultConfig$1;\nscale_linear._defaults = _defaults$1;\n\nvar valueOrDefault$a = helpers$1.valueOrDefault;\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {number[]} array of tick values\n */\nfunction generateTicks$1(generationOptions, dataRange) {\n\tvar ticks = [];\n\n\tvar tickVal = valueOrDefault$a(generationOptions.min, Math.pow(10, Math.floor(helpers$1.log10(dataRange.min))));\n\n\tvar endExp = Math.floor(helpers$1.log10(dataRange.max));\n\tvar endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n\tvar exp, significand;\n\n\tif (tickVal === 0) {\n\t\texp = Math.floor(helpers$1.log10(dataRange.minNotZero));\n\t\tsignificand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n\n\t\tticks.push(tickVal);\n\t\ttickVal = significand * Math.pow(10, exp);\n\t} else {\n\t\texp = Math.floor(helpers$1.log10(tickVal));\n\t\tsignificand = Math.floor(tickVal / Math.pow(10, exp));\n\t}\n\tvar precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n\tdo {\n\t\tticks.push(tickVal);\n\n\t\t++significand;\n\t\tif (significand === 10) {\n\t\t\tsignificand = 1;\n\t\t\t++exp;\n\t\t\tprecision = exp >= 0 ? 1 : precision;\n\t\t}\n\n\t\ttickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n\t} while (exp < endExp || (exp === endExp && significand < endSignificand));\n\n\tvar lastTick = valueOrDefault$a(generationOptions.max, tickVal);\n\tticks.push(lastTick);\n\n\treturn ticks;\n}\n\nvar defaultConfig$2 = {\n\tposition: 'left',\n\n\t// label settings\n\tticks: {\n\t\tcallback: core_ticks.formatters.logarithmic\n\t}\n};\n\n// TODO(v3): change this to positiveOrDefault\nfunction nonNegativeOrDefault(value, defaultValue) {\n\treturn helpers$1.isFinite(value) && value >= 0 ? value : defaultValue;\n}\n\nvar scale_logarithmic = core_scale.extend({\n\tdetermineDataLimits: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar chart = me.chart;\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar isHorizontal = me.isHorizontal();\n\t\tfunction IDMatches(meta) {\n\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t}\n\n\t\t// Calculate Range\n\t\tme.min = null;\n\t\tme.max = null;\n\t\tme.minNotZero = null;\n\n\t\tvar hasStacks = opts.stacked;\n\t\tif (hasStacks === undefined) {\n\t\t\thelpers$1.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\tif (hasStacks) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\thasStacks = true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (opts.stacked || hasStacks) {\n\t\t\tvar valuesPerStack = {};\n\n\t\t\thelpers$1.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\tvar key = [\n\t\t\t\t\tmeta.type,\n\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\tmeta.stack\n\t\t\t\t].join('.');\n\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\t\tvaluesPerStack[key] = [];\n\t\t\t\t\t}\n\n\t\t\t\t\thelpers$1.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar values = valuesPerStack[key];\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t// invalid, hidden and negative values are ignored\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden || value < 0) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvalues[index] = values[index] || 0;\n\t\t\t\t\t\tvalues[index] += value;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\thelpers$1.each(valuesPerStack, function(valuesForType) {\n\t\t\t\tif (valuesForType.length > 0) {\n\t\t\t\t\tvar minVal = helpers$1.min(valuesForType);\n\t\t\t\t\tvar maxVal = helpers$1.max(valuesForType);\n\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t\t}\n\t\t\t});\n\n\t\t} else {\n\t\t\thelpers$1.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\thelpers$1.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t// invalid, hidden and negative values are ignored\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden || value < 0) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n\t\t\t\t\t\t\tme.minNotZero = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// Common base implementation to handle ticks.min, ticks.max\n\t\tthis.handleTickRangeOptions();\n\t},\n\n\thandleTickRangeOptions: function() {\n\t\tvar me = this;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar DEFAULT_MIN = 1;\n\t\tvar DEFAULT_MAX = 10;\n\n\t\tme.min = nonNegativeOrDefault(tickOpts.min, me.min);\n\t\tme.max = nonNegativeOrDefault(tickOpts.max, me.max);\n\n\t\tif (me.min === me.max) {\n\t\t\tif (me.min !== 0 && me.min !== null) {\n\t\t\t\tme.min = Math.pow(10, Math.floor(helpers$1.log10(me.min)) - 1);\n\t\t\t\tme.max = Math.pow(10, Math.floor(helpers$1.log10(me.max)) + 1);\n\t\t\t} else {\n\t\t\t\tme.min = DEFAULT_MIN;\n\t\t\t\tme.max = DEFAULT_MAX;\n\t\t\t}\n\t\t}\n\t\tif (me.min === null) {\n\t\t\tme.min = Math.pow(10, Math.floor(helpers$1.log10(me.max)) - 1);\n\t\t}\n\t\tif (me.max === null) {\n\t\t\tme.max = me.min !== 0\n\t\t\t\t? Math.pow(10, Math.floor(helpers$1.log10(me.min)) + 1)\n\t\t\t\t: DEFAULT_MAX;\n\t\t}\n\t\tif (me.minNotZero === null) {\n\t\t\tif (me.min > 0) {\n\t\t\t\tme.minNotZero = me.min;\n\t\t\t} else if (me.max < 1) {\n\t\t\t\tme.minNotZero = Math.pow(10, Math.floor(helpers$1.log10(me.max)));\n\t\t\t} else {\n\t\t\t\tme.minNotZero = DEFAULT_MIN;\n\t\t\t}\n\t\t}\n\t},\n\n\tbuildTicks: function() {\n\t\tvar me = this;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar reverse = !me.isHorizontal();\n\n\t\tvar generationOptions = {\n\t\t\tmin: nonNegativeOrDefault(tickOpts.min),\n\t\t\tmax: nonNegativeOrDefault(tickOpts.max)\n\t\t};\n\t\tvar ticks = me.ticks = generateTicks$1(generationOptions, me);\n\n\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t// range of the scale\n\t\tme.max = helpers$1.max(ticks);\n\t\tme.min = helpers$1.min(ticks);\n\n\t\tif (tickOpts.reverse) {\n\t\t\treverse = !reverse;\n\t\t\tme.start = me.max;\n\t\t\tme.end = me.min;\n\t\t} else {\n\t\t\tme.start = me.min;\n\t\t\tme.end = me.max;\n\t\t}\n\t\tif (reverse) {\n\t\t\tticks.reverse();\n\t\t}\n\t},\n\n\tconvertTicksToLabels: function() {\n\t\tthis.tickValues = this.ticks.slice();\n\n\t\tcore_scale.prototype.convertTicksToLabels.call(this);\n\t},\n\n\t// Get the correct tooltip label\n\tgetLabelForIndex: function(index, datasetIndex) {\n\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t},\n\n\tgetPixelForTick: function(index) {\n\t\treturn this.getPixelForValue(this.tickValues[index]);\n\t},\n\n\t/**\n\t * Returns the value of the first tick.\n\t * @param {number} value - The minimum not zero value.\n\t * @return {number} The first tick value.\n\t * @private\n\t */\n\t_getFirstTickValue: function(value) {\n\t\tvar exp = Math.floor(helpers$1.log10(value));\n\t\tvar significand = Math.floor(value / Math.pow(10, exp));\n\n\t\treturn significand * Math.pow(10, exp);\n\t},\n\n\tgetPixelForValue: function(value) {\n\t\tvar me = this;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar reverse = tickOpts.reverse;\n\t\tvar log10 = helpers$1.log10;\n\t\tvar firstTickValue = me._getFirstTickValue(me.minNotZero);\n\t\tvar offset = 0;\n\t\tvar innerDimension, pixel, start, end, sign;\n\n\t\tvalue = +me.getRightValue(value);\n\t\tif (reverse) {\n\t\t\tstart = me.end;\n\t\t\tend = me.start;\n\t\t\tsign = -1;\n\t\t} else {\n\t\t\tstart = me.start;\n\t\t\tend = me.end;\n\t\t\tsign = 1;\n\t\t}\n\t\tif (me.isHorizontal()) {\n\t\t\tinnerDimension = me.width;\n\t\t\tpixel = reverse ? me.right : me.left;\n\t\t} else {\n\t\t\tinnerDimension = me.height;\n\t\t\tsign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\t\t\tpixel = reverse ? me.top : me.bottom;\n\t\t}\n\t\tif (value !== start) {\n\t\t\tif (start === 0) { // include zero tick\n\t\t\t\toffset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n\t\t\t\tinnerDimension -= offset;\n\t\t\t\tstart = firstTickValue;\n\t\t\t}\n\t\t\tif (value !== 0) {\n\t\t\t\toffset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n\t\t\t}\n\t\t\tpixel += sign * offset;\n\t\t}\n\t\treturn pixel;\n\t},\n\n\tgetValueForPixel: function(pixel) {\n\t\tvar me = this;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar reverse = tickOpts.reverse;\n\t\tvar log10 = helpers$1.log10;\n\t\tvar firstTickValue = me._getFirstTickValue(me.minNotZero);\n\t\tvar innerDimension, start, end, value;\n\n\t\tif (reverse) {\n\t\t\tstart = me.end;\n\t\t\tend = me.start;\n\t\t} else {\n\t\t\tstart = me.start;\n\t\t\tend = me.end;\n\t\t}\n\t\tif (me.isHorizontal()) {\n\t\t\tinnerDimension = me.width;\n\t\t\tvalue = reverse ? me.right - pixel : pixel - me.left;\n\t\t} else {\n\t\t\tinnerDimension = me.height;\n\t\t\tvalue = reverse ? pixel - me.top : me.bottom - pixel;\n\t\t}\n\t\tif (value !== start) {\n\t\t\tif (start === 0) { // include zero tick\n\t\t\t\tvar offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n\t\t\t\tvalue -= offset;\n\t\t\t\tinnerDimension -= offset;\n\t\t\t\tstart = firstTickValue;\n\t\t\t}\n\t\t\tvalue *= log10(end) - log10(start);\n\t\t\tvalue /= innerDimension;\n\t\t\tvalue = Math.pow(10, log10(start) + value);\n\t\t}\n\t\treturn value;\n\t}\n});\n\n// INTERNAL: static default options, registered in src/index.js\nvar _defaults$2 = defaultConfig$2;\nscale_logarithmic._defaults = _defaults$2;\n\nvar valueOrDefault$b = helpers$1.valueOrDefault;\nvar valueAtIndexOrDefault$1 = helpers$1.valueAtIndexOrDefault;\nvar resolve$7 = helpers$1.options.resolve;\n\nvar defaultConfig$3 = {\n\tdisplay: true,\n\n\t// Boolean - Whether to animate scaling the chart from the centre\n\tanimate: true,\n\tposition: 'chartArea',\n\n\tangleLines: {\n\t\tdisplay: true,\n\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\tlineWidth: 1,\n\t\tborderDash: [],\n\t\tborderDashOffset: 0.0\n\t},\n\n\tgridLines: {\n\t\tcircular: false\n\t},\n\n\t// label settings\n\tticks: {\n\t\t// Boolean - Show a backdrop to the scale label\n\t\tshowLabelBackdrop: true,\n\n\t\t// String - The colour of the label backdrop\n\t\tbackdropColor: 'rgba(255,255,255,0.75)',\n\n\t\t// Number - The backdrop padding above & below the label in pixels\n\t\tbackdropPaddingY: 2,\n\n\t\t// Number - The backdrop padding to the side of the label in pixels\n\t\tbackdropPaddingX: 2,\n\n\t\tcallback: core_ticks.formatters.linear\n\t},\n\n\tpointLabels: {\n\t\t// Boolean - if true, show point labels\n\t\tdisplay: true,\n\n\t\t// Number - Point label font size in pixels\n\t\tfontSize: 10,\n\n\t\t// Function - Used to convert point labels\n\t\tcallback: function(label) {\n\t\t\treturn label;\n\t\t}\n\t}\n};\n\nfunction getValueCount(scale) {\n\tvar opts = scale.options;\n\treturn opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n}\n\nfunction getTickBackdropHeight(opts) {\n\tvar tickOpts = opts.ticks;\n\n\tif (tickOpts.display && opts.display) {\n\t\treturn valueOrDefault$b(tickOpts.fontSize, core_defaults.global.defaultFontSize) + tickOpts.backdropPaddingY * 2;\n\t}\n\treturn 0;\n}\n\nfunction measureLabelSize(ctx, lineHeight, label) {\n\tif (helpers$1.isArray(label)) {\n\t\treturn {\n\t\t\tw: helpers$1.longestText(ctx, ctx.font, label),\n\t\t\th: label.length * lineHeight\n\t\t};\n\t}\n\n\treturn {\n\t\tw: ctx.measureText(label).width,\n\t\th: lineHeight\n\t};\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n\tif (angle === min || angle === max) {\n\t\treturn {\n\t\t\tstart: pos - (size / 2),\n\t\t\tend: pos + (size / 2)\n\t\t};\n\t} else if (angle < min || angle > max) {\n\t\treturn {\n\t\t\tstart: pos - size,\n\t\t\tend: pos\n\t\t};\n\t}\n\n\treturn {\n\t\tstart: pos,\n\t\tend: pos + size\n\t};\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n\t// Right, this is really confusing and there is a lot of maths going on here\n\t// The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n\t//\n\t// Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n\t//\n\t// Solution:\n\t//\n\t// We assume the radius of the polygon is half the size of the canvas at first\n\t// at each index we check if the text overlaps.\n\t//\n\t// Where it does, we store that angle and that index.\n\t//\n\t// After finding the largest index and angle we calculate how much we need to remove\n\t// from the shape radius to move the point inwards by that x.\n\t//\n\t// We average the left and right distances to get the maximum shape radius that can fit in the box\n\t// along with labels.\n\t//\n\t// Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n\t// on each side, removing that from the size, halving it and adding the left x protrusion width.\n\t//\n\t// This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n\t// and position it in the most space efficient manner\n\t//\n\t// https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n\tvar plFont = helpers$1.options._parseFont(scale.options.pointLabels);\n\n\t// Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n\t// Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\tvar furthestLimits = {\n\t\tl: 0,\n\t\tr: scale.width,\n\t\tt: 0,\n\t\tb: scale.height - scale.paddingTop\n\t};\n\tvar furthestAngles = {};\n\tvar i, textSize, pointPosition;\n\n\tscale.ctx.font = plFont.string;\n\tscale._pointLabelSizes = [];\n\n\tvar valueCount = getValueCount(scale);\n\tfor (i = 0; i < valueCount; i++) {\n\t\tpointPosition = scale.getPointPosition(i, scale.drawingArea + 5);\n\t\ttextSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale.pointLabels[i] || '');\n\t\tscale._pointLabelSizes[i] = textSize;\n\n\t\t// Add quarter circle to make degree 0 mean top of circle\n\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\tvar angle = helpers$1.toDegrees(angleRadians) % 360;\n\t\tvar hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n\t\tvar vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n\t\tif (hLimits.start < furthestLimits.l) {\n\t\t\tfurthestLimits.l = hLimits.start;\n\t\t\tfurthestAngles.l = angleRadians;\n\t\t}\n\n\t\tif (hLimits.end > furthestLimits.r) {\n\t\t\tfurthestLimits.r = hLimits.end;\n\t\t\tfurthestAngles.r = angleRadians;\n\t\t}\n\n\t\tif (vLimits.start < furthestLimits.t) {\n\t\t\tfurthestLimits.t = vLimits.start;\n\t\t\tfurthestAngles.t = angleRadians;\n\t\t}\n\n\t\tif (vLimits.end > furthestLimits.b) {\n\t\t\tfurthestLimits.b = vLimits.end;\n\t\t\tfurthestAngles.b = angleRadians;\n\t\t}\n\t}\n\n\tscale.setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n}\n\nfunction getTextAlignForAngle(angle) {\n\tif (angle === 0 || angle === 180) {\n\t\treturn 'center';\n\t} else if (angle < 180) {\n\t\treturn 'left';\n\t}\n\n\treturn 'right';\n}\n\nfunction fillText(ctx, text, position, lineHeight) {\n\tvar y = position.y + lineHeight / 2;\n\tvar i, ilen;\n\n\tif (helpers$1.isArray(text)) {\n\t\tfor (i = 0, ilen = text.length; i < ilen; ++i) {\n\t\t\tctx.fillText(text[i], position.x, y);\n\t\t\ty += lineHeight;\n\t\t}\n\t} else {\n\t\tctx.fillText(text, position.x, y);\n\t}\n}\n\nfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\n\tif (angle === 90 || angle === 270) {\n\t\tposition.y -= (textSize.h / 2);\n\t} else if (angle > 270 || angle < 90) {\n\t\tposition.y -= textSize.h;\n\t}\n}\n\nfunction drawPointLabels(scale) {\n\tvar ctx = scale.ctx;\n\tvar opts = scale.options;\n\tvar angleLineOpts = opts.angleLines;\n\tvar gridLineOpts = opts.gridLines;\n\tvar pointLabelOpts = opts.pointLabels;\n\tvar lineWidth = valueOrDefault$b(angleLineOpts.lineWidth, gridLineOpts.lineWidth);\n\tvar lineColor = valueOrDefault$b(angleLineOpts.color, gridLineOpts.color);\n\tvar tickBackdropHeight = getTickBackdropHeight(opts);\n\n\tctx.save();\n\tctx.lineWidth = lineWidth;\n\tctx.strokeStyle = lineColor;\n\tif (ctx.setLineDash) {\n\t\tctx.setLineDash(resolve$7([angleLineOpts.borderDash, gridLineOpts.borderDash, []]));\n\t\tctx.lineDashOffset = resolve$7([angleLineOpts.borderDashOffset, gridLineOpts.borderDashOffset, 0.0]);\n\t}\n\n\tvar outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n\n\t// Point Label Font\n\tvar plFont = helpers$1.options._parseFont(pointLabelOpts);\n\n\tctx.font = plFont.string;\n\tctx.textBaseline = 'middle';\n\n\tfor (var i = getValueCount(scale) - 1; i >= 0; i--) {\n\t\tif (angleLineOpts.display && lineWidth && lineColor) {\n\t\t\tvar outerPosition = scale.getPointPosition(i, outerDistance);\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(scale.xCenter, scale.yCenter);\n\t\t\tctx.lineTo(outerPosition.x, outerPosition.y);\n\t\t\tctx.stroke();\n\t\t}\n\n\t\tif (pointLabelOpts.display) {\n\t\t\t// Extra pixels out for some label spacing\n\t\t\tvar extra = (i === 0 ? tickBackdropHeight / 2 : 0);\n\t\t\tvar pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + 5);\n\n\t\t\t// Keep this in loop since we may support array properties here\n\t\t\tvar pointLabelFontColor = valueAtIndexOrDefault$1(pointLabelOpts.fontColor, i, core_defaults.global.defaultFontColor);\n\t\t\tctx.fillStyle = pointLabelFontColor;\n\n\t\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\t\tvar angle = helpers$1.toDegrees(angleRadians);\n\t\t\tctx.textAlign = getTextAlignForAngle(angle);\n\t\t\tadjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n\t\t\tfillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.lineHeight);\n\t\t}\n\t}\n\tctx.restore();\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, index) {\n\tvar ctx = scale.ctx;\n\tvar circular = gridLineOpts.circular;\n\tvar valueCount = getValueCount(scale);\n\tvar lineColor = valueAtIndexOrDefault$1(gridLineOpts.color, index - 1);\n\tvar lineWidth = valueAtIndexOrDefault$1(gridLineOpts.lineWidth, index - 1);\n\tvar pointPosition;\n\n\tif ((!circular && !valueCount) || !lineColor || !lineWidth) {\n\t\treturn;\n\t}\n\n\tctx.save();\n\tctx.strokeStyle = lineColor;\n\tctx.lineWidth = lineWidth;\n\tif (ctx.setLineDash) {\n\t\tctx.setLineDash(gridLineOpts.borderDash || []);\n\t\tctx.lineDashOffset = gridLineOpts.borderDashOffset || 0.0;\n\t}\n\n\tctx.beginPath();\n\tif (circular) {\n\t\t// Draw circular arcs between the points\n\t\tctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n\t} else {\n\t\t// Draw straight lines connecting each index\n\t\tpointPosition = scale.getPointPosition(0, radius);\n\t\tctx.moveTo(pointPosition.x, pointPosition.y);\n\n\t\tfor (var i = 1; i < valueCount; i++) {\n\t\t\tpointPosition = scale.getPointPosition(i, radius);\n\t\t\tctx.lineTo(pointPosition.x, pointPosition.y);\n\t\t}\n\t}\n\tctx.closePath();\n\tctx.stroke();\n\tctx.restore();\n}\n\nfunction numberOrZero(param) {\n\treturn helpers$1.isNumber(param) ? param : 0;\n}\n\nvar scale_radialLinear = scale_linearbase.extend({\n\tsetDimensions: function() {\n\t\tvar me = this;\n\n\t\t// Set the unconstrained dimension before label rotation\n\t\tme.width = me.maxWidth;\n\t\tme.height = me.maxHeight;\n\t\tme.paddingTop = getTickBackdropHeight(me.options) / 2;\n\t\tme.xCenter = Math.floor(me.width / 2);\n\t\tme.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n\t\tme.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n\t},\n\n\tdetermineDataLimits: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar min = Number.POSITIVE_INFINITY;\n\t\tvar max = Number.NEGATIVE_INFINITY;\n\n\t\thelpers$1.each(chart.data.datasets, function(dataset, datasetIndex) {\n\t\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\n\t\t\t\thelpers$1.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tmin = Math.min(value, min);\n\t\t\t\t\tmax = Math.max(value, max);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tme.min = (min === Number.POSITIVE_INFINITY ? 0 : min);\n\t\tme.max = (max === Number.NEGATIVE_INFINITY ? 0 : max);\n\n\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\tme.handleTickRangeOptions();\n\t},\n\n\t// Returns the maximum number of ticks based on the scale dimension\n\t_computeTickLimit: function() {\n\t\treturn Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n\t},\n\n\tconvertTicksToLabels: function() {\n\t\tvar me = this;\n\n\t\tscale_linearbase.prototype.convertTicksToLabels.call(me);\n\n\t\t// Point labels\n\t\tme.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n\t},\n\n\tgetLabelForIndex: function(index, datasetIndex) {\n\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t},\n\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\n\t\tif (opts.display && opts.pointLabels.display) {\n\t\t\tfitWithPointLabels(me);\n\t\t} else {\n\t\t\tme.setCenterPoint(0, 0, 0, 0);\n\t\t}\n\t},\n\n\t/**\n\t * Set radius reductions and determine new radius and center point\n\t * @private\n\t */\n\tsetReductions: function(largestPossibleRadius, furthestLimits, furthestAngles) {\n\t\tvar me = this;\n\t\tvar radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n\t\tvar radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n\t\tvar radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n\t\tvar radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n\n\t\tradiusReductionLeft = numberOrZero(radiusReductionLeft);\n\t\tradiusReductionRight = numberOrZero(radiusReductionRight);\n\t\tradiusReductionTop = numberOrZero(radiusReductionTop);\n\t\tradiusReductionBottom = numberOrZero(radiusReductionBottom);\n\n\t\tme.drawingArea = Math.min(\n\t\t\tMath.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n\t\t\tMath.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n\t\tme.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n\t},\n\n\tsetCenterPoint: function(leftMovement, rightMovement, topMovement, bottomMovement) {\n\t\tvar me = this;\n\t\tvar maxRight = me.width - rightMovement - me.drawingArea;\n\t\tvar maxLeft = leftMovement + me.drawingArea;\n\t\tvar maxTop = topMovement + me.drawingArea;\n\t\tvar maxBottom = (me.height - me.paddingTop) - bottomMovement - me.drawingArea;\n\n\t\tme.xCenter = Math.floor(((maxLeft + maxRight) / 2) + me.left);\n\t\tme.yCenter = Math.floor(((maxTop + maxBottom) / 2) + me.top + me.paddingTop);\n\t},\n\n\tgetIndexAngle: function(index) {\n\t\tvar angleMultiplier = (Math.PI * 2) / getValueCount(this);\n\t\tvar startAngle = this.chart.options && this.chart.options.startAngle ?\n\t\t\tthis.chart.options.startAngle :\n\t\t\t0;\n\n\t\tvar startAngleRadians = startAngle * Math.PI * 2 / 360;\n\n\t\t// Start from the top instead of right, so remove a quarter of the circle\n\t\treturn index * angleMultiplier + startAngleRadians;\n\t},\n\n\tgetDistanceFromCenterForValue: function(value) {\n\t\tvar me = this;\n\n\t\tif (value === null) {\n\t\t\treturn 0; // null always in center\n\t\t}\n\n\t\t// Take into account half font size + the yPadding of the top value\n\t\tvar scalingFactor = me.drawingArea / (me.max - me.min);\n\t\tif (me.options.ticks.reverse) {\n\t\t\treturn (me.max - value) * scalingFactor;\n\t\t}\n\t\treturn (value - me.min) * scalingFactor;\n\t},\n\n\tgetPointPosition: function(index, distanceFromCenter) {\n\t\tvar me = this;\n\t\tvar thisAngle = me.getIndexAngle(index) - (Math.PI / 2);\n\t\treturn {\n\t\t\tx: Math.cos(thisAngle) * distanceFromCenter + me.xCenter,\n\t\t\ty: Math.sin(thisAngle) * distanceFromCenter + me.yCenter\n\t\t};\n\t},\n\n\tgetPointPositionForValue: function(index, value) {\n\t\treturn this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n\t},\n\n\tgetBasePosition: function() {\n\t\tvar me = this;\n\t\tvar min = me.min;\n\t\tvar max = me.max;\n\n\t\treturn me.getPointPositionForValue(0,\n\t\t\tme.beginAtZero ? 0 :\n\t\t\tmin < 0 && max < 0 ? max :\n\t\t\tmin > 0 && max > 0 ? min :\n\t\t\t0);\n\t},\n\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar gridLineOpts = opts.gridLines;\n\t\tvar tickOpts = opts.ticks;\n\n\t\tif (opts.display) {\n\t\t\tvar ctx = me.ctx;\n\t\t\tvar startAngle = this.getIndexAngle(0);\n\t\t\tvar tickFont = helpers$1.options._parseFont(tickOpts);\n\n\t\t\tif (opts.angleLines.display || opts.pointLabels.display) {\n\t\t\t\tdrawPointLabels(me);\n\t\t\t}\n\n\t\t\thelpers$1.each(me.ticks, function(label, index) {\n\t\t\t\t// Don't draw a centre value (if it is minimum)\n\t\t\t\tif (index > 0 || tickOpts.reverse) {\n\t\t\t\t\tvar yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]);\n\n\t\t\t\t\t// Draw circular lines around the scale\n\t\t\t\t\tif (gridLineOpts.display && index !== 0) {\n\t\t\t\t\t\tdrawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (tickOpts.display) {\n\t\t\t\t\t\tvar tickFontColor = valueOrDefault$b(tickOpts.fontColor, core_defaults.global.defaultFontColor);\n\t\t\t\t\t\tctx.font = tickFont.string;\n\n\t\t\t\t\t\tctx.save();\n\t\t\t\t\t\tctx.translate(me.xCenter, me.yCenter);\n\t\t\t\t\t\tctx.rotate(startAngle);\n\n\t\t\t\t\t\tif (tickOpts.showLabelBackdrop) {\n\t\t\t\t\t\t\tvar labelWidth = ctx.measureText(label).width;\n\t\t\t\t\t\t\tctx.fillStyle = tickOpts.backdropColor;\n\t\t\t\t\t\t\tctx.fillRect(\n\t\t\t\t\t\t\t\t-labelWidth / 2 - tickOpts.backdropPaddingX,\n\t\t\t\t\t\t\t\t-yCenterOffset - tickFont.size / 2 - tickOpts.backdropPaddingY,\n\t\t\t\t\t\t\t\tlabelWidth + tickOpts.backdropPaddingX * 2,\n\t\t\t\t\t\t\t\ttickFont.size + tickOpts.backdropPaddingY * 2\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\t\tctx.textBaseline = 'middle';\n\t\t\t\t\t\tctx.fillStyle = tickFontColor;\n\t\t\t\t\t\tctx.fillText(label, 0, -yCenterOffset);\n\t\t\t\t\t\tctx.restore();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n});\n\n// INTERNAL: static default options, registered in src/index.js\nvar _defaults$3 = defaultConfig$3;\nscale_radialLinear._defaults = _defaults$3;\n\nvar valueOrDefault$c = helpers$1.valueOrDefault;\n\n// Integer constants are from the ES6 spec.\nvar MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\nvar MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n\nvar INTERVALS = {\n\tmillisecond: {\n\t\tcommon: true,\n\t\tsize: 1,\n\t\tsteps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n\t},\n\tsecond: {\n\t\tcommon: true,\n\t\tsize: 1000,\n\t\tsteps: [1, 2, 5, 10, 15, 30]\n\t},\n\tminute: {\n\t\tcommon: true,\n\t\tsize: 60000,\n\t\tsteps: [1, 2, 5, 10, 15, 30]\n\t},\n\thour: {\n\t\tcommon: true,\n\t\tsize: 3600000,\n\t\tsteps: [1, 2, 3, 6, 12]\n\t},\n\tday: {\n\t\tcommon: true,\n\t\tsize: 86400000,\n\t\tsteps: [1, 2, 5]\n\t},\n\tweek: {\n\t\tcommon: false,\n\t\tsize: 604800000,\n\t\tsteps: [1, 2, 3, 4]\n\t},\n\tmonth: {\n\t\tcommon: true,\n\t\tsize: 2.628e9,\n\t\tsteps: [1, 2, 3]\n\t},\n\tquarter: {\n\t\tcommon: false,\n\t\tsize: 7.884e9,\n\t\tsteps: [1, 2, 3, 4]\n\t},\n\tyear: {\n\t\tcommon: true,\n\t\tsize: 3.154e10\n\t}\n};\n\nvar UNITS = Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n\treturn a - b;\n}\n\nfunction arrayUnique(items) {\n\tvar hash = {};\n\tvar out = [];\n\tvar i, ilen, item;\n\n\tfor (i = 0, ilen = items.length; i < ilen; ++i) {\n\t\titem = items[i];\n\t\tif (!hash[item]) {\n\t\t\thash[item] = true;\n\t\t\tout.push(item);\n\t\t}\n\t}\n\n\treturn out;\n}\n\n/**\n * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n * extremity (left + width or top + height). Note that it would be more optimized to directly\n * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n *\n * @param {number[]} timestamps - timestamps sorted from lowest to highest.\n * @param {string} distribution - If 'linear', timestamps will be spread linearly along the min\n * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n * If 'series', timestamps will be positioned at the same distance from each other. In this\n * case, only timestamps that break the time linearity are registered, meaning that in the\n * best case, all timestamps are linear, the table contains only min and max.\n */\nfunction buildLookupTable(timestamps, min, max, distribution) {\n\tif (distribution === 'linear' || !timestamps.length) {\n\t\treturn [\n\t\t\t{time: min, pos: 0},\n\t\t\t{time: max, pos: 1}\n\t\t];\n\t}\n\n\tvar table = [];\n\tvar items = [min];\n\tvar i, ilen, prev, curr, next;\n\n\tfor (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n\t\tcurr = timestamps[i];\n\t\tif (curr > min && curr < max) {\n\t\t\titems.push(curr);\n\t\t}\n\t}\n\n\titems.push(max);\n\n\tfor (i = 0, ilen = items.length; i < ilen; ++i) {\n\t\tnext = items[i + 1];\n\t\tprev = items[i - 1];\n\t\tcurr = items[i];\n\n\t\t// only add points that breaks the scale linearity\n\t\tif (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n\t\t\ttable.push({time: curr, pos: i / (ilen - 1)});\n\t\t}\n\t}\n\n\treturn table;\n}\n\n// @see adapted from https://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\nfunction lookup(table, key, value) {\n\tvar lo = 0;\n\tvar hi = table.length - 1;\n\tvar mid, i0, i1;\n\n\twhile (lo >= 0 && lo <= hi) {\n\t\tmid = (lo + hi) >> 1;\n\t\ti0 = table[mid - 1] || null;\n\t\ti1 = table[mid];\n\n\t\tif (!i0) {\n\t\t\t// given value is outside table (before first item)\n\t\t\treturn {lo: null, hi: i1};\n\t\t} else if (i1[key] < value) {\n\t\t\tlo = mid + 1;\n\t\t} else if (i0[key] > value) {\n\t\t\thi = mid - 1;\n\t\t} else {\n\t\t\treturn {lo: i0, hi: i1};\n\t\t}\n\t}\n\n\t// given value is outside table (after last item)\n\treturn {lo: i1, hi: null};\n}\n\n/**\n * Linearly interpolates the given source `value` using the table items `skey` values and\n * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n * index [0, 1] or [n - 1, n] are used for the interpolation.\n */\nfunction interpolate$1(table, skey, sval, tkey) {\n\tvar range = lookup(table, skey, sval);\n\n\t// Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\tvar prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n\tvar next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n\n\tvar span = next[skey] - prev[skey];\n\tvar ratio = span ? (sval - prev[skey]) / span : 0;\n\tvar offset = (next[tkey] - prev[tkey]) * ratio;\n\n\treturn prev[tkey] + offset;\n}\n\nfunction toTimestamp(scale, input) {\n\tvar adapter = scale._adapter;\n\tvar options = scale.options.time;\n\tvar parser = options.parser;\n\tvar format = parser || options.format;\n\tvar value = input;\n\n\tif (typeof parser === 'function') {\n\t\tvalue = parser(value);\n\t}\n\n\t// Only parse if its not a timestamp already\n\tif (!helpers$1.isFinite(value)) {\n\t\tvalue = typeof format === 'string'\n\t\t\t? adapter.parse(value, format)\n\t\t\t: adapter.parse(value);\n\t}\n\n\tif (value !== null) {\n\t\treturn +value;\n\t}\n\n\t// Labels are in an incompatible format and no `parser` has been provided.\n\t// The user might still use the deprecated `format` option for parsing.\n\tif (!parser && typeof format === 'function') {\n\t\tvalue = format(input);\n\n\t\t// `format` could return something else than a timestamp, if so, parse it\n\t\tif (!helpers$1.isFinite(value)) {\n\t\t\tvalue = adapter.parse(value);\n\t\t}\n\t}\n\n\treturn value;\n}\n\nfunction parse(scale, input) {\n\tif (helpers$1.isNullOrUndef(input)) {\n\t\treturn null;\n\t}\n\n\tvar options = scale.options.time;\n\tvar value = toTimestamp(scale, scale.getRightValue(input));\n\tif (value === null) {\n\t\treturn value;\n\t}\n\n\tif (options.round) {\n\t\tvalue = +scale._adapter.startOf(value, options.round);\n\t}\n\n\treturn value;\n}\n\n/**\n * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n */\nfunction determineStepSize(min, max, unit, capacity) {\n\tvar range = max - min;\n\tvar interval = INTERVALS[unit];\n\tvar milliseconds = interval.size;\n\tvar steps = interval.steps;\n\tvar i, ilen, factor;\n\n\tif (!steps) {\n\t\treturn Math.ceil(range / (capacity * milliseconds));\n\t}\n\n\tfor (i = 0, ilen = steps.length; i < ilen; ++i) {\n\t\tfactor = steps[i];\n\t\tif (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn factor;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n\tvar ilen = UNITS.length;\n\tvar i, interval, factor;\n\n\tfor (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n\t\tinterval = INTERVALS[UNITS[i]];\n\t\tfactor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n\t\tif (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n\t\t\treturn UNITS[i];\n\t\t}\n\t}\n\n\treturn UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n */\nfunction determineUnitForFormatting(scale, ticks, minUnit, min, max) {\n\tvar ilen = UNITS.length;\n\tvar i, unit;\n\n\tfor (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n\t\tunit = UNITS[i];\n\t\tif (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= ticks.length) {\n\t\t\treturn unit;\n\t\t}\n\t}\n\n\treturn UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n\tfor (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n\t\tif (INTERVALS[UNITS[i]].common) {\n\t\t\treturn UNITS[i];\n\t\t}\n\t}\n}\n\n/**\n * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n * Important: this method can return ticks outside the min and max range, it's the\n * responsibility of the calling code to clamp values if needed.\n */\nfunction generate(scale, min, max, capacity) {\n\tvar adapter = scale._adapter;\n\tvar options = scale.options;\n\tvar timeOpts = options.time;\n\tvar minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n\tvar major = determineMajorUnit(minor);\n\tvar stepSize = valueOrDefault$c(timeOpts.stepSize, timeOpts.unitStepSize);\n\tvar weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n\tvar majorTicksEnabled = options.ticks.major.enabled;\n\tvar interval = INTERVALS[minor];\n\tvar first = min;\n\tvar last = max;\n\tvar ticks = [];\n\tvar time;\n\n\tif (!stepSize) {\n\t\tstepSize = determineStepSize(min, max, minor, capacity);\n\t}\n\n\t// For 'week' unit, handle the first day of week option\n\tif (weekday) {\n\t\tfirst = +adapter.startOf(first, 'isoWeek', weekday);\n\t\tlast = +adapter.startOf(last, 'isoWeek', weekday);\n\t}\n\n\t// Align first/last ticks on unit\n\tfirst = +adapter.startOf(first, weekday ? 'day' : minor);\n\tlast = +adapter.startOf(last, weekday ? 'day' : minor);\n\n\t// Make sure that the last tick include max\n\tif (last < max) {\n\t\tlast = +adapter.add(last, 1, minor);\n\t}\n\n\ttime = first;\n\n\tif (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n\t\t// Align the first tick on the previous `minor` unit aligned on the `major` unit:\n\t\t// we first aligned time on the previous `major` unit then add the number of full\n\t\t// stepSize there is between first and the previous major time.\n\t\ttime = +adapter.startOf(time, major);\n\t\ttime = +adapter.add(time, ~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n\t}\n\n\tfor (; time < last; time = +adapter.add(time, stepSize, minor)) {\n\t\tticks.push(+time);\n\t}\n\n\tticks.push(+time);\n\n\treturn ticks;\n}\n\n/**\n * Returns the start and end offsets from edges in the form of {start, end}\n * where each value is a relative width to the scale and ranges between 0 and 1.\n * They add extra margins on the both sides by scaling down the original scale.\n * Offsets are added when the `offset` option is true.\n */\nfunction computeOffsets(table, ticks, min, max, options) {\n\tvar start = 0;\n\tvar end = 0;\n\tvar first, last;\n\n\tif (options.offset && ticks.length) {\n\t\tif (!options.time.min) {\n\t\t\tfirst = interpolate$1(table, 'time', ticks[0], 'pos');\n\t\t\tif (ticks.length === 1) {\n\t\t\t\tstart = 1 - first;\n\t\t\t} else {\n\t\t\t\tstart = (interpolate$1(table, 'time', ticks[1], 'pos') - first) / 2;\n\t\t\t}\n\t\t}\n\t\tif (!options.time.max) {\n\t\t\tlast = interpolate$1(table, 'time', ticks[ticks.length - 1], 'pos');\n\t\t\tif (ticks.length === 1) {\n\t\t\t\tend = last;\n\t\t\t} else {\n\t\t\t\tend = (last - interpolate$1(table, 'time', ticks[ticks.length - 2], 'pos')) / 2;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn {start: start, end: end};\n}\n\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n\tvar ticks = [];\n\tvar i, ilen, value, major;\n\n\tfor (i = 0, ilen = values.length; i < ilen; ++i) {\n\t\tvalue = values[i];\n\t\tmajor = majorUnit ? value === +scale._adapter.startOf(value, majorUnit) : false;\n\n\t\tticks.push({\n\t\t\tvalue: value,\n\t\t\tmajor: major\n\t\t});\n\t}\n\n\treturn ticks;\n}\n\nvar defaultConfig$4 = {\n\tposition: 'bottom',\n\n\t/**\n\t * Data distribution along the scale:\n\t * - 'linear': data are spread according to their time (distances can vary),\n\t * - 'series': data are spread at the same distance from each other.\n\t * @see https://github.com/chartjs/Chart.js/pull/4507\n\t * @since 2.7.0\n\t */\n\tdistribution: 'linear',\n\n\t/**\n\t * Scale boundary strategy (bypassed by min/max time options)\n\t * - `data`: make sure data are fully visible, ticks outside are removed\n\t * - `ticks`: make sure ticks are fully visible, data outside are truncated\n\t * @see https://github.com/chartjs/Chart.js/pull/4556\n\t * @since 2.7.0\n\t */\n\tbounds: 'data',\n\n\tadapters: {},\n\ttime: {\n\t\tparser: false, // false == a pattern string from https://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n\t\tformat: false, // DEPRECATED false == date objects, moment object, callback or a pattern string from https://momentjs.com/docs/#/parsing/string-format/\n\t\tunit: false, // false == automatic or override with week, month, year, etc.\n\t\tround: false, // none, or override with week, month, year, etc.\n\t\tdisplayFormat: false, // DEPRECATED\n\t\tisoWeekday: false, // override week start day - see https://momentjs.com/docs/#/get-set/iso-weekday/\n\t\tminUnit: 'millisecond',\n\t\tdisplayFormats: {}\n\t},\n\tticks: {\n\t\tautoSkip: false,\n\n\t\t/**\n\t\t * Ticks generation input values:\n\t\t * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n\t\t * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n\t\t * - 'labels': generates ticks from user given `data.labels` values ONLY.\n\t\t * @see https://github.com/chartjs/Chart.js/pull/4507\n\t\t * @since 2.7.0\n\t\t */\n\t\tsource: 'auto',\n\n\t\tmajor: {\n\t\t\tenabled: false\n\t\t}\n\t}\n};\n\nvar scale_time = core_scale.extend({\n\tinitialize: function() {\n\t\tthis.mergeTicksOptions();\n\t\tcore_scale.prototype.initialize.call(this);\n\t},\n\n\tupdate: function() {\n\t\tvar me = this;\n\t\tvar options = me.options;\n\t\tvar time = options.time || (options.time = {});\n\t\tvar adapter = me._adapter = new core_adapters._date(options.adapters.date);\n\n\t\t// DEPRECATIONS: output a message only one time per update\n\t\tif (time.format) {\n\t\t\tconsole.warn('options.time.format is deprecated and replaced by options.time.parser.');\n\t\t}\n\n\t\t// Backward compatibility: before introducing adapter, `displayFormats` was\n\t\t// supposed to contain *all* unit/string pairs but this can't be resolved\n\t\t// when loading the scale (adapters are loaded afterward), so let's populate\n\t\t// missing formats on update\n\t\thelpers$1.mergeIf(time.displayFormats, adapter.formats());\n\n\t\treturn core_scale.prototype.update.apply(me, arguments);\n\t},\n\n\t/**\n\t * Allows data to be referenced via 't' attribute\n\t */\n\tgetRightValue: function(rawValue) {\n\t\tif (rawValue && rawValue.t !== undefined) {\n\t\t\trawValue = rawValue.t;\n\t\t}\n\t\treturn core_scale.prototype.getRightValue.call(this, rawValue);\n\t},\n\n\tdetermineDataLimits: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar adapter = me._adapter;\n\t\tvar timeOpts = me.options.time;\n\t\tvar unit = timeOpts.unit || 'day';\n\t\tvar min = MAX_INTEGER;\n\t\tvar max = MIN_INTEGER;\n\t\tvar timestamps = [];\n\t\tvar datasets = [];\n\t\tvar labels = [];\n\t\tvar i, j, ilen, jlen, data, timestamp;\n\t\tvar dataLabels = chart.data.labels || [];\n\n\t\t// Convert labels to timestamps\n\t\tfor (i = 0, ilen = dataLabels.length; i < ilen; ++i) {\n\t\t\tlabels.push(parse(me, dataLabels[i]));\n\t\t}\n\n\t\t// Convert data to timestamps\n\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\tif (chart.isDatasetVisible(i)) {\n\t\t\t\tdata = chart.data.datasets[i].data;\n\n\t\t\t\t// Let's consider that all data have the same format.\n\t\t\t\tif (helpers$1.isObject(data[0])) {\n\t\t\t\t\tdatasets[i] = [];\n\n\t\t\t\t\tfor (j = 0, jlen = data.length; j < jlen; ++j) {\n\t\t\t\t\t\ttimestamp = parse(me, data[j]);\n\t\t\t\t\t\ttimestamps.push(timestamp);\n\t\t\t\t\t\tdatasets[i][j] = timestamp;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (j = 0, jlen = labels.length; j < jlen; ++j) {\n\t\t\t\t\t\ttimestamps.push(labels[j]);\n\t\t\t\t\t}\n\t\t\t\t\tdatasets[i] = labels.slice(0);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdatasets[i] = [];\n\t\t\t}\n\t\t}\n\n\t\tif (labels.length) {\n\t\t\t// Sort labels **after** data have been converted\n\t\t\tlabels = arrayUnique(labels).sort(sorter);\n\t\t\tmin = Math.min(min, labels[0]);\n\t\t\tmax = Math.max(max, labels[labels.length - 1]);\n\t\t}\n\n\t\tif (timestamps.length) {\n\t\t\ttimestamps = arrayUnique(timestamps).sort(sorter);\n\t\t\tmin = Math.min(min, timestamps[0]);\n\t\t\tmax = Math.max(max, timestamps[timestamps.length - 1]);\n\t\t}\n\n\t\tmin = parse(me, timeOpts.min) || min;\n\t\tmax = parse(me, timeOpts.max) || max;\n\n\t\t// In case there is no valid min/max, set limits based on unit time option\n\t\tmin = min === MAX_INTEGER ? +adapter.startOf(Date.now(), unit) : min;\n\t\tmax = max === MIN_INTEGER ? +adapter.endOf(Date.now(), unit) + 1 : max;\n\n\t\t// Make sure that max is strictly higher than min (required by the lookup table)\n\t\tme.min = Math.min(min, max);\n\t\tme.max = Math.max(min + 1, max);\n\n\t\t// PRIVATE\n\t\tme._horizontal = me.isHorizontal();\n\t\tme._table = [];\n\t\tme._timestamps = {\n\t\t\tdata: timestamps,\n\t\t\tdatasets: datasets,\n\t\t\tlabels: labels\n\t\t};\n\t},\n\n\tbuildTicks: function() {\n\t\tvar me = this;\n\t\tvar min = me.min;\n\t\tvar max = me.max;\n\t\tvar options = me.options;\n\t\tvar timeOpts = options.time;\n\t\tvar timestamps = [];\n\t\tvar ticks = [];\n\t\tvar i, ilen, timestamp;\n\n\t\tswitch (options.ticks.source) {\n\t\tcase 'data':\n\t\t\ttimestamps = me._timestamps.data;\n\t\t\tbreak;\n\t\tcase 'labels':\n\t\t\ttimestamps = me._timestamps.labels;\n\t\t\tbreak;\n\t\tcase 'auto':\n\t\tdefault:\n\t\t\ttimestamps = generate(me, min, max, me.getLabelCapacity(min), options);\n\t\t}\n\n\t\tif (options.bounds === 'ticks' && timestamps.length) {\n\t\t\tmin = timestamps[0];\n\t\t\tmax = timestamps[timestamps.length - 1];\n\t\t}\n\n\t\t// Enforce limits with user min/max options\n\t\tmin = parse(me, timeOpts.min) || min;\n\t\tmax = parse(me, timeOpts.max) || max;\n\n\t\t// Remove ticks outside the min/max range\n\t\tfor (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n\t\t\ttimestamp = timestamps[i];\n\t\t\tif (timestamp >= min && timestamp <= max) {\n\t\t\t\tticks.push(timestamp);\n\t\t\t}\n\t\t}\n\n\t\tme.min = min;\n\t\tme.max = max;\n\n\t\t// PRIVATE\n\t\tme._unit = timeOpts.unit || determineUnitForFormatting(me, ticks, timeOpts.minUnit, me.min, me.max);\n\t\tme._majorUnit = determineMajorUnit(me._unit);\n\t\tme._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n\t\tme._offsets = computeOffsets(me._table, ticks, min, max, options);\n\n\t\tif (options.ticks.reverse) {\n\t\t\tticks.reverse();\n\t\t}\n\n\t\treturn ticksFromTimestamps(me, ticks, me._majorUnit);\n\t},\n\n\tgetLabelForIndex: function(index, datasetIndex) {\n\t\tvar me = this;\n\t\tvar adapter = me._adapter;\n\t\tvar data = me.chart.data;\n\t\tvar timeOpts = me.options.time;\n\t\tvar label = data.labels && index < data.labels.length ? data.labels[index] : '';\n\t\tvar value = data.datasets[datasetIndex].data[index];\n\n\t\tif (helpers$1.isObject(value)) {\n\t\t\tlabel = me.getRightValue(value);\n\t\t}\n\t\tif (timeOpts.tooltipFormat) {\n\t\t\treturn adapter.format(toTimestamp(me, label), timeOpts.tooltipFormat);\n\t\t}\n\t\tif (typeof label === 'string') {\n\t\t\treturn label;\n\t\t}\n\t\treturn adapter.format(toTimestamp(me, label), timeOpts.displayFormats.datetime);\n\t},\n\n\t/**\n\t * Function to format an individual tick mark\n\t * @private\n\t */\n\ttickFormatFunction: function(time, index, ticks, format) {\n\t\tvar me = this;\n\t\tvar adapter = me._adapter;\n\t\tvar options = me.options;\n\t\tvar formats = options.time.displayFormats;\n\t\tvar minorFormat = formats[me._unit];\n\t\tvar majorUnit = me._majorUnit;\n\t\tvar majorFormat = formats[majorUnit];\n\t\tvar majorTime = +adapter.startOf(time, majorUnit);\n\t\tvar majorTickOpts = options.ticks.major;\n\t\tvar major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n\t\tvar label = adapter.format(time, format ? format : major ? majorFormat : minorFormat);\n\t\tvar tickOpts = major ? majorTickOpts : options.ticks.minor;\n\t\tvar formatter = valueOrDefault$c(tickOpts.callback, tickOpts.userCallback);\n\n\t\treturn formatter ? formatter(label, index, ticks) : label;\n\t},\n\n\tconvertTicksToLabels: function(ticks) {\n\t\tvar labels = [];\n\t\tvar i, ilen;\n\n\t\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\t\tlabels.push(this.tickFormatFunction(ticks[i].value, i, ticks));\n\t\t}\n\n\t\treturn labels;\n\t},\n\n\t/**\n\t * @private\n\t */\n\tgetPixelForOffset: function(time) {\n\t\tvar me = this;\n\t\tvar isReverse = me.options.ticks.reverse;\n\t\tvar size = me._horizontal ? me.width : me.height;\n\t\tvar start = me._horizontal ? isReverse ? me.right : me.left : isReverse ? me.bottom : me.top;\n\t\tvar pos = interpolate$1(me._table, 'time', time, 'pos');\n\t\tvar offset = size * (me._offsets.start + pos) / (me._offsets.start + 1 + me._offsets.end);\n\n\t\treturn isReverse ? start - offset : start + offset;\n\t},\n\n\tgetPixelForValue: function(value, index, datasetIndex) {\n\t\tvar me = this;\n\t\tvar time = null;\n\n\t\tif (index !== undefined && datasetIndex !== undefined) {\n\t\t\ttime = me._timestamps.datasets[datasetIndex][index];\n\t\t}\n\n\t\tif (time === null) {\n\t\t\ttime = parse(me, value);\n\t\t}\n\n\t\tif (time !== null) {\n\t\t\treturn me.getPixelForOffset(time);\n\t\t}\n\t},\n\n\tgetPixelForTick: function(index) {\n\t\tvar ticks = this.getTicks();\n\t\treturn index >= 0 && index < ticks.length ?\n\t\t\tthis.getPixelForOffset(ticks[index].value) :\n\t\t\tnull;\n\t},\n\n\tgetValueForPixel: function(pixel) {\n\t\tvar me = this;\n\t\tvar size = me._horizontal ? me.width : me.height;\n\t\tvar start = me._horizontal ? me.left : me.top;\n\t\tvar pos = (size ? (pixel - start) / size : 0) * (me._offsets.start + 1 + me._offsets.start) - me._offsets.end;\n\t\tvar time = interpolate$1(me._table, 'pos', pos, 'time');\n\n\t\t// DEPRECATION, we should return time directly\n\t\treturn me._adapter._create(time);\n\t},\n\n\t/**\n\t * Crude approximation of what the label width might be\n\t * @private\n\t */\n\tgetLabelWidth: function(label) {\n\t\tvar me = this;\n\t\tvar ticksOpts = me.options.ticks;\n\t\tvar tickLabelWidth = me.ctx.measureText(label).width;\n\t\tvar angle = helpers$1.toRadians(ticksOpts.maxRotation);\n\t\tvar cosRotation = Math.cos(angle);\n\t\tvar sinRotation = Math.sin(angle);\n\t\tvar tickFontSize = valueOrDefault$c(ticksOpts.fontSize, core_defaults.global.defaultFontSize);\n\n\t\treturn (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tgetLabelCapacity: function(exampleTime) {\n\t\tvar me = this;\n\n\t\t// pick the longest format (milliseconds) for guestimation\n\t\tvar format = me.options.time.displayFormats.millisecond;\n\t\tvar exampleLabel = me.tickFormatFunction(exampleTime, 0, [], format);\n\t\tvar tickLabelWidth = me.getLabelWidth(exampleLabel);\n\t\tvar innerWidth = me.isHorizontal() ? me.width : me.height;\n\t\tvar capacity = Math.floor(innerWidth / tickLabelWidth);\n\n\t\treturn capacity > 0 ? capacity : 1;\n\t}\n});\n\n// INTERNAL: static default options, registered in src/index.js\nvar _defaults$4 = defaultConfig$4;\nscale_time._defaults = _defaults$4;\n\nvar scales = {\n\tcategory: scale_category,\n\tlinear: scale_linear,\n\tlogarithmic: scale_logarithmic,\n\tradialLinear: scale_radialLinear,\n\ttime: scale_time\n};\n\nvar moment = createCommonjsModule(function (module, exports) {\n(function (global, factory) {\n    module.exports = factory();\n}(commonjsGlobal, (function () {\n    var hookCallback;\n\n    function hooks () {\n        return hookCallback.apply(null, arguments);\n    }\n\n    // This is done to register the method called with moment()\n    // without creating circular dependencies.\n    function setHookCallback (callback) {\n        hookCallback = callback;\n    }\n\n    function isArray(input) {\n        return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n    }\n\n    function isObject(input) {\n        // IE8 will treat undefined and null as object if it wasn't for\n        // input != null\n        return input != null && Object.prototype.toString.call(input) === '[object Object]';\n    }\n\n    function isObjectEmpty(obj) {\n        if (Object.getOwnPropertyNames) {\n            return (Object.getOwnPropertyNames(obj).length === 0);\n        } else {\n            var k;\n            for (k in obj) {\n                if (obj.hasOwnProperty(k)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n\n    function isUndefined(input) {\n        return input === void 0;\n    }\n\n    function isNumber(input) {\n        return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n    }\n\n    function isDate(input) {\n        return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n    }\n\n    function map(arr, fn) {\n        var res = [], i;\n        for (i = 0; i < arr.length; ++i) {\n            res.push(fn(arr[i], i));\n        }\n        return res;\n    }\n\n    function hasOwnProp(a, b) {\n        return Object.prototype.hasOwnProperty.call(a, b);\n    }\n\n    function extend(a, b) {\n        for (var i in b) {\n            if (hasOwnProp(b, i)) {\n                a[i] = b[i];\n            }\n        }\n\n        if (hasOwnProp(b, 'toString')) {\n            a.toString = b.toString;\n        }\n\n        if (hasOwnProp(b, 'valueOf')) {\n            a.valueOf = b.valueOf;\n        }\n\n        return a;\n    }\n\n    function createUTC (input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, true).utc();\n    }\n\n    function defaultParsingFlags() {\n        // We need to deep clone this object.\n        return {\n            empty           : false,\n            unusedTokens    : [],\n            unusedInput     : [],\n            overflow        : -2,\n            charsLeftOver   : 0,\n            nullInput       : false,\n            invalidMonth    : null,\n            invalidFormat   : false,\n            userInvalidated : false,\n            iso             : false,\n            parsedDateParts : [],\n            meridiem        : null,\n            rfc2822         : false,\n            weekdayMismatch : false\n        };\n    }\n\n    function getParsingFlags(m) {\n        if (m._pf == null) {\n            m._pf = defaultParsingFlags();\n        }\n        return m._pf;\n    }\n\n    var some;\n    if (Array.prototype.some) {\n        some = Array.prototype.some;\n    } else {\n        some = function (fun) {\n            var t = Object(this);\n            var len = t.length >>> 0;\n\n            for (var i = 0; i < len; i++) {\n                if (i in t && fun.call(this, t[i], i, t)) {\n                    return true;\n                }\n            }\n\n            return false;\n        };\n    }\n\n    function isValid(m) {\n        if (m._isValid == null) {\n            var flags = getParsingFlags(m);\n            var parsedParts = some.call(flags.parsedDateParts, function (i) {\n                return i != null;\n            });\n            var isNowValid = !isNaN(m._d.getTime()) &&\n                flags.overflow < 0 &&\n                !flags.empty &&\n                !flags.invalidMonth &&\n                !flags.invalidWeekday &&\n                !flags.weekdayMismatch &&\n                !flags.nullInput &&\n                !flags.invalidFormat &&\n                !flags.userInvalidated &&\n                (!flags.meridiem || (flags.meridiem && parsedParts));\n\n            if (m._strict) {\n                isNowValid = isNowValid &&\n                    flags.charsLeftOver === 0 &&\n                    flags.unusedTokens.length === 0 &&\n                    flags.bigHour === undefined;\n            }\n\n            if (Object.isFrozen == null || !Object.isFrozen(m)) {\n                m._isValid = isNowValid;\n            }\n            else {\n                return isNowValid;\n            }\n        }\n        return m._isValid;\n    }\n\n    function createInvalid (flags) {\n        var m = createUTC(NaN);\n        if (flags != null) {\n            extend(getParsingFlags(m), flags);\n        }\n        else {\n            getParsingFlags(m).userInvalidated = true;\n        }\n\n        return m;\n    }\n\n    // Plugins that add properties should also add the key here (null value),\n    // so we can properly clone ourselves.\n    var momentProperties = hooks.momentProperties = [];\n\n    function copyConfig(to, from) {\n        var i, prop, val;\n\n        if (!isUndefined(from._isAMomentObject)) {\n            to._isAMomentObject = from._isAMomentObject;\n        }\n        if (!isUndefined(from._i)) {\n            to._i = from._i;\n        }\n        if (!isUndefined(from._f)) {\n            to._f = from._f;\n        }\n        if (!isUndefined(from._l)) {\n            to._l = from._l;\n        }\n        if (!isUndefined(from._strict)) {\n            to._strict = from._strict;\n        }\n        if (!isUndefined(from._tzm)) {\n            to._tzm = from._tzm;\n        }\n        if (!isUndefined(from._isUTC)) {\n            to._isUTC = from._isUTC;\n        }\n        if (!isUndefined(from._offset)) {\n            to._offset = from._offset;\n        }\n        if (!isUndefined(from._pf)) {\n            to._pf = getParsingFlags(from);\n        }\n        if (!isUndefined(from._locale)) {\n            to._locale = from._locale;\n        }\n\n        if (momentProperties.length > 0) {\n            for (i = 0; i < momentProperties.length; i++) {\n                prop = momentProperties[i];\n                val = from[prop];\n                if (!isUndefined(val)) {\n                    to[prop] = val;\n                }\n            }\n        }\n\n        return to;\n    }\n\n    var updateInProgress = false;\n\n    // Moment prototype object\n    function Moment(config) {\n        copyConfig(this, config);\n        this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n        if (!this.isValid()) {\n            this._d = new Date(NaN);\n        }\n        // Prevent infinite loop in case updateOffset creates new moment\n        // objects.\n        if (updateInProgress === false) {\n            updateInProgress = true;\n            hooks.updateOffset(this);\n            updateInProgress = false;\n        }\n    }\n\n    function isMoment (obj) {\n        return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);\n    }\n\n    function absFloor (number) {\n        if (number < 0) {\n            // -0 -> 0\n            return Math.ceil(number) || 0;\n        } else {\n            return Math.floor(number);\n        }\n    }\n\n    function toInt(argumentForCoercion) {\n        var coercedNumber = +argumentForCoercion,\n            value = 0;\n\n        if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n            value = absFloor(coercedNumber);\n        }\n\n        return value;\n    }\n\n    // compare two arrays, return the number of differences\n    function compareArrays(array1, array2, dontConvert) {\n        var len = Math.min(array1.length, array2.length),\n            lengthDiff = Math.abs(array1.length - array2.length),\n            diffs = 0,\n            i;\n        for (i = 0; i < len; i++) {\n            if ((dontConvert && array1[i] !== array2[i]) ||\n                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n                diffs++;\n            }\n        }\n        return diffs + lengthDiff;\n    }\n\n    function warn(msg) {\n        if (hooks.suppressDeprecationWarnings === false &&\n                (typeof console !==  'undefined') && console.warn) {\n            console.warn('Deprecation warning: ' + msg);\n        }\n    }\n\n    function deprecate(msg, fn) {\n        var firstTime = true;\n\n        return extend(function () {\n            if (hooks.deprecationHandler != null) {\n                hooks.deprecationHandler(null, msg);\n            }\n            if (firstTime) {\n                var args = [];\n                var arg;\n                for (var i = 0; i < arguments.length; i++) {\n                    arg = '';\n                    if (typeof arguments[i] === 'object') {\n                        arg += '\\n[' + i + '] ';\n                        for (var key in arguments[0]) {\n                            arg += key + ': ' + arguments[0][key] + ', ';\n                        }\n                        arg = arg.slice(0, -2); // Remove trailing comma and space\n                    } else {\n                        arg = arguments[i];\n                    }\n                    args.push(arg);\n                }\n                warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + (new Error()).stack);\n                firstTime = false;\n            }\n            return fn.apply(this, arguments);\n        }, fn);\n    }\n\n    var deprecations = {};\n\n    function deprecateSimple(name, msg) {\n        if (hooks.deprecationHandler != null) {\n            hooks.deprecationHandler(name, msg);\n        }\n        if (!deprecations[name]) {\n            warn(msg);\n            deprecations[name] = true;\n        }\n    }\n\n    hooks.suppressDeprecationWarnings = false;\n    hooks.deprecationHandler = null;\n\n    function isFunction(input) {\n        return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n    }\n\n    function set (config) {\n        var prop, i;\n        for (i in config) {\n            prop = config[i];\n            if (isFunction(prop)) {\n                this[i] = prop;\n            } else {\n                this['_' + i] = prop;\n            }\n        }\n        this._config = config;\n        // Lenient ordinal parsing accepts just a number in addition to\n        // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        this._dayOfMonthOrdinalParseLenient = new RegExp(\n            (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +\n                '|' + (/\\d{1,2}/).source);\n    }\n\n    function mergeConfigs(parentConfig, childConfig) {\n        var res = extend({}, parentConfig), prop;\n        for (prop in childConfig) {\n            if (hasOwnProp(childConfig, prop)) {\n                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n                    res[prop] = {};\n                    extend(res[prop], parentConfig[prop]);\n                    extend(res[prop], childConfig[prop]);\n                } else if (childConfig[prop] != null) {\n                    res[prop] = childConfig[prop];\n                } else {\n                    delete res[prop];\n                }\n            }\n        }\n        for (prop in parentConfig) {\n            if (hasOwnProp(parentConfig, prop) &&\n                    !hasOwnProp(childConfig, prop) &&\n                    isObject(parentConfig[prop])) {\n                // make sure changes to properties don't modify parent config\n                res[prop] = extend({}, res[prop]);\n            }\n        }\n        return res;\n    }\n\n    function Locale(config) {\n        if (config != null) {\n            this.set(config);\n        }\n    }\n\n    var keys;\n\n    if (Object.keys) {\n        keys = Object.keys;\n    } else {\n        keys = function (obj) {\n            var i, res = [];\n            for (i in obj) {\n                if (hasOwnProp(obj, i)) {\n                    res.push(i);\n                }\n            }\n            return res;\n        };\n    }\n\n    var defaultCalendar = {\n        sameDay : '[Today at] LT',\n        nextDay : '[Tomorrow at] LT',\n        nextWeek : 'dddd [at] LT',\n        lastDay : '[Yesterday at] LT',\n        lastWeek : '[Last] dddd [at] LT',\n        sameElse : 'L'\n    };\n\n    function calendar (key, mom, now) {\n        var output = this._calendar[key] || this._calendar['sameElse'];\n        return isFunction(output) ? output.call(mom, now) : output;\n    }\n\n    var defaultLongDateFormat = {\n        LTS  : 'h:mm:ss A',\n        LT   : 'h:mm A',\n        L    : 'MM/DD/YYYY',\n        LL   : 'MMMM D, YYYY',\n        LLL  : 'MMMM D, YYYY h:mm A',\n        LLLL : 'dddd, MMMM D, YYYY h:mm A'\n    };\n\n    function longDateFormat (key) {\n        var format = this._longDateFormat[key],\n            formatUpper = this._longDateFormat[key.toUpperCase()];\n\n        if (format || !formatUpper) {\n            return format;\n        }\n\n        this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n            return val.slice(1);\n        });\n\n        return this._longDateFormat[key];\n    }\n\n    var defaultInvalidDate = 'Invalid date';\n\n    function invalidDate () {\n        return this._invalidDate;\n    }\n\n    var defaultOrdinal = '%d';\n    var defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n    function ordinal (number) {\n        return this._ordinal.replace('%d', number);\n    }\n\n    var defaultRelativeTime = {\n        future : 'in %s',\n        past   : '%s ago',\n        s  : 'a few seconds',\n        ss : '%d seconds',\n        m  : 'a minute',\n        mm : '%d minutes',\n        h  : 'an hour',\n        hh : '%d hours',\n        d  : 'a day',\n        dd : '%d days',\n        M  : 'a month',\n        MM : '%d months',\n        y  : 'a year',\n        yy : '%d years'\n    };\n\n    function relativeTime (number, withoutSuffix, string, isFuture) {\n        var output = this._relativeTime[string];\n        return (isFunction(output)) ?\n            output(number, withoutSuffix, string, isFuture) :\n            output.replace(/%d/i, number);\n    }\n\n    function pastFuture (diff, output) {\n        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n        return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n    }\n\n    var aliases = {};\n\n    function addUnitAlias (unit, shorthand) {\n        var lowerCase = unit.toLowerCase();\n        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n    }\n\n    function normalizeUnits(units) {\n        return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n    }\n\n    function normalizeObjectUnits(inputObject) {\n        var normalizedInput = {},\n            normalizedProp,\n            prop;\n\n        for (prop in inputObject) {\n            if (hasOwnProp(inputObject, prop)) {\n                normalizedProp = normalizeUnits(prop);\n                if (normalizedProp) {\n                    normalizedInput[normalizedProp] = inputObject[prop];\n                }\n            }\n        }\n\n        return normalizedInput;\n    }\n\n    var priorities = {};\n\n    function addUnitPriority(unit, priority) {\n        priorities[unit] = priority;\n    }\n\n    function getPrioritizedUnits(unitsObj) {\n        var units = [];\n        for (var u in unitsObj) {\n            units.push({unit: u, priority: priorities[u]});\n        }\n        units.sort(function (a, b) {\n            return a.priority - b.priority;\n        });\n        return units;\n    }\n\n    function zeroFill(number, targetLength, forceSign) {\n        var absNumber = '' + Math.abs(number),\n            zerosToFill = targetLength - absNumber.length,\n            sign = number >= 0;\n        return (sign ? (forceSign ? '+' : '') : '-') +\n            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n    }\n\n    var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n\n    var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n\n    var formatFunctions = {};\n\n    var formatTokenFunctions = {};\n\n    // token:    'M'\n    // padded:   ['MM', 2]\n    // ordinal:  'Mo'\n    // callback: function () { this.month() + 1 }\n    function addFormatToken (token, padded, ordinal, callback) {\n        var func = callback;\n        if (typeof callback === 'string') {\n            func = function () {\n                return this[callback]();\n            };\n        }\n        if (token) {\n            formatTokenFunctions[token] = func;\n        }\n        if (padded) {\n            formatTokenFunctions[padded[0]] = function () {\n                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n            };\n        }\n        if (ordinal) {\n            formatTokenFunctions[ordinal] = function () {\n                return this.localeData().ordinal(func.apply(this, arguments), token);\n            };\n        }\n    }\n\n    function removeFormattingTokens(input) {\n        if (input.match(/\\[[\\s\\S]/)) {\n            return input.replace(/^\\[|\\]$/g, '');\n        }\n        return input.replace(/\\\\/g, '');\n    }\n\n    function makeFormatFunction(format) {\n        var array = format.match(formattingTokens), i, length;\n\n        for (i = 0, length = array.length; i < length; i++) {\n            if (formatTokenFunctions[array[i]]) {\n                array[i] = formatTokenFunctions[array[i]];\n            } else {\n                array[i] = removeFormattingTokens(array[i]);\n            }\n        }\n\n        return function (mom) {\n            var output = '', i;\n            for (i = 0; i < length; i++) {\n                output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n            }\n            return output;\n        };\n    }\n\n    // format date using native date object\n    function formatMoment(m, format) {\n        if (!m.isValid()) {\n            return m.localeData().invalidDate();\n        }\n\n        format = expandFormat(format, m.localeData());\n        formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n\n        return formatFunctions[format](m);\n    }\n\n    function expandFormat(format, locale) {\n        var i = 5;\n\n        function replaceLongDateFormatTokens(input) {\n            return locale.longDateFormat(input) || input;\n        }\n\n        localFormattingTokens.lastIndex = 0;\n        while (i >= 0 && localFormattingTokens.test(format)) {\n            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n            localFormattingTokens.lastIndex = 0;\n            i -= 1;\n        }\n\n        return format;\n    }\n\n    var match1         = /\\d/;            //       0 - 9\n    var match2         = /\\d\\d/;          //      00 - 99\n    var match3         = /\\d{3}/;         //     000 - 999\n    var match4         = /\\d{4}/;         //    0000 - 9999\n    var match6         = /[+-]?\\d{6}/;    // -999999 - 999999\n    var match1to2      = /\\d\\d?/;         //       0 - 99\n    var match3to4      = /\\d\\d\\d\\d?/;     //     999 - 9999\n    var match5to6      = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n    var match1to3      = /\\d{1,3}/;       //       0 - 999\n    var match1to4      = /\\d{1,4}/;       //       0 - 9999\n    var match1to6      = /[+-]?\\d{1,6}/;  // -999999 - 999999\n\n    var matchUnsigned  = /\\d+/;           //       0 - inf\n    var matchSigned    = /[+-]?\\d+/;      //    -inf - inf\n\n    var matchOffset    = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n    var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\n    var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n\n    // any word (or two) characters or numbers including two/three word month in arabic.\n    // includes scottish gaelic two word and hyphenated months\n    var matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n\n    var regexes = {};\n\n    function addRegexToken (token, regex, strictRegex) {\n        regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n            return (isStrict && strictRegex) ? strictRegex : regex;\n        };\n    }\n\n    function getParseRegexForToken (token, config) {\n        if (!hasOwnProp(regexes, token)) {\n            return new RegExp(unescapeFormat(token));\n        }\n\n        return regexes[token](config._strict, config._locale);\n    }\n\n    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n    function unescapeFormat(s) {\n        return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n            return p1 || p2 || p3 || p4;\n        }));\n    }\n\n    function regexEscape(s) {\n        return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    }\n\n    var tokens = {};\n\n    function addParseToken (token, callback) {\n        var i, func = callback;\n        if (typeof token === 'string') {\n            token = [token];\n        }\n        if (isNumber(callback)) {\n            func = function (input, array) {\n                array[callback] = toInt(input);\n            };\n        }\n        for (i = 0; i < token.length; i++) {\n            tokens[token[i]] = func;\n        }\n    }\n\n    function addWeekParseToken (token, callback) {\n        addParseToken(token, function (input, array, config, token) {\n            config._w = config._w || {};\n            callback(input, config._w, config, token);\n        });\n    }\n\n    function addTimeToArrayFromToken(token, input, config) {\n        if (input != null && hasOwnProp(tokens, token)) {\n            tokens[token](input, config._a, config, token);\n        }\n    }\n\n    var YEAR = 0;\n    var MONTH = 1;\n    var DATE = 2;\n    var HOUR = 3;\n    var MINUTE = 4;\n    var SECOND = 5;\n    var MILLISECOND = 6;\n    var WEEK = 7;\n    var WEEKDAY = 8;\n\n    // FORMATTING\n\n    addFormatToken('Y', 0, 0, function () {\n        var y = this.year();\n        return y <= 9999 ? '' + y : '+' + y;\n    });\n\n    addFormatToken(0, ['YY', 2], 0, function () {\n        return this.year() % 100;\n    });\n\n    addFormatToken(0, ['YYYY',   4],       0, 'year');\n    addFormatToken(0, ['YYYYY',  5],       0, 'year');\n    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n    // ALIASES\n\n    addUnitAlias('year', 'y');\n\n    // PRIORITIES\n\n    addUnitPriority('year', 1);\n\n    // PARSING\n\n    addRegexToken('Y',      matchSigned);\n    addRegexToken('YY',     match1to2, match2);\n    addRegexToken('YYYY',   match1to4, match4);\n    addRegexToken('YYYYY',  match1to6, match6);\n    addRegexToken('YYYYYY', match1to6, match6);\n\n    addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n    addParseToken('YYYY', function (input, array) {\n        array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n    });\n    addParseToken('YY', function (input, array) {\n        array[YEAR] = hooks.parseTwoDigitYear(input);\n    });\n    addParseToken('Y', function (input, array) {\n        array[YEAR] = parseInt(input, 10);\n    });\n\n    // HELPERS\n\n    function daysInYear(year) {\n        return isLeapYear(year) ? 366 : 365;\n    }\n\n    function isLeapYear(year) {\n        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n    }\n\n    // HOOKS\n\n    hooks.parseTwoDigitYear = function (input) {\n        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n    };\n\n    // MOMENTS\n\n    var getSetYear = makeGetSet('FullYear', true);\n\n    function getIsLeapYear () {\n        return isLeapYear(this.year());\n    }\n\n    function makeGetSet (unit, keepTime) {\n        return function (value) {\n            if (value != null) {\n                set$1(this, unit, value);\n                hooks.updateOffset(this, keepTime);\n                return this;\n            } else {\n                return get(this, unit);\n            }\n        };\n    }\n\n    function get (mom, unit) {\n        return mom.isValid() ?\n            mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n    }\n\n    function set$1 (mom, unit, value) {\n        if (mom.isValid() && !isNaN(value)) {\n            if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n            }\n            else {\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function stringGet (units) {\n        units = normalizeUnits(units);\n        if (isFunction(this[units])) {\n            return this[units]();\n        }\n        return this;\n    }\n\n\n    function stringSet (units, value) {\n        if (typeof units === 'object') {\n            units = normalizeObjectUnits(units);\n            var prioritized = getPrioritizedUnits(units);\n            for (var i = 0; i < prioritized.length; i++) {\n                this[prioritized[i].unit](units[prioritized[i].unit]);\n            }\n        } else {\n            units = normalizeUnits(units);\n            if (isFunction(this[units])) {\n                return this[units](value);\n            }\n        }\n        return this;\n    }\n\n    function mod(n, x) {\n        return ((n % x) + x) % x;\n    }\n\n    var indexOf;\n\n    if (Array.prototype.indexOf) {\n        indexOf = Array.prototype.indexOf;\n    } else {\n        indexOf = function (o) {\n            // I know\n            var i;\n            for (i = 0; i < this.length; ++i) {\n                if (this[i] === o) {\n                    return i;\n                }\n            }\n            return -1;\n        };\n    }\n\n    function daysInMonth(year, month) {\n        if (isNaN(year) || isNaN(month)) {\n            return NaN;\n        }\n        var modMonth = mod(month, 12);\n        year += (month - modMonth) / 12;\n        return modMonth === 1 ? (isLeapYear(year) ? 29 : 28) : (31 - modMonth % 7 % 2);\n    }\n\n    // FORMATTING\n\n    addFormatToken('M', ['MM', 2], 'Mo', function () {\n        return this.month() + 1;\n    });\n\n    addFormatToken('MMM', 0, 0, function (format) {\n        return this.localeData().monthsShort(this, format);\n    });\n\n    addFormatToken('MMMM', 0, 0, function (format) {\n        return this.localeData().months(this, format);\n    });\n\n    // ALIASES\n\n    addUnitAlias('month', 'M');\n\n    // PRIORITY\n\n    addUnitPriority('month', 8);\n\n    // PARSING\n\n    addRegexToken('M',    match1to2);\n    addRegexToken('MM',   match1to2, match2);\n    addRegexToken('MMM',  function (isStrict, locale) {\n        return locale.monthsShortRegex(isStrict);\n    });\n    addRegexToken('MMMM', function (isStrict, locale) {\n        return locale.monthsRegex(isStrict);\n    });\n\n    addParseToken(['M', 'MM'], function (input, array) {\n        array[MONTH] = toInt(input) - 1;\n    });\n\n    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n        var month = config._locale.monthsParse(input, token, config._strict);\n        // if we didn't find a month name, mark the date as invalid.\n        if (month != null) {\n            array[MONTH] = month;\n        } else {\n            getParsingFlags(config).invalidMonth = input;\n        }\n    });\n\n    // LOCALES\n\n    var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n    function localeMonths (m, format) {\n        if (!m) {\n            return isArray(this._months) ? this._months :\n                this._months['standalone'];\n        }\n        return isArray(this._months) ? this._months[m.month()] :\n            this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n    }\n\n    var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n    function localeMonthsShort (m, format) {\n        if (!m) {\n            return isArray(this._monthsShort) ? this._monthsShort :\n                this._monthsShort['standalone'];\n        }\n        return isArray(this._monthsShort) ? this._monthsShort[m.month()] :\n            this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n    }\n\n    function handleStrictParse(monthName, format, strict) {\n        var i, ii, mom, llc = monthName.toLocaleLowerCase();\n        if (!this._monthsParse) {\n            // this is not used\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n            for (i = 0; i < 12; ++i) {\n                mom = createUTC([2000, i]);\n                this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeMonthsParse (monthName, format, strict) {\n        var i, mom, regex;\n\n        if (this._monthsParseExact) {\n            return handleStrictParse.call(this, monthName, format, strict);\n        }\n\n        if (!this._monthsParse) {\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n        }\n\n        // TODO: add sorting\n        // Sorting makes sure if one month (or abbr) is a prefix of another\n        // see sorting in computeMonthsParse\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            if (strict && !this._longMonthsParse[i]) {\n                this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n                this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n            }\n            if (!strict && !this._monthsParse[i]) {\n                regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n                return i;\n            } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n                return i;\n            } else if (!strict && this._monthsParse[i].test(monthName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function setMonth (mom, value) {\n        var dayOfMonth;\n\n        if (!mom.isValid()) {\n            // No op\n            return mom;\n        }\n\n        if (typeof value === 'string') {\n            if (/^\\d+$/.test(value)) {\n                value = toInt(value);\n            } else {\n                value = mom.localeData().monthsParse(value);\n                // TODO: Another silent failure?\n                if (!isNumber(value)) {\n                    return mom;\n                }\n            }\n        }\n\n        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n        return mom;\n    }\n\n    function getSetMonth (value) {\n        if (value != null) {\n            setMonth(this, value);\n            hooks.updateOffset(this, true);\n            return this;\n        } else {\n            return get(this, 'Month');\n        }\n    }\n\n    function getDaysInMonth () {\n        return daysInMonth(this.year(), this.month());\n    }\n\n    var defaultMonthsShortRegex = matchWord;\n    function monthsShortRegex (isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsShortStrictRegex;\n            } else {\n                return this._monthsShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsShortRegex')) {\n                this._monthsShortRegex = defaultMonthsShortRegex;\n            }\n            return this._monthsShortStrictRegex && isStrict ?\n                this._monthsShortStrictRegex : this._monthsShortRegex;\n        }\n    }\n\n    var defaultMonthsRegex = matchWord;\n    function monthsRegex (isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsStrictRegex;\n            } else {\n                return this._monthsRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                this._monthsRegex = defaultMonthsRegex;\n            }\n            return this._monthsStrictRegex && isStrict ?\n                this._monthsStrictRegex : this._monthsRegex;\n        }\n    }\n\n    function computeMonthsParse () {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var shortPieces = [], longPieces = [], mixedPieces = [],\n            i, mom;\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            shortPieces.push(this.monthsShort(mom, ''));\n            longPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.monthsShort(mom, ''));\n        }\n        // Sorting makes sure if one month (or abbr) is a prefix of another it\n        // will match the longer piece.\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 12; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n        }\n        for (i = 0; i < 24; i++) {\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n\n        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._monthsShortRegex = this._monthsRegex;\n        this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n        this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    }\n\n    function createDate (y, m, d, h, M, s, ms) {\n        // can't just apply() to create a date:\n        // https://stackoverflow.com/q/181348\n        var date;\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            date = new Date(y + 400, m, d, h, M, s, ms);\n            if (isFinite(date.getFullYear())) {\n                date.setFullYear(y);\n            }\n        } else {\n            date = new Date(y, m, d, h, M, s, ms);\n        }\n\n        return date;\n    }\n\n    function createUTCDate (y) {\n        var date;\n        // the Date.UTC function remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            var args = Array.prototype.slice.call(arguments);\n            // preserve leap years using a full 400 year cycle, then reset\n            args[0] = y + 400;\n            date = new Date(Date.UTC.apply(null, args));\n            if (isFinite(date.getUTCFullYear())) {\n                date.setUTCFullYear(y);\n            }\n        } else {\n            date = new Date(Date.UTC.apply(null, arguments));\n        }\n\n        return date;\n    }\n\n    // start-of-first-week - start-of-year\n    function firstWeekOffset(year, dow, doy) {\n        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n            fwd = 7 + dow - doy,\n            // first-week day local weekday -- which local weekday is fwd\n            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\n        return -fwdlw + fwd - 1;\n    }\n\n    // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n        var localWeekday = (7 + weekday - dow) % 7,\n            weekOffset = firstWeekOffset(year, dow, doy),\n            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n            resYear, resDayOfYear;\n\n        if (dayOfYear <= 0) {\n            resYear = year - 1;\n            resDayOfYear = daysInYear(resYear) + dayOfYear;\n        } else if (dayOfYear > daysInYear(year)) {\n            resYear = year + 1;\n            resDayOfYear = dayOfYear - daysInYear(year);\n        } else {\n            resYear = year;\n            resDayOfYear = dayOfYear;\n        }\n\n        return {\n            year: resYear,\n            dayOfYear: resDayOfYear\n        };\n    }\n\n    function weekOfYear(mom, dow, doy) {\n        var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n            resWeek, resYear;\n\n        if (week < 1) {\n            resYear = mom.year() - 1;\n            resWeek = week + weeksInYear(resYear, dow, doy);\n        } else if (week > weeksInYear(mom.year(), dow, doy)) {\n            resWeek = week - weeksInYear(mom.year(), dow, doy);\n            resYear = mom.year() + 1;\n        } else {\n            resYear = mom.year();\n            resWeek = week;\n        }\n\n        return {\n            week: resWeek,\n            year: resYear\n        };\n    }\n\n    function weeksInYear(year, dow, doy) {\n        var weekOffset = firstWeekOffset(year, dow, doy),\n            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n    }\n\n    // FORMATTING\n\n    addFormatToken('w', ['ww', 2], 'wo', 'week');\n    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n    // ALIASES\n\n    addUnitAlias('week', 'w');\n    addUnitAlias('isoWeek', 'W');\n\n    // PRIORITIES\n\n    addUnitPriority('week', 5);\n    addUnitPriority('isoWeek', 5);\n\n    // PARSING\n\n    addRegexToken('w',  match1to2);\n    addRegexToken('ww', match1to2, match2);\n    addRegexToken('W',  match1to2);\n    addRegexToken('WW', match1to2, match2);\n\n    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n        week[token.substr(0, 1)] = toInt(input);\n    });\n\n    // HELPERS\n\n    // LOCALES\n\n    function localeWeek (mom) {\n        return weekOfYear(mom, this._week.dow, this._week.doy).week;\n    }\n\n    var defaultLocaleWeek = {\n        dow : 0, // Sunday is the first day of the week.\n        doy : 6  // The week that contains Jan 6th is the first week of the year.\n    };\n\n    function localeFirstDayOfWeek () {\n        return this._week.dow;\n    }\n\n    function localeFirstDayOfYear () {\n        return this._week.doy;\n    }\n\n    // MOMENTS\n\n    function getSetWeek (input) {\n        var week = this.localeData().week(this);\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    function getSetISOWeek (input) {\n        var week = weekOfYear(this, 1, 4).week;\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('d', 0, 'do', 'day');\n\n    addFormatToken('dd', 0, 0, function (format) {\n        return this.localeData().weekdaysMin(this, format);\n    });\n\n    addFormatToken('ddd', 0, 0, function (format) {\n        return this.localeData().weekdaysShort(this, format);\n    });\n\n    addFormatToken('dddd', 0, 0, function (format) {\n        return this.localeData().weekdays(this, format);\n    });\n\n    addFormatToken('e', 0, 0, 'weekday');\n    addFormatToken('E', 0, 0, 'isoWeekday');\n\n    // ALIASES\n\n    addUnitAlias('day', 'd');\n    addUnitAlias('weekday', 'e');\n    addUnitAlias('isoWeekday', 'E');\n\n    // PRIORITY\n    addUnitPriority('day', 11);\n    addUnitPriority('weekday', 11);\n    addUnitPriority('isoWeekday', 11);\n\n    // PARSING\n\n    addRegexToken('d',    match1to2);\n    addRegexToken('e',    match1to2);\n    addRegexToken('E',    match1to2);\n    addRegexToken('dd',   function (isStrict, locale) {\n        return locale.weekdaysMinRegex(isStrict);\n    });\n    addRegexToken('ddd',   function (isStrict, locale) {\n        return locale.weekdaysShortRegex(isStrict);\n    });\n    addRegexToken('dddd',   function (isStrict, locale) {\n        return locale.weekdaysRegex(isStrict);\n    });\n\n    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n        var weekday = config._locale.weekdaysParse(input, token, config._strict);\n        // if we didn't get a weekday name, mark the date as invalid\n        if (weekday != null) {\n            week.d = weekday;\n        } else {\n            getParsingFlags(config).invalidWeekday = input;\n        }\n    });\n\n    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n        week[token] = toInt(input);\n    });\n\n    // HELPERS\n\n    function parseWeekday(input, locale) {\n        if (typeof input !== 'string') {\n            return input;\n        }\n\n        if (!isNaN(input)) {\n            return parseInt(input, 10);\n        }\n\n        input = locale.weekdaysParse(input);\n        if (typeof input === 'number') {\n            return input;\n        }\n\n        return null;\n    }\n\n    function parseIsoWeekday(input, locale) {\n        if (typeof input === 'string') {\n            return locale.weekdaysParse(input) % 7 || 7;\n        }\n        return isNaN(input) ? null : input;\n    }\n\n    // LOCALES\n    function shiftWeekdays (ws, n) {\n        return ws.slice(n, 7).concat(ws.slice(0, n));\n    }\n\n    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n    function localeWeekdays (m, format) {\n        var weekdays = isArray(this._weekdays) ? this._weekdays :\n            this._weekdays[(m && m !== true && this._weekdays.isFormat.test(format)) ? 'format' : 'standalone'];\n        return (m === true) ? shiftWeekdays(weekdays, this._week.dow)\n            : (m) ? weekdays[m.day()] : weekdays;\n    }\n\n    var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n    function localeWeekdaysShort (m) {\n        return (m === true) ? shiftWeekdays(this._weekdaysShort, this._week.dow)\n            : (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n    }\n\n    var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n    function localeWeekdaysMin (m) {\n        return (m === true) ? shiftWeekdays(this._weekdaysMin, this._week.dow)\n            : (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n    }\n\n    function handleStrictParse$1(weekdayName, format, strict) {\n        var i, ii, mom, llc = weekdayName.toLocaleLowerCase();\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._minWeekdaysParse = [];\n\n            for (i = 0; i < 7; ++i) {\n                mom = createUTC([2000, 1]).day(i);\n                this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n                this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeWeekdaysParse (weekdayName, format, strict) {\n        var i, mom, regex;\n\n        if (this._weekdaysParseExact) {\n            return handleStrictParse$1.call(this, weekdayName, format, strict);\n        }\n\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._minWeekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._fullWeekdaysParse = [];\n        }\n\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n\n            mom = createUTC([2000, 1]).day(i);\n            if (strict && !this._fullWeekdaysParse[i]) {\n                this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$', 'i');\n                this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$', 'i');\n                this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$', 'i');\n            }\n            if (!this._weekdaysParse[i]) {\n                regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function getSetDayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n        if (input != null) {\n            input = parseWeekday(input, this.localeData());\n            return this.add(input - day, 'd');\n        } else {\n            return day;\n        }\n    }\n\n    function getSetLocaleDayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n        return input == null ? weekday : this.add(input - weekday, 'd');\n    }\n\n    function getSetISODayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n\n        // behaves the same as moment#day except\n        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n        // as a setter, sunday should belong to the previous week.\n\n        if (input != null) {\n            var weekday = parseIsoWeekday(input, this.localeData());\n            return this.day(this.day() % 7 ? weekday : weekday - 7);\n        } else {\n            return this.day() || 7;\n        }\n    }\n\n    var defaultWeekdaysRegex = matchWord;\n    function weekdaysRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysStrictRegex;\n            } else {\n                return this._weekdaysRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                this._weekdaysRegex = defaultWeekdaysRegex;\n            }\n            return this._weekdaysStrictRegex && isStrict ?\n                this._weekdaysStrictRegex : this._weekdaysRegex;\n        }\n    }\n\n    var defaultWeekdaysShortRegex = matchWord;\n    function weekdaysShortRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysShortStrictRegex;\n            } else {\n                return this._weekdaysShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n                this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n            }\n            return this._weekdaysShortStrictRegex && isStrict ?\n                this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n        }\n    }\n\n    var defaultWeekdaysMinRegex = matchWord;\n    function weekdaysMinRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysMinStrictRegex;\n            } else {\n                return this._weekdaysMinRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n                this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n            }\n            return this._weekdaysMinStrictRegex && isStrict ?\n                this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n        }\n    }\n\n\n    function computeWeekdaysParse () {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],\n            i, mom, minp, shortp, longp;\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, 1]).day(i);\n            minp = this.weekdaysMin(mom, '');\n            shortp = this.weekdaysShort(mom, '');\n            longp = this.weekdays(mom, '');\n            minPieces.push(minp);\n            shortPieces.push(shortp);\n            longPieces.push(longp);\n            mixedPieces.push(minp);\n            mixedPieces.push(shortp);\n            mixedPieces.push(longp);\n        }\n        // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n        // will match the longer piece.\n        minPieces.sort(cmpLenRev);\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 7; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n\n        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._weekdaysShortRegex = this._weekdaysRegex;\n        this._weekdaysMinRegex = this._weekdaysRegex;\n\n        this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n        this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n        this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n    }\n\n    // FORMATTING\n\n    function hFormat() {\n        return this.hours() % 12 || 12;\n    }\n\n    function kFormat() {\n        return this.hours() || 24;\n    }\n\n    addFormatToken('H', ['HH', 2], 0, 'hour');\n    addFormatToken('h', ['hh', 2], 0, hFormat);\n    addFormatToken('k', ['kk', 2], 0, kFormat);\n\n    addFormatToken('hmm', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('hmmss', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2);\n    });\n\n    addFormatToken('Hmm', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('Hmmss', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2);\n    });\n\n    function meridiem (token, lowercase) {\n        addFormatToken(token, 0, 0, function () {\n            return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n        });\n    }\n\n    meridiem('a', true);\n    meridiem('A', false);\n\n    // ALIASES\n\n    addUnitAlias('hour', 'h');\n\n    // PRIORITY\n    addUnitPriority('hour', 13);\n\n    // PARSING\n\n    function matchMeridiem (isStrict, locale) {\n        return locale._meridiemParse;\n    }\n\n    addRegexToken('a',  matchMeridiem);\n    addRegexToken('A',  matchMeridiem);\n    addRegexToken('H',  match1to2);\n    addRegexToken('h',  match1to2);\n    addRegexToken('k',  match1to2);\n    addRegexToken('HH', match1to2, match2);\n    addRegexToken('hh', match1to2, match2);\n    addRegexToken('kk', match1to2, match2);\n\n    addRegexToken('hmm', match3to4);\n    addRegexToken('hmmss', match5to6);\n    addRegexToken('Hmm', match3to4);\n    addRegexToken('Hmmss', match5to6);\n\n    addParseToken(['H', 'HH'], HOUR);\n    addParseToken(['k', 'kk'], function (input, array, config) {\n        var kInput = toInt(input);\n        array[HOUR] = kInput === 24 ? 0 : kInput;\n    });\n    addParseToken(['a', 'A'], function (input, array, config) {\n        config._isPm = config._locale.isPM(input);\n        config._meridiem = input;\n    });\n    addParseToken(['h', 'hh'], function (input, array, config) {\n        array[HOUR] = toInt(input);\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmmss', function (input, array, config) {\n        var pos1 = input.length - 4;\n        var pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('Hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n    });\n    addParseToken('Hmmss', function (input, array, config) {\n        var pos1 = input.length - 4;\n        var pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n    });\n\n    // LOCALES\n\n    function localeIsPM (input) {\n        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n        // Using charAt should be more compatible.\n        return ((input + '').toLowerCase().charAt(0) === 'p');\n    }\n\n    var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n    function localeMeridiem (hours, minutes, isLower) {\n        if (hours > 11) {\n            return isLower ? 'pm' : 'PM';\n        } else {\n            return isLower ? 'am' : 'AM';\n        }\n    }\n\n\n    // MOMENTS\n\n    // Setting the hour should keep the time, because the user explicitly\n    // specified which hour they want. So trying to maintain the same hour (in\n    // a new timezone) makes sense. Adding/subtracting hours does not follow\n    // this rule.\n    var getSetHour = makeGetSet('Hours', true);\n\n    var baseConfig = {\n        calendar: defaultCalendar,\n        longDateFormat: defaultLongDateFormat,\n        invalidDate: defaultInvalidDate,\n        ordinal: defaultOrdinal,\n        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n        relativeTime: defaultRelativeTime,\n\n        months: defaultLocaleMonths,\n        monthsShort: defaultLocaleMonthsShort,\n\n        week: defaultLocaleWeek,\n\n        weekdays: defaultLocaleWeekdays,\n        weekdaysMin: defaultLocaleWeekdaysMin,\n        weekdaysShort: defaultLocaleWeekdaysShort,\n\n        meridiemParse: defaultLocaleMeridiemParse\n    };\n\n    // internal storage for locale config files\n    var locales = {};\n    var localeFamilies = {};\n    var globalLocale;\n\n    function normalizeLocale(key) {\n        return key ? key.toLowerCase().replace('_', '-') : key;\n    }\n\n    // pick the locale from the array\n    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n    function chooseLocale(names) {\n        var i = 0, j, next, locale, split;\n\n        while (i < names.length) {\n            split = normalizeLocale(names[i]).split('-');\n            j = split.length;\n            next = normalizeLocale(names[i + 1]);\n            next = next ? next.split('-') : null;\n            while (j > 0) {\n                locale = loadLocale(split.slice(0, j).join('-'));\n                if (locale) {\n                    return locale;\n                }\n                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n                    //the next array item is better than a shallower substring of this one\n                    break;\n                }\n                j--;\n            }\n            i++;\n        }\n        return globalLocale;\n    }\n\n    function loadLocale(name) {\n        var oldLocale = null;\n        // TODO: Find a better way to register and load all the locales in Node\n        if (!locales[name] && ('object' !== 'undefined') &&\n                module && module.exports) {\n            try {\n                oldLocale = globalLocale._abbr;\n                var aliasedRequire = commonjsRequire;\n                aliasedRequire('./locale/' + name);\n                getSetGlobalLocale(oldLocale);\n            } catch (e) {}\n        }\n        return locales[name];\n    }\n\n    // This function will load locale and then set the global locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    function getSetGlobalLocale (key, values) {\n        var data;\n        if (key) {\n            if (isUndefined(values)) {\n                data = getLocale(key);\n            }\n            else {\n                data = defineLocale(key, values);\n            }\n\n            if (data) {\n                // moment.duration._locale = moment._locale = data;\n                globalLocale = data;\n            }\n            else {\n                if ((typeof console !==  'undefined') && console.warn) {\n                    //warn user if arguments are passed but the locale could not be set\n                    console.warn('Locale ' + key +  ' not found. Did you forget to load it?');\n                }\n            }\n        }\n\n        return globalLocale._abbr;\n    }\n\n    function defineLocale (name, config) {\n        if (config !== null) {\n            var locale, parentConfig = baseConfig;\n            config.abbr = name;\n            if (locales[name] != null) {\n                deprecateSimple('defineLocaleOverride',\n                        'use moment.updateLocale(localeName, config) to change ' +\n                        'an existing locale. moment.defineLocale(localeName, ' +\n                        'config) should only be used for creating a new locale ' +\n                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n                parentConfig = locales[name]._config;\n            } else if (config.parentLocale != null) {\n                if (locales[config.parentLocale] != null) {\n                    parentConfig = locales[config.parentLocale]._config;\n                } else {\n                    locale = loadLocale(config.parentLocale);\n                    if (locale != null) {\n                        parentConfig = locale._config;\n                    } else {\n                        if (!localeFamilies[config.parentLocale]) {\n                            localeFamilies[config.parentLocale] = [];\n                        }\n                        localeFamilies[config.parentLocale].push({\n                            name: name,\n                            config: config\n                        });\n                        return null;\n                    }\n                }\n            }\n            locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n            if (localeFamilies[name]) {\n                localeFamilies[name].forEach(function (x) {\n                    defineLocale(x.name, x.config);\n                });\n            }\n\n            // backwards compat for now: also set the locale\n            // make sure we set the locale AFTER all child locales have been\n            // created, so we won't end up with the child locale set.\n            getSetGlobalLocale(name);\n\n\n            return locales[name];\n        } else {\n            // useful for testing\n            delete locales[name];\n            return null;\n        }\n    }\n\n    function updateLocale(name, config) {\n        if (config != null) {\n            var locale, tmpLocale, parentConfig = baseConfig;\n            // MERGE\n            tmpLocale = loadLocale(name);\n            if (tmpLocale != null) {\n                parentConfig = tmpLocale._config;\n            }\n            config = mergeConfigs(parentConfig, config);\n            locale = new Locale(config);\n            locale.parentLocale = locales[name];\n            locales[name] = locale;\n\n            // backwards compat for now: also set the locale\n            getSetGlobalLocale(name);\n        } else {\n            // pass null for config to unupdate, useful for tests\n            if (locales[name] != null) {\n                if (locales[name].parentLocale != null) {\n                    locales[name] = locales[name].parentLocale;\n                } else if (locales[name] != null) {\n                    delete locales[name];\n                }\n            }\n        }\n        return locales[name];\n    }\n\n    // returns locale data\n    function getLocale (key) {\n        var locale;\n\n        if (key && key._locale && key._locale._abbr) {\n            key = key._locale._abbr;\n        }\n\n        if (!key) {\n            return globalLocale;\n        }\n\n        if (!isArray(key)) {\n            //short-circuit everything else\n            locale = loadLocale(key);\n            if (locale) {\n                return locale;\n            }\n            key = [key];\n        }\n\n        return chooseLocale(key);\n    }\n\n    function listLocales() {\n        return keys(locales);\n    }\n\n    function checkOverflow (m) {\n        var overflow;\n        var a = m._a;\n\n        if (a && getParsingFlags(m).overflow === -2) {\n            overflow =\n                a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :\n                a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\n                a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\n                a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :\n                a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :\n                a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\n                -1;\n\n            if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n                overflow = DATE;\n            }\n            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n                overflow = WEEK;\n            }\n            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n                overflow = WEEKDAY;\n            }\n\n            getParsingFlags(m).overflow = overflow;\n        }\n\n        return m;\n    }\n\n    // Pick the first defined of two or three arguments.\n    function defaults(a, b, c) {\n        if (a != null) {\n            return a;\n        }\n        if (b != null) {\n            return b;\n        }\n        return c;\n    }\n\n    function currentDateArray(config) {\n        // hooks is actually the exported moment object\n        var nowValue = new Date(hooks.now());\n        if (config._useUTC) {\n            return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n        }\n        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n    }\n\n    // convert an array to a date.\n    // the array should mirror the parameters below\n    // note: all values past the year are optional and will default to the lowest possible value.\n    // [year, month, day , hour, minute, second, millisecond]\n    function configFromArray (config) {\n        var i, date, input = [], currentDate, expectedWeekday, yearToUse;\n\n        if (config._d) {\n            return;\n        }\n\n        currentDate = currentDateArray(config);\n\n        //compute day of the year from weeks and weekdays\n        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n            dayOfYearFromWeekInfo(config);\n        }\n\n        //if the day of the year is set, figure out what it is\n        if (config._dayOfYear != null) {\n            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n            if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n                getParsingFlags(config)._overflowDayOfYear = true;\n            }\n\n            date = createUTCDate(yearToUse, 0, config._dayOfYear);\n            config._a[MONTH] = date.getUTCMonth();\n            config._a[DATE] = date.getUTCDate();\n        }\n\n        // Default to current date.\n        // * if no year, month, day of month are given, default to today\n        // * if day of month is given, default month and year\n        // * if month is given, default only year\n        // * if year is given, don't default anything\n        for (i = 0; i < 3 && config._a[i] == null; ++i) {\n            config._a[i] = input[i] = currentDate[i];\n        }\n\n        // Zero out whatever was not defaulted, including time\n        for (; i < 7; i++) {\n            config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n        }\n\n        // Check for 24:00:00.000\n        if (config._a[HOUR] === 24 &&\n                config._a[MINUTE] === 0 &&\n                config._a[SECOND] === 0 &&\n                config._a[MILLISECOND] === 0) {\n            config._nextDay = true;\n            config._a[HOUR] = 0;\n        }\n\n        config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n        expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay();\n\n        // Apply timezone offset from input. The actual utcOffset can be changed\n        // with parseZone.\n        if (config._tzm != null) {\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n        }\n\n        if (config._nextDay) {\n            config._a[HOUR] = 24;\n        }\n\n        // check for mismatching day of week\n        if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n            getParsingFlags(config).weekdayMismatch = true;\n        }\n    }\n\n    function dayOfYearFromWeekInfo(config) {\n        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n\n        w = config._w;\n        if (w.GG != null || w.W != null || w.E != null) {\n            dow = 1;\n            doy = 4;\n\n            // TODO: We need to take the current isoWeekYear, but that depends on\n            // how we interpret now (local, utc, fixed offset). So create\n            // a now version of current config (take local/utc/offset flags, and\n            // create now).\n            weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n            week = defaults(w.W, 1);\n            weekday = defaults(w.E, 1);\n            if (weekday < 1 || weekday > 7) {\n                weekdayOverflow = true;\n            }\n        } else {\n            dow = config._locale._week.dow;\n            doy = config._locale._week.doy;\n\n            var curWeek = weekOfYear(createLocal(), dow, doy);\n\n            weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\n            // Default to current week.\n            week = defaults(w.w, curWeek.week);\n\n            if (w.d != null) {\n                // weekday -- low day numbers are considered next week\n                weekday = w.d;\n                if (weekday < 0 || weekday > 6) {\n                    weekdayOverflow = true;\n                }\n            } else if (w.e != null) {\n                // local weekday -- counting starts from beginning of week\n                weekday = w.e + dow;\n                if (w.e < 0 || w.e > 6) {\n                    weekdayOverflow = true;\n                }\n            } else {\n                // default to beginning of week\n                weekday = dow;\n            }\n        }\n        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n            getParsingFlags(config)._overflowWeeks = true;\n        } else if (weekdayOverflow != null) {\n            getParsingFlags(config)._overflowWeekday = true;\n        } else {\n            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n            config._a[YEAR] = temp.year;\n            config._dayOfYear = temp.dayOfYear;\n        }\n    }\n\n    // iso 8601 regex\n    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n    var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n    var basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n\n    var tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n\n    var isoDates = [\n        ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n        ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n        ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n        ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n        ['YYYY-DDD', /\\d{4}-\\d{3}/],\n        ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n        ['YYYYYYMMDD', /[+-]\\d{10}/],\n        ['YYYYMMDD', /\\d{8}/],\n        // YYYYMM is NOT allowed by the standard\n        ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n        ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n        ['YYYYDDD', /\\d{7}/]\n    ];\n\n    // iso time formats and regexes\n    var isoTimes = [\n        ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n        ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n        ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n        ['HH:mm', /\\d\\d:\\d\\d/],\n        ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n        ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n        ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n        ['HHmm', /\\d\\d\\d\\d/],\n        ['HH', /\\d\\d/]\n    ];\n\n    var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\n\n    // date from iso format\n    function configFromISO(config) {\n        var i, l,\n            string = config._i,\n            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n            allowTime, dateFormat, timeFormat, tzFormat;\n\n        if (match) {\n            getParsingFlags(config).iso = true;\n\n            for (i = 0, l = isoDates.length; i < l; i++) {\n                if (isoDates[i][1].exec(match[1])) {\n                    dateFormat = isoDates[i][0];\n                    allowTime = isoDates[i][2] !== false;\n                    break;\n                }\n            }\n            if (dateFormat == null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[3]) {\n                for (i = 0, l = isoTimes.length; i < l; i++) {\n                    if (isoTimes[i][1].exec(match[3])) {\n                        // match[2] should be 'T' or space\n                        timeFormat = (match[2] || ' ') + isoTimes[i][0];\n                        break;\n                    }\n                }\n                if (timeFormat == null) {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            if (!allowTime && timeFormat != null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[4]) {\n                if (tzRegex.exec(match[4])) {\n                    tzFormat = 'Z';\n                } else {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n            configFromStringAndFormat(config);\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n    var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\n    function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n        var result = [\n            untruncateYear(yearStr),\n            defaultLocaleMonthsShort.indexOf(monthStr),\n            parseInt(dayStr, 10),\n            parseInt(hourStr, 10),\n            parseInt(minuteStr, 10)\n        ];\n\n        if (secondStr) {\n            result.push(parseInt(secondStr, 10));\n        }\n\n        return result;\n    }\n\n    function untruncateYear(yearStr) {\n        var year = parseInt(yearStr, 10);\n        if (year <= 49) {\n            return 2000 + year;\n        } else if (year <= 999) {\n            return 1900 + year;\n        }\n        return year;\n    }\n\n    function preprocessRFC2822(s) {\n        // Remove comments and folding whitespace and replace multiple-spaces with a single space\n        return s.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n    }\n\n    function checkWeekday(weekdayStr, parsedInput, config) {\n        if (weekdayStr) {\n            // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n            var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n                weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n            if (weekdayProvided !== weekdayActual) {\n                getParsingFlags(config).weekdayMismatch = true;\n                config._isValid = false;\n                return false;\n            }\n        }\n        return true;\n    }\n\n    var obsOffsets = {\n        UT: 0,\n        GMT: 0,\n        EDT: -4 * 60,\n        EST: -5 * 60,\n        CDT: -5 * 60,\n        CST: -6 * 60,\n        MDT: -6 * 60,\n        MST: -7 * 60,\n        PDT: -7 * 60,\n        PST: -8 * 60\n    };\n\n    function calculateOffset(obsOffset, militaryOffset, numOffset) {\n        if (obsOffset) {\n            return obsOffsets[obsOffset];\n        } else if (militaryOffset) {\n            // the only allowed military tz is Z\n            return 0;\n        } else {\n            var hm = parseInt(numOffset, 10);\n            var m = hm % 100, h = (hm - m) / 100;\n            return h * 60 + m;\n        }\n    }\n\n    // date and time from ref 2822 format\n    function configFromRFC2822(config) {\n        var match = rfc2822.exec(preprocessRFC2822(config._i));\n        if (match) {\n            var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n            if (!checkWeekday(match[1], parsedArray, config)) {\n                return;\n            }\n\n            config._a = parsedArray;\n            config._tzm = calculateOffset(match[8], match[9], match[10]);\n\n            config._d = createUTCDate.apply(null, config._a);\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n            getParsingFlags(config).rfc2822 = true;\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // date from iso format or fallback\n    function configFromString(config) {\n        var matched = aspNetJsonRegex.exec(config._i);\n\n        if (matched !== null) {\n            config._d = new Date(+matched[1]);\n            return;\n        }\n\n        configFromISO(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        configFromRFC2822(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        // Final attempt, use Input Fallback\n        hooks.createFromInputFallback(config);\n    }\n\n    hooks.createFromInputFallback = deprecate(\n        'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n        'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n        'discouraged and will be removed in an upcoming major release. Please refer to ' +\n        'http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n        function (config) {\n            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n        }\n    );\n\n    // constant that refers to the ISO standard\n    hooks.ISO_8601 = function () {};\n\n    // constant that refers to the RFC 2822 form\n    hooks.RFC_2822 = function () {};\n\n    // date from string and format string\n    function configFromStringAndFormat(config) {\n        // TODO: Move this to another part of the creation flow to prevent circular deps\n        if (config._f === hooks.ISO_8601) {\n            configFromISO(config);\n            return;\n        }\n        if (config._f === hooks.RFC_2822) {\n            configFromRFC2822(config);\n            return;\n        }\n        config._a = [];\n        getParsingFlags(config).empty = true;\n\n        // This array is used to make a Date, either with `new Date` or `Date.UTC`\n        var string = '' + config._i,\n            i, parsedInput, tokens, token, skipped,\n            stringLength = string.length,\n            totalParsedInputLength = 0;\n\n        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n        for (i = 0; i < tokens.length; i++) {\n            token = tokens[i];\n            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n            // console.log('token', token, 'parsedInput', parsedInput,\n            //         'regex', getParseRegexForToken(token, config));\n            if (parsedInput) {\n                skipped = string.substr(0, string.indexOf(parsedInput));\n                if (skipped.length > 0) {\n                    getParsingFlags(config).unusedInput.push(skipped);\n                }\n                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n                totalParsedInputLength += parsedInput.length;\n            }\n            // don't parse if it's not a known token\n            if (formatTokenFunctions[token]) {\n                if (parsedInput) {\n                    getParsingFlags(config).empty = false;\n                }\n                else {\n                    getParsingFlags(config).unusedTokens.push(token);\n                }\n                addTimeToArrayFromToken(token, parsedInput, config);\n            }\n            else if (config._strict && !parsedInput) {\n                getParsingFlags(config).unusedTokens.push(token);\n            }\n        }\n\n        // add remaining unparsed input length to the string\n        getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n        if (string.length > 0) {\n            getParsingFlags(config).unusedInput.push(string);\n        }\n\n        // clear _12h flag if hour is <= 12\n        if (config._a[HOUR] <= 12 &&\n            getParsingFlags(config).bigHour === true &&\n            config._a[HOUR] > 0) {\n            getParsingFlags(config).bigHour = undefined;\n        }\n\n        getParsingFlags(config).parsedDateParts = config._a.slice(0);\n        getParsingFlags(config).meridiem = config._meridiem;\n        // handle meridiem\n        config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n\n        configFromArray(config);\n        checkOverflow(config);\n    }\n\n\n    function meridiemFixWrap (locale, hour, meridiem) {\n        var isPm;\n\n        if (meridiem == null) {\n            // nothing to do\n            return hour;\n        }\n        if (locale.meridiemHour != null) {\n            return locale.meridiemHour(hour, meridiem);\n        } else if (locale.isPM != null) {\n            // Fallback\n            isPm = locale.isPM(meridiem);\n            if (isPm && hour < 12) {\n                hour += 12;\n            }\n            if (!isPm && hour === 12) {\n                hour = 0;\n            }\n            return hour;\n        } else {\n            // this is not supposed to happen\n            return hour;\n        }\n    }\n\n    // date from string and array of format strings\n    function configFromStringAndArray(config) {\n        var tempConfig,\n            bestMoment,\n\n            scoreToBeat,\n            i,\n            currentScore;\n\n        if (config._f.length === 0) {\n            getParsingFlags(config).invalidFormat = true;\n            config._d = new Date(NaN);\n            return;\n        }\n\n        for (i = 0; i < config._f.length; i++) {\n            currentScore = 0;\n            tempConfig = copyConfig({}, config);\n            if (config._useUTC != null) {\n                tempConfig._useUTC = config._useUTC;\n            }\n            tempConfig._f = config._f[i];\n            configFromStringAndFormat(tempConfig);\n\n            if (!isValid(tempConfig)) {\n                continue;\n            }\n\n            // if there is any input that was not parsed add a penalty for that format\n            currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n            //or tokens\n            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n            getParsingFlags(tempConfig).score = currentScore;\n\n            if (scoreToBeat == null || currentScore < scoreToBeat) {\n                scoreToBeat = currentScore;\n                bestMoment = tempConfig;\n            }\n        }\n\n        extend(config, bestMoment || tempConfig);\n    }\n\n    function configFromObject(config) {\n        if (config._d) {\n            return;\n        }\n\n        var i = normalizeObjectUnits(config._i);\n        config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n            return obj && parseInt(obj, 10);\n        });\n\n        configFromArray(config);\n    }\n\n    function createFromConfig (config) {\n        var res = new Moment(checkOverflow(prepareConfig(config)));\n        if (res._nextDay) {\n            // Adding is smart enough around DST\n            res.add(1, 'd');\n            res._nextDay = undefined;\n        }\n\n        return res;\n    }\n\n    function prepareConfig (config) {\n        var input = config._i,\n            format = config._f;\n\n        config._locale = config._locale || getLocale(config._l);\n\n        if (input === null || (format === undefined && input === '')) {\n            return createInvalid({nullInput: true});\n        }\n\n        if (typeof input === 'string') {\n            config._i = input = config._locale.preparse(input);\n        }\n\n        if (isMoment(input)) {\n            return new Moment(checkOverflow(input));\n        } else if (isDate(input)) {\n            config._d = input;\n        } else if (isArray(format)) {\n            configFromStringAndArray(config);\n        } else if (format) {\n            configFromStringAndFormat(config);\n        }  else {\n            configFromInput(config);\n        }\n\n        if (!isValid(config)) {\n            config._d = null;\n        }\n\n        return config;\n    }\n\n    function configFromInput(config) {\n        var input = config._i;\n        if (isUndefined(input)) {\n            config._d = new Date(hooks.now());\n        } else if (isDate(input)) {\n            config._d = new Date(input.valueOf());\n        } else if (typeof input === 'string') {\n            configFromString(config);\n        } else if (isArray(input)) {\n            config._a = map(input.slice(0), function (obj) {\n                return parseInt(obj, 10);\n            });\n            configFromArray(config);\n        } else if (isObject(input)) {\n            configFromObject(config);\n        } else if (isNumber(input)) {\n            // from milliseconds\n            config._d = new Date(input);\n        } else {\n            hooks.createFromInputFallback(config);\n        }\n    }\n\n    function createLocalOrUTC (input, format, locale, strict, isUTC) {\n        var c = {};\n\n        if (locale === true || locale === false) {\n            strict = locale;\n            locale = undefined;\n        }\n\n        if ((isObject(input) && isObjectEmpty(input)) ||\n                (isArray(input) && input.length === 0)) {\n            input = undefined;\n        }\n        // object construction must be done this way.\n        // https://github.com/moment/moment/issues/1423\n        c._isAMomentObject = true;\n        c._useUTC = c._isUTC = isUTC;\n        c._l = locale;\n        c._i = input;\n        c._f = format;\n        c._strict = strict;\n\n        return createFromConfig(c);\n    }\n\n    function createLocal (input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, false);\n    }\n\n    var prototypeMin = deprecate(\n        'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\n        function () {\n            var other = createLocal.apply(null, arguments);\n            if (this.isValid() && other.isValid()) {\n                return other < this ? this : other;\n            } else {\n                return createInvalid();\n            }\n        }\n    );\n\n    var prototypeMax = deprecate(\n        'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\n        function () {\n            var other = createLocal.apply(null, arguments);\n            if (this.isValid() && other.isValid()) {\n                return other > this ? this : other;\n            } else {\n                return createInvalid();\n            }\n        }\n    );\n\n    // Pick a moment m from moments so that m[fn](other) is true for all\n    // other. This relies on the function fn to be transitive.\n    //\n    // moments should either be an array of moment objects or an array, whose\n    // first element is an array of moment objects.\n    function pickBy(fn, moments) {\n        var res, i;\n        if (moments.length === 1 && isArray(moments[0])) {\n            moments = moments[0];\n        }\n        if (!moments.length) {\n            return createLocal();\n        }\n        res = moments[0];\n        for (i = 1; i < moments.length; ++i) {\n            if (!moments[i].isValid() || moments[i][fn](res)) {\n                res = moments[i];\n            }\n        }\n        return res;\n    }\n\n    // TODO: Use [].sort instead?\n    function min () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isBefore', args);\n    }\n\n    function max () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isAfter', args);\n    }\n\n    var now = function () {\n        return Date.now ? Date.now() : +(new Date());\n    };\n\n    var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\n    function isDurationValid(m) {\n        for (var key in m) {\n            if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n                return false;\n            }\n        }\n\n        var unitHasDecimal = false;\n        for (var i = 0; i < ordering.length; ++i) {\n            if (m[ordering[i]]) {\n                if (unitHasDecimal) {\n                    return false; // only allow non-integers for smallest unit\n                }\n                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n                    unitHasDecimal = true;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    function isValid$1() {\n        return this._isValid;\n    }\n\n    function createInvalid$1() {\n        return createDuration(NaN);\n    }\n\n    function Duration (duration) {\n        var normalizedInput = normalizeObjectUnits(duration),\n            years = normalizedInput.year || 0,\n            quarters = normalizedInput.quarter || 0,\n            months = normalizedInput.month || 0,\n            weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n            days = normalizedInput.day || 0,\n            hours = normalizedInput.hour || 0,\n            minutes = normalizedInput.minute || 0,\n            seconds = normalizedInput.second || 0,\n            milliseconds = normalizedInput.millisecond || 0;\n\n        this._isValid = isDurationValid(normalizedInput);\n\n        // representation for dateAddRemove\n        this._milliseconds = +milliseconds +\n            seconds * 1e3 + // 1000\n            minutes * 6e4 + // 1000 * 60\n            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n        // Because of dateAddRemove treats 24 hours as different from a\n        // day when working around DST, we need to store them separately\n        this._days = +days +\n            weeks * 7;\n        // It is impossible to translate months into days without knowing\n        // which months you are are talking about, so we have to store\n        // it separately.\n        this._months = +months +\n            quarters * 3 +\n            years * 12;\n\n        this._data = {};\n\n        this._locale = getLocale();\n\n        this._bubble();\n    }\n\n    function isDuration (obj) {\n        return obj instanceof Duration;\n    }\n\n    function absRound (number) {\n        if (number < 0) {\n            return Math.round(-1 * number) * -1;\n        } else {\n            return Math.round(number);\n        }\n    }\n\n    // FORMATTING\n\n    function offset (token, separator) {\n        addFormatToken(token, 0, 0, function () {\n            var offset = this.utcOffset();\n            var sign = '+';\n            if (offset < 0) {\n                offset = -offset;\n                sign = '-';\n            }\n            return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\n        });\n    }\n\n    offset('Z', ':');\n    offset('ZZ', '');\n\n    // PARSING\n\n    addRegexToken('Z',  matchShortOffset);\n    addRegexToken('ZZ', matchShortOffset);\n    addParseToken(['Z', 'ZZ'], function (input, array, config) {\n        config._useUTC = true;\n        config._tzm = offsetFromString(matchShortOffset, input);\n    });\n\n    // HELPERS\n\n    // timezone chunker\n    // '+10:00' > ['10',  '00']\n    // '-1530'  > ['-15', '30']\n    var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n    function offsetFromString(matcher, string) {\n        var matches = (string || '').match(matcher);\n\n        if (matches === null) {\n            return null;\n        }\n\n        var chunk   = matches[matches.length - 1] || [];\n        var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n        var minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n        return minutes === 0 ?\n          0 :\n          parts[0] === '+' ? minutes : -minutes;\n    }\n\n    // Return a moment from input, that is local/utc/zone equivalent to model.\n    function cloneWithOffset(input, model) {\n        var res, diff;\n        if (model._isUTC) {\n            res = model.clone();\n            diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();\n            // Use low-level api, because this fn is low-level api.\n            res._d.setTime(res._d.valueOf() + diff);\n            hooks.updateOffset(res, false);\n            return res;\n        } else {\n            return createLocal(input).local();\n        }\n    }\n\n    function getDateOffset (m) {\n        // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n        // https://github.com/moment/moment/pull/1871\n        return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n    }\n\n    // HOOKS\n\n    // This function will be called whenever a moment is mutated.\n    // It is intended to keep the offset in sync with the timezone.\n    hooks.updateOffset = function () {};\n\n    // MOMENTS\n\n    // keepLocalTime = true means only change the timezone, without\n    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n    // +0200, so we adjust the time as needed, to be valid.\n    //\n    // Keeping the time actually adds/subtracts (one hour)\n    // from the actual represented time. That is why we call updateOffset\n    // a second time. In case it wants us to change the offset again\n    // _changeInProgress == true case, then we have to adjust, because\n    // there is no such time in the given timezone.\n    function getSetOffset (input, keepLocalTime, keepMinutes) {\n        var offset = this._offset || 0,\n            localAdjust;\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        if (input != null) {\n            if (typeof input === 'string') {\n                input = offsetFromString(matchShortOffset, input);\n                if (input === null) {\n                    return this;\n                }\n            } else if (Math.abs(input) < 16 && !keepMinutes) {\n                input = input * 60;\n            }\n            if (!this._isUTC && keepLocalTime) {\n                localAdjust = getDateOffset(this);\n            }\n            this._offset = input;\n            this._isUTC = true;\n            if (localAdjust != null) {\n                this.add(localAdjust, 'm');\n            }\n            if (offset !== input) {\n                if (!keepLocalTime || this._changeInProgress) {\n                    addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n                } else if (!this._changeInProgress) {\n                    this._changeInProgress = true;\n                    hooks.updateOffset(this, true);\n                    this._changeInProgress = null;\n                }\n            }\n            return this;\n        } else {\n            return this._isUTC ? offset : getDateOffset(this);\n        }\n    }\n\n    function getSetZone (input, keepLocalTime) {\n        if (input != null) {\n            if (typeof input !== 'string') {\n                input = -input;\n            }\n\n            this.utcOffset(input, keepLocalTime);\n\n            return this;\n        } else {\n            return -this.utcOffset();\n        }\n    }\n\n    function setOffsetToUTC (keepLocalTime) {\n        return this.utcOffset(0, keepLocalTime);\n    }\n\n    function setOffsetToLocal (keepLocalTime) {\n        if (this._isUTC) {\n            this.utcOffset(0, keepLocalTime);\n            this._isUTC = false;\n\n            if (keepLocalTime) {\n                this.subtract(getDateOffset(this), 'm');\n            }\n        }\n        return this;\n    }\n\n    function setOffsetToParsedOffset () {\n        if (this._tzm != null) {\n            this.utcOffset(this._tzm, false, true);\n        } else if (typeof this._i === 'string') {\n            var tZone = offsetFromString(matchOffset, this._i);\n            if (tZone != null) {\n                this.utcOffset(tZone);\n            }\n            else {\n                this.utcOffset(0, true);\n            }\n        }\n        return this;\n    }\n\n    function hasAlignedHourOffset (input) {\n        if (!this.isValid()) {\n            return false;\n        }\n        input = input ? createLocal(input).utcOffset() : 0;\n\n        return (this.utcOffset() - input) % 60 === 0;\n    }\n\n    function isDaylightSavingTime () {\n        return (\n            this.utcOffset() > this.clone().month(0).utcOffset() ||\n            this.utcOffset() > this.clone().month(5).utcOffset()\n        );\n    }\n\n    function isDaylightSavingTimeShifted () {\n        if (!isUndefined(this._isDSTShifted)) {\n            return this._isDSTShifted;\n        }\n\n        var c = {};\n\n        copyConfig(c, this);\n        c = prepareConfig(c);\n\n        if (c._a) {\n            var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n            this._isDSTShifted = this.isValid() &&\n                compareArrays(c._a, other.toArray()) > 0;\n        } else {\n            this._isDSTShifted = false;\n        }\n\n        return this._isDSTShifted;\n    }\n\n    function isLocal () {\n        return this.isValid() ? !this._isUTC : false;\n    }\n\n    function isUtcOffset () {\n        return this.isValid() ? this._isUTC : false;\n    }\n\n    function isUtc () {\n        return this.isValid() ? this._isUTC && this._offset === 0 : false;\n    }\n\n    // ASP.NET json date format regex\n    var aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/;\n\n    // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n    // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n    // and further modified to allow for strings containing both week and day\n    var isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n    function createDuration (input, key) {\n        var duration = input,\n            // matching against regexp is expensive, do it on demand\n            match = null,\n            sign,\n            ret,\n            diffRes;\n\n        if (isDuration(input)) {\n            duration = {\n                ms : input._milliseconds,\n                d  : input._days,\n                M  : input._months\n            };\n        } else if (isNumber(input)) {\n            duration = {};\n            if (key) {\n                duration[key] = input;\n            } else {\n                duration.milliseconds = input;\n            }\n        } else if (!!(match = aspNetRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : 1;\n            duration = {\n                y  : 0,\n                d  : toInt(match[DATE])                         * sign,\n                h  : toInt(match[HOUR])                         * sign,\n                m  : toInt(match[MINUTE])                       * sign,\n                s  : toInt(match[SECOND])                       * sign,\n                ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n            };\n        } else if (!!(match = isoRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : 1;\n            duration = {\n                y : parseIso(match[2], sign),\n                M : parseIso(match[3], sign),\n                w : parseIso(match[4], sign),\n                d : parseIso(match[5], sign),\n                h : parseIso(match[6], sign),\n                m : parseIso(match[7], sign),\n                s : parseIso(match[8], sign)\n            };\n        } else if (duration == null) {// checks for null or undefined\n            duration = {};\n        } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n            diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n\n            duration = {};\n            duration.ms = diffRes.milliseconds;\n            duration.M = diffRes.months;\n        }\n\n        ret = new Duration(duration);\n\n        if (isDuration(input) && hasOwnProp(input, '_locale')) {\n            ret._locale = input._locale;\n        }\n\n        return ret;\n    }\n\n    createDuration.fn = Duration.prototype;\n    createDuration.invalid = createInvalid$1;\n\n    function parseIso (inp, sign) {\n        // We'd normally use ~~inp for this, but unfortunately it also\n        // converts floats to ints.\n        // inp may be undefined, so careful calling replace on it.\n        var res = inp && parseFloat(inp.replace(',', '.'));\n        // apply sign while we're at it\n        return (isNaN(res) ? 0 : res) * sign;\n    }\n\n    function positiveMomentsDifference(base, other) {\n        var res = {};\n\n        res.months = other.month() - base.month() +\n            (other.year() - base.year()) * 12;\n        if (base.clone().add(res.months, 'M').isAfter(other)) {\n            --res.months;\n        }\n\n        res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\n\n        return res;\n    }\n\n    function momentsDifference(base, other) {\n        var res;\n        if (!(base.isValid() && other.isValid())) {\n            return {milliseconds: 0, months: 0};\n        }\n\n        other = cloneWithOffset(other, base);\n        if (base.isBefore(other)) {\n            res = positiveMomentsDifference(base, other);\n        } else {\n            res = positiveMomentsDifference(other, base);\n            res.milliseconds = -res.milliseconds;\n            res.months = -res.months;\n        }\n\n        return res;\n    }\n\n    // TODO: remove 'name' arg after deprecation is removed\n    function createAdder(direction, name) {\n        return function (val, period) {\n            var dur, tmp;\n            //invert the arguments, but complain about it\n            if (period !== null && !isNaN(+period)) {\n                deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +\n                'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n                tmp = val; val = period; period = tmp;\n            }\n\n            val = typeof val === 'string' ? +val : val;\n            dur = createDuration(val, period);\n            addSubtract(this, dur, direction);\n            return this;\n        };\n    }\n\n    function addSubtract (mom, duration, isAdding, updateOffset) {\n        var milliseconds = duration._milliseconds,\n            days = absRound(duration._days),\n            months = absRound(duration._months);\n\n        if (!mom.isValid()) {\n            // No op\n            return;\n        }\n\n        updateOffset = updateOffset == null ? true : updateOffset;\n\n        if (months) {\n            setMonth(mom, get(mom, 'Month') + months * isAdding);\n        }\n        if (days) {\n            set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n        }\n        if (milliseconds) {\n            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n        }\n        if (updateOffset) {\n            hooks.updateOffset(mom, days || months);\n        }\n    }\n\n    var add      = createAdder(1, 'add');\n    var subtract = createAdder(-1, 'subtract');\n\n    function getCalendarFormat(myMoment, now) {\n        var diff = myMoment.diff(now, 'days', true);\n        return diff < -6 ? 'sameElse' :\n                diff < -1 ? 'lastWeek' :\n                diff < 0 ? 'lastDay' :\n                diff < 1 ? 'sameDay' :\n                diff < 2 ? 'nextDay' :\n                diff < 7 ? 'nextWeek' : 'sameElse';\n    }\n\n    function calendar$1 (time, formats) {\n        // We want to compare the start of today, vs this.\n        // Getting start-of-today depends on whether we're local/utc/offset or not.\n        var now = time || createLocal(),\n            sod = cloneWithOffset(now, this).startOf('day'),\n            format = hooks.calendarFormat(this, sod) || 'sameElse';\n\n        var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n\n        return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n    }\n\n    function clone () {\n        return new Moment(this);\n    }\n\n    function isAfter (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() > localInput.valueOf();\n        } else {\n            return localInput.valueOf() < this.clone().startOf(units).valueOf();\n        }\n    }\n\n    function isBefore (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() < localInput.valueOf();\n        } else {\n            return this.clone().endOf(units).valueOf() < localInput.valueOf();\n        }\n    }\n\n    function isBetween (from, to, units, inclusivity) {\n        var localFrom = isMoment(from) ? from : createLocal(from),\n            localTo = isMoment(to) ? to : createLocal(to);\n        if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n            return false;\n        }\n        inclusivity = inclusivity || '()';\n        return (inclusivity[0] === '(' ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) &&\n            (inclusivity[1] === ')' ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));\n    }\n\n    function isSame (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input),\n            inputMs;\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() === localInput.valueOf();\n        } else {\n            inputMs = localInput.valueOf();\n            return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n        }\n    }\n\n    function isSameOrAfter (input, units) {\n        return this.isSame(input, units) || this.isAfter(input, units);\n    }\n\n    function isSameOrBefore (input, units) {\n        return this.isSame(input, units) || this.isBefore(input, units);\n    }\n\n    function diff (input, units, asFloat) {\n        var that,\n            zoneDelta,\n            output;\n\n        if (!this.isValid()) {\n            return NaN;\n        }\n\n        that = cloneWithOffset(input, this);\n\n        if (!that.isValid()) {\n            return NaN;\n        }\n\n        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\n        units = normalizeUnits(units);\n\n        switch (units) {\n            case 'year': output = monthDiff(this, that) / 12; break;\n            case 'month': output = monthDiff(this, that); break;\n            case 'quarter': output = monthDiff(this, that) / 3; break;\n            case 'second': output = (this - that) / 1e3; break; // 1000\n            case 'minute': output = (this - that) / 6e4; break; // 1000 * 60\n            case 'hour': output = (this - that) / 36e5; break; // 1000 * 60 * 60\n            case 'day': output = (this - that - zoneDelta) / 864e5; break; // 1000 * 60 * 60 * 24, negate dst\n            case 'week': output = (this - that - zoneDelta) / 6048e5; break; // 1000 * 60 * 60 * 24 * 7, negate dst\n            default: output = this - that;\n        }\n\n        return asFloat ? output : absFloor(output);\n    }\n\n    function monthDiff (a, b) {\n        // difference in months\n        var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),\n            // b is in (anchor - 1 month, anchor + 1 month)\n            anchor = a.clone().add(wholeMonthDiff, 'months'),\n            anchor2, adjust;\n\n        if (b - anchor < 0) {\n            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor - anchor2);\n        } else {\n            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor2 - anchor);\n        }\n\n        //check for negative zero, return zero if negative zero\n        return -(wholeMonthDiff + adjust) || 0;\n    }\n\n    hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n    hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n    function toString () {\n        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n    }\n\n    function toISOString(keepOffset) {\n        if (!this.isValid()) {\n            return null;\n        }\n        var utc = keepOffset !== true;\n        var m = utc ? this.clone().utc() : this;\n        if (m.year() < 0 || m.year() > 9999) {\n            return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n        }\n        if (isFunction(Date.prototype.toISOString)) {\n            // native implementation is ~50x faster, use it when we can\n            if (utc) {\n                return this.toDate().toISOString();\n            } else {\n                return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));\n            }\n        }\n        return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n\n    /**\n     * Return a human readable representation of a moment that can\n     * also be evaluated to get a new moment which is the same\n     *\n     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n     */\n    function inspect () {\n        if (!this.isValid()) {\n            return 'moment.invalid(/* ' + this._i + ' */)';\n        }\n        var func = 'moment';\n        var zone = '';\n        if (!this.isLocal()) {\n            func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n            zone = 'Z';\n        }\n        var prefix = '[' + func + '(\"]';\n        var year = (0 <= this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';\n        var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n        var suffix = zone + '[\")]';\n\n        return this.format(prefix + year + datetime + suffix);\n    }\n\n    function format (inputString) {\n        if (!inputString) {\n            inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n        }\n        var output = formatMoment(this, inputString);\n        return this.localeData().postformat(output);\n    }\n\n    function from (time, withoutSuffix) {\n        if (this.isValid() &&\n                ((isMoment(time) && time.isValid()) ||\n                 createLocal(time).isValid())) {\n            return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function fromNow (withoutSuffix) {\n        return this.from(createLocal(), withoutSuffix);\n    }\n\n    function to (time, withoutSuffix) {\n        if (this.isValid() &&\n                ((isMoment(time) && time.isValid()) ||\n                 createLocal(time).isValid())) {\n            return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function toNow (withoutSuffix) {\n        return this.to(createLocal(), withoutSuffix);\n    }\n\n    // If passed a locale key, it will set the locale for this\n    // instance.  Otherwise, it will return the locale configuration\n    // variables for this instance.\n    function locale (key) {\n        var newLocaleData;\n\n        if (key === undefined) {\n            return this._locale._abbr;\n        } else {\n            newLocaleData = getLocale(key);\n            if (newLocaleData != null) {\n                this._locale = newLocaleData;\n            }\n            return this;\n        }\n    }\n\n    var lang = deprecate(\n        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n        function (key) {\n            if (key === undefined) {\n                return this.localeData();\n            } else {\n                return this.locale(key);\n            }\n        }\n    );\n\n    function localeData () {\n        return this._locale;\n    }\n\n    var MS_PER_SECOND = 1000;\n    var MS_PER_MINUTE = 60 * MS_PER_SECOND;\n    var MS_PER_HOUR = 60 * MS_PER_MINUTE;\n    var MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR;\n\n    // actual modulo - handles negative numbers (for dates before 1970):\n    function mod$1(dividend, divisor) {\n        return (dividend % divisor + divisor) % divisor;\n    }\n\n    function localStartOfDate(y, m, d) {\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n        } else {\n            return new Date(y, m, d).valueOf();\n        }\n    }\n\n    function utcStartOfDate(y, m, d) {\n        // Date.UTC remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n        } else {\n            return Date.UTC(y, m, d);\n        }\n    }\n\n    function startOf (units) {\n        var time;\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond' || !this.isValid()) {\n            return this;\n        }\n\n        var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n        switch (units) {\n            case 'year':\n                time = startOfDate(this.year(), 0, 1);\n                break;\n            case 'quarter':\n                time = startOfDate(this.year(), this.month() - this.month() % 3, 1);\n                break;\n            case 'month':\n                time = startOfDate(this.year(), this.month(), 1);\n                break;\n            case 'week':\n                time = startOfDate(this.year(), this.month(), this.date() - this.weekday());\n                break;\n            case 'isoWeek':\n                time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));\n                break;\n            case 'day':\n            case 'date':\n                time = startOfDate(this.year(), this.month(), this.date());\n                break;\n            case 'hour':\n                time = this._d.valueOf();\n                time -= mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR);\n                break;\n            case 'minute':\n                time = this._d.valueOf();\n                time -= mod$1(time, MS_PER_MINUTE);\n                break;\n            case 'second':\n                time = this._d.valueOf();\n                time -= mod$1(time, MS_PER_SECOND);\n                break;\n        }\n\n        this._d.setTime(time);\n        hooks.updateOffset(this, true);\n        return this;\n    }\n\n    function endOf (units) {\n        var time;\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond' || !this.isValid()) {\n            return this;\n        }\n\n        var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n        switch (units) {\n            case 'year':\n                time = startOfDate(this.year() + 1, 0, 1) - 1;\n                break;\n            case 'quarter':\n                time = startOfDate(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;\n                break;\n            case 'month':\n                time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n                break;\n            case 'week':\n                time = startOfDate(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;\n                break;\n            case 'isoWeek':\n                time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;\n                break;\n            case 'day':\n            case 'date':\n                time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n                break;\n            case 'hour':\n                time = this._d.valueOf();\n                time += MS_PER_HOUR - mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR) - 1;\n                break;\n            case 'minute':\n                time = this._d.valueOf();\n                time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n                break;\n            case 'second':\n                time = this._d.valueOf();\n                time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n                break;\n        }\n\n        this._d.setTime(time);\n        hooks.updateOffset(this, true);\n        return this;\n    }\n\n    function valueOf () {\n        return this._d.valueOf() - ((this._offset || 0) * 60000);\n    }\n\n    function unix () {\n        return Math.floor(this.valueOf() / 1000);\n    }\n\n    function toDate () {\n        return new Date(this.valueOf());\n    }\n\n    function toArray () {\n        var m = this;\n        return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n    }\n\n    function toObject () {\n        var m = this;\n        return {\n            years: m.year(),\n            months: m.month(),\n            date: m.date(),\n            hours: m.hours(),\n            minutes: m.minutes(),\n            seconds: m.seconds(),\n            milliseconds: m.milliseconds()\n        };\n    }\n\n    function toJSON () {\n        // new Date(NaN).toJSON() === null\n        return this.isValid() ? this.toISOString() : null;\n    }\n\n    function isValid$2 () {\n        return isValid(this);\n    }\n\n    function parsingFlags () {\n        return extend({}, getParsingFlags(this));\n    }\n\n    function invalidAt () {\n        return getParsingFlags(this).overflow;\n    }\n\n    function creationData() {\n        return {\n            input: this._i,\n            format: this._f,\n            locale: this._locale,\n            isUTC: this._isUTC,\n            strict: this._strict\n        };\n    }\n\n    // FORMATTING\n\n    addFormatToken(0, ['gg', 2], 0, function () {\n        return this.weekYear() % 100;\n    });\n\n    addFormatToken(0, ['GG', 2], 0, function () {\n        return this.isoWeekYear() % 100;\n    });\n\n    function addWeekYearFormatToken (token, getter) {\n        addFormatToken(0, [token, token.length], 0, getter);\n    }\n\n    addWeekYearFormatToken('gggg',     'weekYear');\n    addWeekYearFormatToken('ggggg',    'weekYear');\n    addWeekYearFormatToken('GGGG',  'isoWeekYear');\n    addWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n    // ALIASES\n\n    addUnitAlias('weekYear', 'gg');\n    addUnitAlias('isoWeekYear', 'GG');\n\n    // PRIORITY\n\n    addUnitPriority('weekYear', 1);\n    addUnitPriority('isoWeekYear', 1);\n\n\n    // PARSING\n\n    addRegexToken('G',      matchSigned);\n    addRegexToken('g',      matchSigned);\n    addRegexToken('GG',     match1to2, match2);\n    addRegexToken('gg',     match1to2, match2);\n    addRegexToken('GGGG',   match1to4, match4);\n    addRegexToken('gggg',   match1to4, match4);\n    addRegexToken('GGGGG',  match1to6, match6);\n    addRegexToken('ggggg',  match1to6, match6);\n\n    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n        week[token.substr(0, 2)] = toInt(input);\n    });\n\n    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n        week[token] = hooks.parseTwoDigitYear(input);\n    });\n\n    // MOMENTS\n\n    function getSetWeekYear (input) {\n        return getSetWeekYearHelper.call(this,\n                input,\n                this.week(),\n                this.weekday(),\n                this.localeData()._week.dow,\n                this.localeData()._week.doy);\n    }\n\n    function getSetISOWeekYear (input) {\n        return getSetWeekYearHelper.call(this,\n                input, this.isoWeek(), this.isoWeekday(), 1, 4);\n    }\n\n    function getISOWeeksInYear () {\n        return weeksInYear(this.year(), 1, 4);\n    }\n\n    function getWeeksInYear () {\n        var weekInfo = this.localeData()._week;\n        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n    }\n\n    function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n        var weeksTarget;\n        if (input == null) {\n            return weekOfYear(this, dow, doy).year;\n        } else {\n            weeksTarget = weeksInYear(input, dow, doy);\n            if (week > weeksTarget) {\n                week = weeksTarget;\n            }\n            return setWeekAll.call(this, input, week, weekday, dow, doy);\n        }\n    }\n\n    function setWeekAll(weekYear, week, weekday, dow, doy) {\n        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\n        this.year(date.getUTCFullYear());\n        this.month(date.getUTCMonth());\n        this.date(date.getUTCDate());\n        return this;\n    }\n\n    // FORMATTING\n\n    addFormatToken('Q', 0, 'Qo', 'quarter');\n\n    // ALIASES\n\n    addUnitAlias('quarter', 'Q');\n\n    // PRIORITY\n\n    addUnitPriority('quarter', 7);\n\n    // PARSING\n\n    addRegexToken('Q', match1);\n    addParseToken('Q', function (input, array) {\n        array[MONTH] = (toInt(input) - 1) * 3;\n    });\n\n    // MOMENTS\n\n    function getSetQuarter (input) {\n        return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n    }\n\n    // FORMATTING\n\n    addFormatToken('D', ['DD', 2], 'Do', 'date');\n\n    // ALIASES\n\n    addUnitAlias('date', 'D');\n\n    // PRIORITY\n    addUnitPriority('date', 9);\n\n    // PARSING\n\n    addRegexToken('D',  match1to2);\n    addRegexToken('DD', match1to2, match2);\n    addRegexToken('Do', function (isStrict, locale) {\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        return isStrict ?\n          (locale._dayOfMonthOrdinalParse || locale._ordinalParse) :\n          locale._dayOfMonthOrdinalParseLenient;\n    });\n\n    addParseToken(['D', 'DD'], DATE);\n    addParseToken('Do', function (input, array) {\n        array[DATE] = toInt(input.match(match1to2)[0]);\n    });\n\n    // MOMENTS\n\n    var getSetDayOfMonth = makeGetSet('Date', true);\n\n    // FORMATTING\n\n    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n    // ALIASES\n\n    addUnitAlias('dayOfYear', 'DDD');\n\n    // PRIORITY\n    addUnitPriority('dayOfYear', 4);\n\n    // PARSING\n\n    addRegexToken('DDD',  match1to3);\n    addRegexToken('DDDD', match3);\n    addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n        config._dayOfYear = toInt(input);\n    });\n\n    // HELPERS\n\n    // MOMENTS\n\n    function getSetDayOfYear (input) {\n        var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n        return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('m', ['mm', 2], 0, 'minute');\n\n    // ALIASES\n\n    addUnitAlias('minute', 'm');\n\n    // PRIORITY\n\n    addUnitPriority('minute', 14);\n\n    // PARSING\n\n    addRegexToken('m',  match1to2);\n    addRegexToken('mm', match1to2, match2);\n    addParseToken(['m', 'mm'], MINUTE);\n\n    // MOMENTS\n\n    var getSetMinute = makeGetSet('Minutes', false);\n\n    // FORMATTING\n\n    addFormatToken('s', ['ss', 2], 0, 'second');\n\n    // ALIASES\n\n    addUnitAlias('second', 's');\n\n    // PRIORITY\n\n    addUnitPriority('second', 15);\n\n    // PARSING\n\n    addRegexToken('s',  match1to2);\n    addRegexToken('ss', match1to2, match2);\n    addParseToken(['s', 'ss'], SECOND);\n\n    // MOMENTS\n\n    var getSetSecond = makeGetSet('Seconds', false);\n\n    // FORMATTING\n\n    addFormatToken('S', 0, 0, function () {\n        return ~~(this.millisecond() / 100);\n    });\n\n    addFormatToken(0, ['SS', 2], 0, function () {\n        return ~~(this.millisecond() / 10);\n    });\n\n    addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n    addFormatToken(0, ['SSSS', 4], 0, function () {\n        return this.millisecond() * 10;\n    });\n    addFormatToken(0, ['SSSSS', 5], 0, function () {\n        return this.millisecond() * 100;\n    });\n    addFormatToken(0, ['SSSSSS', 6], 0, function () {\n        return this.millisecond() * 1000;\n    });\n    addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n        return this.millisecond() * 10000;\n    });\n    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n        return this.millisecond() * 100000;\n    });\n    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n        return this.millisecond() * 1000000;\n    });\n\n\n    // ALIASES\n\n    addUnitAlias('millisecond', 'ms');\n\n    // PRIORITY\n\n    addUnitPriority('millisecond', 16);\n\n    // PARSING\n\n    addRegexToken('S',    match1to3, match1);\n    addRegexToken('SS',   match1to3, match2);\n    addRegexToken('SSS',  match1to3, match3);\n\n    var token;\n    for (token = 'SSSS'; token.length <= 9; token += 'S') {\n        addRegexToken(token, matchUnsigned);\n    }\n\n    function parseMs(input, array) {\n        array[MILLISECOND] = toInt(('0.' + input) * 1000);\n    }\n\n    for (token = 'S'; token.length <= 9; token += 'S') {\n        addParseToken(token, parseMs);\n    }\n    // MOMENTS\n\n    var getSetMillisecond = makeGetSet('Milliseconds', false);\n\n    // FORMATTING\n\n    addFormatToken('z',  0, 0, 'zoneAbbr');\n    addFormatToken('zz', 0, 0, 'zoneName');\n\n    // MOMENTS\n\n    function getZoneAbbr () {\n        return this._isUTC ? 'UTC' : '';\n    }\n\n    function getZoneName () {\n        return this._isUTC ? 'Coordinated Universal Time' : '';\n    }\n\n    var proto = Moment.prototype;\n\n    proto.add               = add;\n    proto.calendar          = calendar$1;\n    proto.clone             = clone;\n    proto.diff              = diff;\n    proto.endOf             = endOf;\n    proto.format            = format;\n    proto.from              = from;\n    proto.fromNow           = fromNow;\n    proto.to                = to;\n    proto.toNow             = toNow;\n    proto.get               = stringGet;\n    proto.invalidAt         = invalidAt;\n    proto.isAfter           = isAfter;\n    proto.isBefore          = isBefore;\n    proto.isBetween         = isBetween;\n    proto.isSame            = isSame;\n    proto.isSameOrAfter     = isSameOrAfter;\n    proto.isSameOrBefore    = isSameOrBefore;\n    proto.isValid           = isValid$2;\n    proto.lang              = lang;\n    proto.locale            = locale;\n    proto.localeData        = localeData;\n    proto.max               = prototypeMax;\n    proto.min               = prototypeMin;\n    proto.parsingFlags      = parsingFlags;\n    proto.set               = stringSet;\n    proto.startOf           = startOf;\n    proto.subtract          = subtract;\n    proto.toArray           = toArray;\n    proto.toObject          = toObject;\n    proto.toDate            = toDate;\n    proto.toISOString       = toISOString;\n    proto.inspect           = inspect;\n    proto.toJSON            = toJSON;\n    proto.toString          = toString;\n    proto.unix              = unix;\n    proto.valueOf           = valueOf;\n    proto.creationData      = creationData;\n    proto.year       = getSetYear;\n    proto.isLeapYear = getIsLeapYear;\n    proto.weekYear    = getSetWeekYear;\n    proto.isoWeekYear = getSetISOWeekYear;\n    proto.quarter = proto.quarters = getSetQuarter;\n    proto.month       = getSetMonth;\n    proto.daysInMonth = getDaysInMonth;\n    proto.week           = proto.weeks        = getSetWeek;\n    proto.isoWeek        = proto.isoWeeks     = getSetISOWeek;\n    proto.weeksInYear    = getWeeksInYear;\n    proto.isoWeeksInYear = getISOWeeksInYear;\n    proto.date       = getSetDayOfMonth;\n    proto.day        = proto.days             = getSetDayOfWeek;\n    proto.weekday    = getSetLocaleDayOfWeek;\n    proto.isoWeekday = getSetISODayOfWeek;\n    proto.dayOfYear  = getSetDayOfYear;\n    proto.hour = proto.hours = getSetHour;\n    proto.minute = proto.minutes = getSetMinute;\n    proto.second = proto.seconds = getSetSecond;\n    proto.millisecond = proto.milliseconds = getSetMillisecond;\n    proto.utcOffset            = getSetOffset;\n    proto.utc                  = setOffsetToUTC;\n    proto.local                = setOffsetToLocal;\n    proto.parseZone            = setOffsetToParsedOffset;\n    proto.hasAlignedHourOffset = hasAlignedHourOffset;\n    proto.isDST                = isDaylightSavingTime;\n    proto.isLocal              = isLocal;\n    proto.isUtcOffset          = isUtcOffset;\n    proto.isUtc                = isUtc;\n    proto.isUTC                = isUtc;\n    proto.zoneAbbr = getZoneAbbr;\n    proto.zoneName = getZoneName;\n    proto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n    proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n    proto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n    proto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n    proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\n    function createUnix (input) {\n        return createLocal(input * 1000);\n    }\n\n    function createInZone () {\n        return createLocal.apply(null, arguments).parseZone();\n    }\n\n    function preParsePostFormat (string) {\n        return string;\n    }\n\n    var proto$1 = Locale.prototype;\n\n    proto$1.calendar        = calendar;\n    proto$1.longDateFormat  = longDateFormat;\n    proto$1.invalidDate     = invalidDate;\n    proto$1.ordinal         = ordinal;\n    proto$1.preparse        = preParsePostFormat;\n    proto$1.postformat      = preParsePostFormat;\n    proto$1.relativeTime    = relativeTime;\n    proto$1.pastFuture      = pastFuture;\n    proto$1.set             = set;\n\n    proto$1.months            =        localeMonths;\n    proto$1.monthsShort       =        localeMonthsShort;\n    proto$1.monthsParse       =        localeMonthsParse;\n    proto$1.monthsRegex       = monthsRegex;\n    proto$1.monthsShortRegex  = monthsShortRegex;\n    proto$1.week = localeWeek;\n    proto$1.firstDayOfYear = localeFirstDayOfYear;\n    proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n\n    proto$1.weekdays       =        localeWeekdays;\n    proto$1.weekdaysMin    =        localeWeekdaysMin;\n    proto$1.weekdaysShort  =        localeWeekdaysShort;\n    proto$1.weekdaysParse  =        localeWeekdaysParse;\n\n    proto$1.weekdaysRegex       =        weekdaysRegex;\n    proto$1.weekdaysShortRegex  =        weekdaysShortRegex;\n    proto$1.weekdaysMinRegex    =        weekdaysMinRegex;\n\n    proto$1.isPM = localeIsPM;\n    proto$1.meridiem = localeMeridiem;\n\n    function get$1 (format, index, field, setter) {\n        var locale = getLocale();\n        var utc = createUTC().set(setter, index);\n        return locale[field](utc, format);\n    }\n\n    function listMonthsImpl (format, index, field) {\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n\n        if (index != null) {\n            return get$1(format, index, field, 'month');\n        }\n\n        var i;\n        var out = [];\n        for (i = 0; i < 12; i++) {\n            out[i] = get$1(format, i, field, 'month');\n        }\n        return out;\n    }\n\n    // ()\n    // (5)\n    // (fmt, 5)\n    // (fmt)\n    // (true)\n    // (true, 5)\n    // (true, fmt, 5)\n    // (true, fmt)\n    function listWeekdaysImpl (localeSorted, format, index, field) {\n        if (typeof localeSorted === 'boolean') {\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        } else {\n            format = localeSorted;\n            index = format;\n            localeSorted = false;\n\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        }\n\n        var locale = getLocale(),\n            shift = localeSorted ? locale._week.dow : 0;\n\n        if (index != null) {\n            return get$1(format, (index + shift) % 7, field, 'day');\n        }\n\n        var i;\n        var out = [];\n        for (i = 0; i < 7; i++) {\n            out[i] = get$1(format, (i + shift) % 7, field, 'day');\n        }\n        return out;\n    }\n\n    function listMonths (format, index) {\n        return listMonthsImpl(format, index, 'months');\n    }\n\n    function listMonthsShort (format, index) {\n        return listMonthsImpl(format, index, 'monthsShort');\n    }\n\n    function listWeekdays (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n    }\n\n    function listWeekdaysShort (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n    }\n\n    function listWeekdaysMin (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n    }\n\n    getSetGlobalLocale('en', {\n        dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (toInt(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        }\n    });\n\n    // Side effect imports\n\n    hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n    hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n\n    var mathAbs = Math.abs;\n\n    function abs () {\n        var data           = this._data;\n\n        this._milliseconds = mathAbs(this._milliseconds);\n        this._days         = mathAbs(this._days);\n        this._months       = mathAbs(this._months);\n\n        data.milliseconds  = mathAbs(data.milliseconds);\n        data.seconds       = mathAbs(data.seconds);\n        data.minutes       = mathAbs(data.minutes);\n        data.hours         = mathAbs(data.hours);\n        data.months        = mathAbs(data.months);\n        data.years         = mathAbs(data.years);\n\n        return this;\n    }\n\n    function addSubtract$1 (duration, input, value, direction) {\n        var other = createDuration(input, value);\n\n        duration._milliseconds += direction * other._milliseconds;\n        duration._days         += direction * other._days;\n        duration._months       += direction * other._months;\n\n        return duration._bubble();\n    }\n\n    // supports only 2.0-style add(1, 's') or add(duration)\n    function add$1 (input, value) {\n        return addSubtract$1(this, input, value, 1);\n    }\n\n    // supports only 2.0-style subtract(1, 's') or subtract(duration)\n    function subtract$1 (input, value) {\n        return addSubtract$1(this, input, value, -1);\n    }\n\n    function absCeil (number) {\n        if (number < 0) {\n            return Math.floor(number);\n        } else {\n            return Math.ceil(number);\n        }\n    }\n\n    function bubble () {\n        var milliseconds = this._milliseconds;\n        var days         = this._days;\n        var months       = this._months;\n        var data         = this._data;\n        var seconds, minutes, hours, years, monthsFromDays;\n\n        // if we have a mix of positive and negative values, bubble down first\n        // check: https://github.com/moment/moment/issues/2166\n        if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||\n                (milliseconds <= 0 && days <= 0 && months <= 0))) {\n            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n            days = 0;\n            months = 0;\n        }\n\n        // The following code bubbles up values, see the tests for\n        // examples of what that means.\n        data.milliseconds = milliseconds % 1000;\n\n        seconds           = absFloor(milliseconds / 1000);\n        data.seconds      = seconds % 60;\n\n        minutes           = absFloor(seconds / 60);\n        data.minutes      = minutes % 60;\n\n        hours             = absFloor(minutes / 60);\n        data.hours        = hours % 24;\n\n        days += absFloor(hours / 24);\n\n        // convert days to months\n        monthsFromDays = absFloor(daysToMonths(days));\n        months += monthsFromDays;\n        days -= absCeil(monthsToDays(monthsFromDays));\n\n        // 12 months -> 1 year\n        years = absFloor(months / 12);\n        months %= 12;\n\n        data.days   = days;\n        data.months = months;\n        data.years  = years;\n\n        return this;\n    }\n\n    function daysToMonths (days) {\n        // 400 years have 146097 days (taking into account leap year rules)\n        // 400 years have 12 months === 4800\n        return days * 4800 / 146097;\n    }\n\n    function monthsToDays (months) {\n        // the reverse of daysToMonths\n        return months * 146097 / 4800;\n    }\n\n    function as (units) {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        var days;\n        var months;\n        var milliseconds = this._milliseconds;\n\n        units = normalizeUnits(units);\n\n        if (units === 'month' || units === 'quarter' || units === 'year') {\n            days = this._days + milliseconds / 864e5;\n            months = this._months + daysToMonths(days);\n            switch (units) {\n                case 'month':   return months;\n                case 'quarter': return months / 3;\n                case 'year':    return months / 12;\n            }\n        } else {\n            // handle milliseconds separately because of floating point math errors (issue #1867)\n            days = this._days + Math.round(monthsToDays(this._months));\n            switch (units) {\n                case 'week'   : return days / 7     + milliseconds / 6048e5;\n                case 'day'    : return days         + milliseconds / 864e5;\n                case 'hour'   : return days * 24    + milliseconds / 36e5;\n                case 'minute' : return days * 1440  + milliseconds / 6e4;\n                case 'second' : return days * 86400 + milliseconds / 1000;\n                // Math.floor prevents floating point math errors here\n                case 'millisecond': return Math.floor(days * 864e5) + milliseconds;\n                default: throw new Error('Unknown unit ' + units);\n            }\n        }\n    }\n\n    // TODO: Use this.as('ms')?\n    function valueOf$1 () {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        return (\n            this._milliseconds +\n            this._days * 864e5 +\n            (this._months % 12) * 2592e6 +\n            toInt(this._months / 12) * 31536e6\n        );\n    }\n\n    function makeAs (alias) {\n        return function () {\n            return this.as(alias);\n        };\n    }\n\n    var asMilliseconds = makeAs('ms');\n    var asSeconds      = makeAs('s');\n    var asMinutes      = makeAs('m');\n    var asHours        = makeAs('h');\n    var asDays         = makeAs('d');\n    var asWeeks        = makeAs('w');\n    var asMonths       = makeAs('M');\n    var asQuarters     = makeAs('Q');\n    var asYears        = makeAs('y');\n\n    function clone$1 () {\n        return createDuration(this);\n    }\n\n    function get$2 (units) {\n        units = normalizeUnits(units);\n        return this.isValid() ? this[units + 's']() : NaN;\n    }\n\n    function makeGetter(name) {\n        return function () {\n            return this.isValid() ? this._data[name] : NaN;\n        };\n    }\n\n    var milliseconds = makeGetter('milliseconds');\n    var seconds      = makeGetter('seconds');\n    var minutes      = makeGetter('minutes');\n    var hours        = makeGetter('hours');\n    var days         = makeGetter('days');\n    var months       = makeGetter('months');\n    var years        = makeGetter('years');\n\n    function weeks () {\n        return absFloor(this.days() / 7);\n    }\n\n    var round = Math.round;\n    var thresholds = {\n        ss: 44,         // a few seconds to seconds\n        s : 45,         // seconds to minute\n        m : 45,         // minutes to hour\n        h : 22,         // hours to day\n        d : 26,         // days to month\n        M : 11          // months to year\n    };\n\n    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n    }\n\n    function relativeTime$1 (posNegDuration, withoutSuffix, locale) {\n        var duration = createDuration(posNegDuration).abs();\n        var seconds  = round(duration.as('s'));\n        var minutes  = round(duration.as('m'));\n        var hours    = round(duration.as('h'));\n        var days     = round(duration.as('d'));\n        var months   = round(duration.as('M'));\n        var years    = round(duration.as('y'));\n\n        var a = seconds <= thresholds.ss && ['s', seconds]  ||\n                seconds < thresholds.s   && ['ss', seconds] ||\n                minutes <= 1             && ['m']           ||\n                minutes < thresholds.m   && ['mm', minutes] ||\n                hours   <= 1             && ['h']           ||\n                hours   < thresholds.h   && ['hh', hours]   ||\n                days    <= 1             && ['d']           ||\n                days    < thresholds.d   && ['dd', days]    ||\n                months  <= 1             && ['M']           ||\n                months  < thresholds.M   && ['MM', months]  ||\n                years   <= 1             && ['y']           || ['yy', years];\n\n        a[2] = withoutSuffix;\n        a[3] = +posNegDuration > 0;\n        a[4] = locale;\n        return substituteTimeAgo.apply(null, a);\n    }\n\n    // This function allows you to set the rounding function for relative time strings\n    function getSetRelativeTimeRounding (roundingFunction) {\n        if (roundingFunction === undefined) {\n            return round;\n        }\n        if (typeof(roundingFunction) === 'function') {\n            round = roundingFunction;\n            return true;\n        }\n        return false;\n    }\n\n    // This function allows you to set a threshold for relative time strings\n    function getSetRelativeTimeThreshold (threshold, limit) {\n        if (thresholds[threshold] === undefined) {\n            return false;\n        }\n        if (limit === undefined) {\n            return thresholds[threshold];\n        }\n        thresholds[threshold] = limit;\n        if (threshold === 's') {\n            thresholds.ss = limit - 1;\n        }\n        return true;\n    }\n\n    function humanize (withSuffix) {\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var locale = this.localeData();\n        var output = relativeTime$1(this, !withSuffix, locale);\n\n        if (withSuffix) {\n            output = locale.pastFuture(+this, output);\n        }\n\n        return locale.postformat(output);\n    }\n\n    var abs$1 = Math.abs;\n\n    function sign(x) {\n        return ((x > 0) - (x < 0)) || +x;\n    }\n\n    function toISOString$1() {\n        // for ISO strings we do not use the normal bubbling rules:\n        //  * milliseconds bubble up until they become hours\n        //  * days do not bubble at all\n        //  * months bubble up until they become years\n        // This is because there is no context-free conversion between hours and days\n        // (think of clock changes)\n        // and also not between days and months (28-31 days per month)\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var seconds = abs$1(this._milliseconds) / 1000;\n        var days         = abs$1(this._days);\n        var months       = abs$1(this._months);\n        var minutes, hours, years;\n\n        // 3600 seconds -> 60 minutes -> 1 hour\n        minutes           = absFloor(seconds / 60);\n        hours             = absFloor(minutes / 60);\n        seconds %= 60;\n        minutes %= 60;\n\n        // 12 months -> 1 year\n        years  = absFloor(months / 12);\n        months %= 12;\n\n\n        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n        var Y = years;\n        var M = months;\n        var D = days;\n        var h = hours;\n        var m = minutes;\n        var s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n        var total = this.asSeconds();\n\n        if (!total) {\n            // this is the same as C#'s (Noda) and python (isodate)...\n            // but not other JS (goog.date)\n            return 'P0D';\n        }\n\n        var totalSign = total < 0 ? '-' : '';\n        var ymSign = sign(this._months) !== sign(total) ? '-' : '';\n        var daysSign = sign(this._days) !== sign(total) ? '-' : '';\n        var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n\n        return totalSign + 'P' +\n            (Y ? ymSign + Y + 'Y' : '') +\n            (M ? ymSign + M + 'M' : '') +\n            (D ? daysSign + D + 'D' : '') +\n            ((h || m || s) ? 'T' : '') +\n            (h ? hmsSign + h + 'H' : '') +\n            (m ? hmsSign + m + 'M' : '') +\n            (s ? hmsSign + s + 'S' : '');\n    }\n\n    var proto$2 = Duration.prototype;\n\n    proto$2.isValid        = isValid$1;\n    proto$2.abs            = abs;\n    proto$2.add            = add$1;\n    proto$2.subtract       = subtract$1;\n    proto$2.as             = as;\n    proto$2.asMilliseconds = asMilliseconds;\n    proto$2.asSeconds      = asSeconds;\n    proto$2.asMinutes      = asMinutes;\n    proto$2.asHours        = asHours;\n    proto$2.asDays         = asDays;\n    proto$2.asWeeks        = asWeeks;\n    proto$2.asMonths       = asMonths;\n    proto$2.asQuarters     = asQuarters;\n    proto$2.asYears        = asYears;\n    proto$2.valueOf        = valueOf$1;\n    proto$2._bubble        = bubble;\n    proto$2.clone          = clone$1;\n    proto$2.get            = get$2;\n    proto$2.milliseconds   = milliseconds;\n    proto$2.seconds        = seconds;\n    proto$2.minutes        = minutes;\n    proto$2.hours          = hours;\n    proto$2.days           = days;\n    proto$2.weeks          = weeks;\n    proto$2.months         = months;\n    proto$2.years          = years;\n    proto$2.humanize       = humanize;\n    proto$2.toISOString    = toISOString$1;\n    proto$2.toString       = toISOString$1;\n    proto$2.toJSON         = toISOString$1;\n    proto$2.locale         = locale;\n    proto$2.localeData     = localeData;\n\n    proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n    proto$2.lang = lang;\n\n    // Side effect imports\n\n    // FORMATTING\n\n    addFormatToken('X', 0, 0, 'unix');\n    addFormatToken('x', 0, 0, 'valueOf');\n\n    // PARSING\n\n    addRegexToken('x', matchSigned);\n    addRegexToken('X', matchTimestamp);\n    addParseToken('X', function (input, array, config) {\n        config._d = new Date(parseFloat(input, 10) * 1000);\n    });\n    addParseToken('x', function (input, array, config) {\n        config._d = new Date(toInt(input));\n    });\n\n    // Side effect imports\n\n\n    hooks.version = '2.24.0';\n\n    setHookCallback(createLocal);\n\n    hooks.fn                    = proto;\n    hooks.min                   = min;\n    hooks.max                   = max;\n    hooks.now                   = now;\n    hooks.utc                   = createUTC;\n    hooks.unix                  = createUnix;\n    hooks.months                = listMonths;\n    hooks.isDate                = isDate;\n    hooks.locale                = getSetGlobalLocale;\n    hooks.invalid               = createInvalid;\n    hooks.duration              = createDuration;\n    hooks.isMoment              = isMoment;\n    hooks.weekdays              = listWeekdays;\n    hooks.parseZone             = createInZone;\n    hooks.localeData            = getLocale;\n    hooks.isDuration            = isDuration;\n    hooks.monthsShort           = listMonthsShort;\n    hooks.weekdaysMin           = listWeekdaysMin;\n    hooks.defineLocale          = defineLocale;\n    hooks.updateLocale          = updateLocale;\n    hooks.locales               = listLocales;\n    hooks.weekdaysShort         = listWeekdaysShort;\n    hooks.normalizeUnits        = normalizeUnits;\n    hooks.relativeTimeRounding  = getSetRelativeTimeRounding;\n    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n    hooks.calendarFormat        = getCalendarFormat;\n    hooks.prototype             = proto;\n\n    // currently HTML5 input type only supports 24-hour formats\n    hooks.HTML5_FMT = {\n        DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',             // <input type=\"datetime-local\" />\n        DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',  // <input type=\"datetime-local\" step=\"1\" />\n        DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',   // <input type=\"datetime-local\" step=\"0.001\" />\n        DATE: 'YYYY-MM-DD',                             // <input type=\"date\" />\n        TIME: 'HH:mm',                                  // <input type=\"time\" />\n        TIME_SECONDS: 'HH:mm:ss',                       // <input type=\"time\" step=\"1\" />\n        TIME_MS: 'HH:mm:ss.SSS',                        // <input type=\"time\" step=\"0.001\" />\n        WEEK: 'GGGG-[W]WW',                             // <input type=\"week\" />\n        MONTH: 'YYYY-MM'                                // <input type=\"month\" />\n    };\n\n    return hooks;\n\n})));\n});\n\nvar FORMATS = {\n\tdatetime: 'MMM D, YYYY, h:mm:ss a',\n\tmillisecond: 'h:mm:ss.SSS a',\n\tsecond: 'h:mm:ss a',\n\tminute: 'h:mm a',\n\thour: 'hA',\n\tday: 'MMM D',\n\tweek: 'll',\n\tmonth: 'MMM YYYY',\n\tquarter: '[Q]Q - YYYY',\n\tyear: 'YYYY'\n};\n\ncore_adapters._date.override(typeof moment === 'function' ? {\n\t_id: 'moment', // DEBUG ONLY\n\n\tformats: function() {\n\t\treturn FORMATS;\n\t},\n\n\tparse: function(value, format) {\n\t\tif (typeof value === 'string' && typeof format === 'string') {\n\t\t\tvalue = moment(value, format);\n\t\t} else if (!(value instanceof moment)) {\n\t\t\tvalue = moment(value);\n\t\t}\n\t\treturn value.isValid() ? value.valueOf() : null;\n\t},\n\n\tformat: function(time, format) {\n\t\treturn moment(time).format(format);\n\t},\n\n\tadd: function(time, amount, unit) {\n\t\treturn moment(time).add(amount, unit).valueOf();\n\t},\n\n\tdiff: function(max, min, unit) {\n\t\treturn moment.duration(moment(max).diff(moment(min))).as(unit);\n\t},\n\n\tstartOf: function(time, unit, weekday) {\n\t\ttime = moment(time);\n\t\tif (unit === 'isoWeek') {\n\t\t\treturn time.isoWeekday(weekday).valueOf();\n\t\t}\n\t\treturn time.startOf(unit).valueOf();\n\t},\n\n\tendOf: function(time, unit) {\n\t\treturn moment(time).endOf(unit).valueOf();\n\t},\n\n\t// DEPRECATIONS\n\n\t/**\n\t * Provided for backward compatibility with scale.getValueForPixel().\n\t * @deprecated since version 2.8.0\n\t * @todo remove at version 3\n\t * @private\n\t */\n\t_create: function(time) {\n\t\treturn moment(time);\n\t},\n} : {});\n\ncore_defaults._set('global', {\n\tplugins: {\n\t\tfiller: {\n\t\t\tpropagate: true\n\t\t}\n\t}\n});\n\nvar mappers = {\n\tdataset: function(source) {\n\t\tvar index = source.fill;\n\t\tvar chart = source.chart;\n\t\tvar meta = chart.getDatasetMeta(index);\n\t\tvar visible = meta && chart.isDatasetVisible(index);\n\t\tvar points = (visible && meta.dataset._children) || [];\n\t\tvar length = points.length || 0;\n\n\t\treturn !length ? null : function(point, i) {\n\t\t\treturn (i < length && points[i]._view) || null;\n\t\t};\n\t},\n\n\tboundary: function(source) {\n\t\tvar boundary = source.boundary;\n\t\tvar x = boundary ? boundary.x : null;\n\t\tvar y = boundary ? boundary.y : null;\n\n\t\treturn function(point) {\n\t\t\treturn {\n\t\t\t\tx: x === null ? point.x : x,\n\t\t\t\ty: y === null ? point.y : y,\n\t\t\t};\n\t\t};\n\t}\n};\n\n// @todo if (fill[0] === '#')\nfunction decodeFill(el, index, count) {\n\tvar model = el._model || {};\n\tvar fill = model.fill;\n\tvar target;\n\n\tif (fill === undefined) {\n\t\tfill = !!model.backgroundColor;\n\t}\n\n\tif (fill === false || fill === null) {\n\t\treturn false;\n\t}\n\n\tif (fill === true) {\n\t\treturn 'origin';\n\t}\n\n\ttarget = parseFloat(fill, 10);\n\tif (isFinite(target) && Math.floor(target) === target) {\n\t\tif (fill[0] === '-' || fill[0] === '+') {\n\t\t\ttarget = index + target;\n\t\t}\n\n\t\tif (target === index || target < 0 || target >= count) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn target;\n\t}\n\n\tswitch (fill) {\n\t// compatibility\n\tcase 'bottom':\n\t\treturn 'start';\n\tcase 'top':\n\t\treturn 'end';\n\tcase 'zero':\n\t\treturn 'origin';\n\t// supported boundaries\n\tcase 'origin':\n\tcase 'start':\n\tcase 'end':\n\t\treturn fill;\n\t// invalid fill values\n\tdefault:\n\t\treturn false;\n\t}\n}\n\nfunction computeBoundary(source) {\n\tvar model = source.el._model || {};\n\tvar scale = source.el._scale || {};\n\tvar fill = source.fill;\n\tvar target = null;\n\tvar horizontal;\n\n\tif (isFinite(fill)) {\n\t\treturn null;\n\t}\n\n\t// Backward compatibility: until v3, we still need to support boundary values set on\n\t// the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n\t// controllers might still use it (e.g. the Smith chart).\n\n\tif (fill === 'start') {\n\t\ttarget = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n\t} else if (fill === 'end') {\n\t\ttarget = model.scaleTop === undefined ? scale.top : model.scaleTop;\n\t} else if (model.scaleZero !== undefined) {\n\t\ttarget = model.scaleZero;\n\t} else if (scale.getBasePosition) {\n\t\ttarget = scale.getBasePosition();\n\t} else if (scale.getBasePixel) {\n\t\ttarget = scale.getBasePixel();\n\t}\n\n\tif (target !== undefined && target !== null) {\n\t\tif (target.x !== undefined && target.y !== undefined) {\n\t\t\treturn target;\n\t\t}\n\n\t\tif (helpers$1.isFinite(target)) {\n\t\t\thorizontal = scale.isHorizontal();\n\t\t\treturn {\n\t\t\t\tx: horizontal ? target : null,\n\t\t\t\ty: horizontal ? null : target\n\t\t\t};\n\t\t}\n\t}\n\n\treturn null;\n}\n\nfunction resolveTarget(sources, index, propagate) {\n\tvar source = sources[index];\n\tvar fill = source.fill;\n\tvar visited = [index];\n\tvar target;\n\n\tif (!propagate) {\n\t\treturn fill;\n\t}\n\n\twhile (fill !== false && visited.indexOf(fill) === -1) {\n\t\tif (!isFinite(fill)) {\n\t\t\treturn fill;\n\t\t}\n\n\t\ttarget = sources[fill];\n\t\tif (!target) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (target.visible) {\n\t\t\treturn fill;\n\t\t}\n\n\t\tvisited.push(fill);\n\t\tfill = target.fill;\n\t}\n\n\treturn false;\n}\n\nfunction createMapper(source) {\n\tvar fill = source.fill;\n\tvar type = 'dataset';\n\n\tif (fill === false) {\n\t\treturn null;\n\t}\n\n\tif (!isFinite(fill)) {\n\t\ttype = 'boundary';\n\t}\n\n\treturn mappers[type](source);\n}\n\nfunction isDrawable(point) {\n\treturn point && !point.skip;\n}\n\nfunction drawArea(ctx, curve0, curve1, len0, len1) {\n\tvar i;\n\n\tif (!len0 || !len1) {\n\t\treturn;\n\t}\n\n\t// building first area curve (normal)\n\tctx.moveTo(curve0[0].x, curve0[0].y);\n\tfor (i = 1; i < len0; ++i) {\n\t\thelpers$1.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n\t}\n\n\t// joining the two area curves\n\tctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y);\n\n\t// building opposite area curve (reverse)\n\tfor (i = len1 - 1; i > 0; --i) {\n\t\thelpers$1.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n\t}\n}\n\nfunction doFill(ctx, points, mapper, view, color, loop) {\n\tvar count = points.length;\n\tvar span = view.spanGaps;\n\tvar curve0 = [];\n\tvar curve1 = [];\n\tvar len0 = 0;\n\tvar len1 = 0;\n\tvar i, ilen, index, p0, p1, d0, d1;\n\n\tctx.beginPath();\n\n\tfor (i = 0, ilen = (count + !!loop); i < ilen; ++i) {\n\t\tindex = i % count;\n\t\tp0 = points[index]._view;\n\t\tp1 = mapper(p0, index, view);\n\t\td0 = isDrawable(p0);\n\t\td1 = isDrawable(p1);\n\n\t\tif (d0 && d1) {\n\t\t\tlen0 = curve0.push(p0);\n\t\t\tlen1 = curve1.push(p1);\n\t\t} else if (len0 && len1) {\n\t\t\tif (!span) {\n\t\t\t\tdrawArea(ctx, curve0, curve1, len0, len1);\n\t\t\t\tlen0 = len1 = 0;\n\t\t\t\tcurve0 = [];\n\t\t\t\tcurve1 = [];\n\t\t\t} else {\n\t\t\t\tif (d0) {\n\t\t\t\t\tcurve0.push(p0);\n\t\t\t\t}\n\t\t\t\tif (d1) {\n\t\t\t\t\tcurve1.push(p1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdrawArea(ctx, curve0, curve1, len0, len1);\n\n\tctx.closePath();\n\tctx.fillStyle = color;\n\tctx.fill();\n}\n\nvar plugin_filler = {\n\tid: 'filler',\n\n\tafterDatasetsUpdate: function(chart, options) {\n\t\tvar count = (chart.data.datasets || []).length;\n\t\tvar propagate = options.propagate;\n\t\tvar sources = [];\n\t\tvar meta, i, el, source;\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\tel = meta.dataset;\n\t\t\tsource = null;\n\n\t\t\tif (el && el._model && el instanceof elements.Line) {\n\t\t\t\tsource = {\n\t\t\t\t\tvisible: chart.isDatasetVisible(i),\n\t\t\t\t\tfill: decodeFill(el, i, count),\n\t\t\t\t\tchart: chart,\n\t\t\t\t\tel: el\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tmeta.$filler = source;\n\t\t\tsources.push(source);\n\t\t}\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\tsource = sources[i];\n\t\t\tif (!source) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tsource.fill = resolveTarget(sources, i, propagate);\n\t\t\tsource.boundary = computeBoundary(source);\n\t\t\tsource.mapper = createMapper(source);\n\t\t}\n\t},\n\n\tbeforeDatasetDraw: function(chart, args) {\n\t\tvar meta = args.meta.$filler;\n\t\tif (!meta) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar ctx = chart.ctx;\n\t\tvar el = meta.el;\n\t\tvar view = el._view;\n\t\tvar points = el._children || [];\n\t\tvar mapper = meta.mapper;\n\t\tvar color = view.backgroundColor || core_defaults.global.defaultColor;\n\n\t\tif (mapper && color && points.length) {\n\t\t\thelpers$1.canvas.clipArea(ctx, chart.chartArea);\n\t\t\tdoFill(ctx, points, mapper, view, color, el._loop);\n\t\t\thelpers$1.canvas.unclipArea(ctx);\n\t\t}\n\t}\n};\n\nvar noop$1 = helpers$1.noop;\nvar valueOrDefault$d = helpers$1.valueOrDefault;\n\ncore_defaults._set('global', {\n\tlegend: {\n\t\tdisplay: true,\n\t\tposition: 'top',\n\t\tfullWidth: true,\n\t\treverse: false,\n\t\tweight: 1000,\n\n\t\t// a callback that will handle\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.datasetIndex;\n\t\t\tvar ci = this.chart;\n\t\t\tvar meta = ci.getDatasetMeta(index);\n\n\t\t\t// See controller.isDatasetVisible comment\n\t\t\tmeta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null;\n\n\t\t\t// We hid a dataset ... rerender the chart\n\t\t\tci.update();\n\t\t},\n\n\t\tonHover: null,\n\t\tonLeave: null,\n\n\t\tlabels: {\n\t\t\tboxWidth: 40,\n\t\t\tpadding: 10,\n\t\t\t// Generates labels shown in the legend\n\t\t\t// Valid properties to return:\n\t\t\t// text : text to display\n\t\t\t// fillStyle : fill of coloured box\n\t\t\t// strokeStyle: stroke of coloured box\n\t\t\t// hidden : if this legend item refers to a hidden item\n\t\t\t// lineCap : cap style for line\n\t\t\t// lineDash\n\t\t\t// lineDashOffset :\n\t\t\t// lineJoin :\n\t\t\t// lineWidth :\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\treturn helpers$1.isArray(data.datasets) ? data.datasets.map(function(dataset, i) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttext: dataset.label,\n\t\t\t\t\t\tfillStyle: (!helpers$1.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0]),\n\t\t\t\t\t\thidden: !chart.isDatasetVisible(i),\n\t\t\t\t\t\tlineCap: dataset.borderCapStyle,\n\t\t\t\t\t\tlineDash: dataset.borderDash,\n\t\t\t\t\t\tlineDashOffset: dataset.borderDashOffset,\n\t\t\t\t\t\tlineJoin: dataset.borderJoinStyle,\n\t\t\t\t\t\tlineWidth: dataset.borderWidth,\n\t\t\t\t\t\tstrokeStyle: dataset.borderColor,\n\t\t\t\t\t\tpointStyle: dataset.pointStyle,\n\n\t\t\t\t\t\t// Below is extra data used for toggling the datasets\n\t\t\t\t\t\tdatasetIndex: i\n\t\t\t\t\t};\n\t\t\t\t}, this) : [];\n\t\t\t}\n\t\t}\n\t},\n\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\t\tfor (var i = 0; i < chart.data.datasets.length; i++) {\n\t\t\ttext.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\t\t\tif (chart.data.datasets[i].label) {\n\t\t\t\ttext.push(chart.data.datasets[i].label);\n\t\t\t}\n\t\t\ttext.push('</li>');\n\t\t}\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t}\n});\n\n/**\n * Helper function to get the box width based on the usePointStyle option\n * @param {object} labelopts - the label options on the legend\n * @param {number} fontSize - the label font size\n * @return {number} width of the color box area\n */\nfunction getBoxWidth(labelOpts, fontSize) {\n\treturn labelOpts.usePointStyle && labelOpts.boxWidth > fontSize ?\n\t\tfontSize :\n\t\tlabelOpts.boxWidth;\n}\n\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\nvar Legend = core_element.extend({\n\n\tinitialize: function(config) {\n\t\thelpers$1.extend(this, config);\n\n\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\tthis.legendHitBoxes = [];\n\n\t\t/**\n \t\t * @private\n \t\t */\n\t\tthis._hoveredItem = null;\n\n\t\t// Are we in doughnut mode which has a different data type\n\t\tthis.doughnutMode = false;\n\t},\n\n\t// These methods are ordered by lifecycle. Utilities then follow.\n\t// Any function defined here is inherited by all legend types.\n\t// Any function can be extended by the legend type\n\n\tbeforeUpdate: noop$1,\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = margins;\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\t\t// Labels\n\t\tme.beforeBuildLabels();\n\t\tme.buildLabels();\n\t\tme.afterBuildLabels();\n\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\t},\n\tafterUpdate: noop$1,\n\n\t//\n\n\tbeforeSetDimensions: noop$1,\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\n\t\t// Reset minSize\n\t\tme.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\t},\n\tafterSetDimensions: noop$1,\n\n\t//\n\n\tbeforeBuildLabels: noop$1,\n\tbuildLabels: function() {\n\t\tvar me = this;\n\t\tvar labelOpts = me.options.labels || {};\n\t\tvar legendItems = helpers$1.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n\t\tif (labelOpts.filter) {\n\t\t\tlegendItems = legendItems.filter(function(item) {\n\t\t\t\treturn labelOpts.filter(item, me.chart.data);\n\t\t\t});\n\t\t}\n\n\t\tif (me.options.reverse) {\n\t\t\tlegendItems.reverse();\n\t\t}\n\n\t\tme.legendItems = legendItems;\n\t},\n\tafterBuildLabels: noop$1,\n\n\t//\n\n\tbeforeFit: noop$1,\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar labelOpts = opts.labels;\n\t\tvar display = opts.display;\n\n\t\tvar ctx = me.ctx;\n\n\t\tvar labelFont = helpers$1.options._parseFont(labelOpts);\n\t\tvar fontSize = labelFont.size;\n\n\t\t// Reset hit boxes\n\t\tvar hitboxes = me.legendHitBoxes = [];\n\n\t\tvar minSize = me.minSize;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tif (isHorizontal) {\n\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\tminSize.height = display ? 10 : 0;\n\t\t} else {\n\t\t\tminSize.width = display ? 10 : 0;\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\t// Increase sizes here\n\t\tif (display) {\n\t\t\tctx.font = labelFont.string;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\t// Labels\n\n\t\t\t\t// Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n\t\t\t\tvar lineWidths = me.lineWidths = [0];\n\t\t\t\tvar totalHeight = 0;\n\n\t\t\t\tctx.textAlign = 'left';\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\thelpers$1.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\tvar width = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\tif (i === 0 || lineWidths[lineWidths.length - 1] + width + labelOpts.padding > minSize.width) {\n\t\t\t\t\t\ttotalHeight += fontSize + labelOpts.padding;\n\t\t\t\t\t\tlineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = labelOpts.padding;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\twidth: width,\n\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t};\n\n\t\t\t\t\tlineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n\t\t\t\t});\n\n\t\t\t\tminSize.height += totalHeight;\n\n\t\t\t} else {\n\t\t\t\tvar vPadding = labelOpts.padding;\n\t\t\t\tvar columnWidths = me.columnWidths = [];\n\t\t\t\tvar totalWidth = labelOpts.padding;\n\t\t\t\tvar currentColWidth = 0;\n\t\t\t\tvar currentColHeight = 0;\n\t\t\t\tvar itemHeight = fontSize + vPadding;\n\n\t\t\t\thelpers$1.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\tvar itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\t// If too tall, go to new column\n\t\t\t\t\tif (i > 0 && currentColHeight + itemHeight > minSize.height - vPadding) {\n\t\t\t\t\t\ttotalWidth += currentColWidth + labelOpts.padding;\n\t\t\t\t\t\tcolumnWidths.push(currentColWidth); // previous column width\n\n\t\t\t\t\t\tcurrentColWidth = 0;\n\t\t\t\t\t\tcurrentColHeight = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Get max width\n\t\t\t\t\tcurrentColWidth = Math.max(currentColWidth, itemWidth);\n\t\t\t\t\tcurrentColHeight += itemHeight;\n\n\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\twidth: itemWidth,\n\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t\ttotalWidth += currentColWidth;\n\t\t\t\tcolumnWidths.push(currentColWidth);\n\t\t\t\tminSize.width += totalWidth;\n\t\t\t}\n\t\t}\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\t},\n\tafterFit: noop$1,\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t},\n\n\t// Actually draw the legend on the canvas\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar labelOpts = opts.labels;\n\t\tvar globalDefaults = core_defaults.global;\n\t\tvar defaultColor = globalDefaults.defaultColor;\n\t\tvar lineDefault = globalDefaults.elements.line;\n\t\tvar legendWidth = me.width;\n\t\tvar lineWidths = me.lineWidths;\n\n\t\tif (opts.display) {\n\t\t\tvar ctx = me.ctx;\n\t\t\tvar fontColor = valueOrDefault$d(labelOpts.fontColor, globalDefaults.defaultFontColor);\n\t\t\tvar labelFont = helpers$1.options._parseFont(labelOpts);\n\t\t\tvar fontSize = labelFont.size;\n\t\t\tvar cursor;\n\n\t\t\t// Canvas setup\n\t\t\tctx.textAlign = 'left';\n\t\t\tctx.textBaseline = 'middle';\n\t\t\tctx.lineWidth = 0.5;\n\t\t\tctx.strokeStyle = fontColor; // for strikethrough effect\n\t\t\tctx.fillStyle = fontColor; // render in correct colour\n\t\t\tctx.font = labelFont.string;\n\n\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\tvar hitboxes = me.legendHitBoxes;\n\n\t\t\t// current position\n\t\t\tvar drawLegendBox = function(x, y, legendItem) {\n\t\t\t\tif (isNaN(boxWidth) || boxWidth <= 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Set the ctx for the box\n\t\t\t\tctx.save();\n\n\t\t\t\tvar lineWidth = valueOrDefault$d(legendItem.lineWidth, lineDefault.borderWidth);\n\t\t\t\tctx.fillStyle = valueOrDefault$d(legendItem.fillStyle, defaultColor);\n\t\t\t\tctx.lineCap = valueOrDefault$d(legendItem.lineCap, lineDefault.borderCapStyle);\n\t\t\t\tctx.lineDashOffset = valueOrDefault$d(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n\t\t\t\tctx.lineJoin = valueOrDefault$d(legendItem.lineJoin, lineDefault.borderJoinStyle);\n\t\t\t\tctx.lineWidth = lineWidth;\n\t\t\t\tctx.strokeStyle = valueOrDefault$d(legendItem.strokeStyle, defaultColor);\n\n\t\t\t\tif (ctx.setLineDash) {\n\t\t\t\t\t// IE 9 and 10 do not support line dash\n\t\t\t\t\tctx.setLineDash(valueOrDefault$d(legendItem.lineDash, lineDefault.borderDash));\n\t\t\t\t}\n\n\t\t\t\tif (opts.labels && opts.labels.usePointStyle) {\n\t\t\t\t\t// Recalculate x and y for drawPoint() because its expecting\n\t\t\t\t\t// x and y to be center of figure (instead of top left)\n\t\t\t\t\tvar radius = boxWidth * Math.SQRT2 / 2;\n\t\t\t\t\tvar centerX = x + boxWidth / 2;\n\t\t\t\t\tvar centerY = y + fontSize / 2;\n\n\t\t\t\t\t// Draw pointStyle as legend symbol\n\t\t\t\t\thelpers$1.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n\t\t\t\t} else {\n\t\t\t\t\t// Draw box as legend symbol\n\t\t\t\t\tif (lineWidth !== 0) {\n\t\t\t\t\t\tctx.strokeRect(x, y, boxWidth, fontSize);\n\t\t\t\t\t}\n\t\t\t\t\tctx.fillRect(x, y, boxWidth, fontSize);\n\t\t\t\t}\n\n\t\t\t\tctx.restore();\n\t\t\t};\n\t\t\tvar fillText = function(x, y, legendItem, textWidth) {\n\t\t\t\tvar halfFontSize = fontSize / 2;\n\t\t\t\tvar xLeft = boxWidth + halfFontSize + x;\n\t\t\t\tvar yMiddle = y + halfFontSize;\n\n\t\t\t\tctx.fillText(legendItem.text, xLeft, yMiddle);\n\n\t\t\t\tif (legendItem.hidden) {\n\t\t\t\t\t// Strikethrough the text if hidden\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.lineWidth = 2;\n\t\t\t\t\tctx.moveTo(xLeft, yMiddle);\n\t\t\t\t\tctx.lineTo(xLeft + textWidth, yMiddle);\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Horizontal\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tif (isHorizontal) {\n\t\t\t\tcursor = {\n\t\t\t\t\tx: me.left + ((legendWidth - lineWidths[0]) / 2) + labelOpts.padding,\n\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\tline: 0\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tcursor = {\n\t\t\t\t\tx: me.left + labelOpts.padding,\n\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\tline: 0\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar itemHeight = fontSize + labelOpts.padding;\n\t\t\thelpers$1.each(me.legendItems, function(legendItem, i) {\n\t\t\t\tvar textWidth = ctx.measureText(legendItem.text).width;\n\t\t\t\tvar width = boxWidth + (fontSize / 2) + textWidth;\n\t\t\t\tvar x = cursor.x;\n\t\t\t\tvar y = cursor.y;\n\n\t\t\t\t// Use (me.left + me.minSize.width) and (me.top + me.minSize.height)\n\t\t\t\t// instead of me.right and me.bottom because me.width and me.height\n\t\t\t\t// may have been changed since me.minSize was calculated\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tif (i > 0 && x + width + labelOpts.padding > me.left + me.minSize.width) {\n\t\t\t\t\t\ty = cursor.y += itemHeight;\n\t\t\t\t\t\tcursor.line++;\n\t\t\t\t\t\tx = cursor.x = me.left + ((legendWidth - lineWidths[cursor.line]) / 2) + labelOpts.padding;\n\t\t\t\t\t}\n\t\t\t\t} else if (i > 0 && y + itemHeight > me.top + me.minSize.height) {\n\t\t\t\t\tx = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n\t\t\t\t\ty = cursor.y = me.top + labelOpts.padding;\n\t\t\t\t\tcursor.line++;\n\t\t\t\t}\n\n\t\t\t\tdrawLegendBox(x, y, legendItem);\n\n\t\t\t\thitboxes[i].left = x;\n\t\t\t\thitboxes[i].top = y;\n\n\t\t\t\t// Fill the actual label\n\t\t\t\tfillText(x, y, legendItem, textWidth);\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tcursor.x += width + labelOpts.padding;\n\t\t\t\t} else {\n\t\t\t\t\tcursor.y += itemHeight;\n\t\t\t\t}\n\n\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getLegendItemAt: function(x, y) {\n\t\tvar me = this;\n\t\tvar i, hitBox, lh;\n\n\t\tif (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n\t\t\t// See if we are touching one of the dataset boxes\n\t\t\tlh = me.legendHitBoxes;\n\t\t\tfor (i = 0; i < lh.length; ++i) {\n\t\t\t\thitBox = lh[i];\n\n\t\t\t\tif (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n\t\t\t\t\t// Touching an element\n\t\t\t\t\treturn me.legendItems[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t},\n\n\t/**\n\t * Handle an event\n\t * @private\n\t * @param {IEvent} event - The event to handle\n\t */\n\thandleEvent: function(e) {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar type = e.type === 'mouseup' ? 'click' : e.type;\n\t\tvar hoveredItem;\n\n\t\tif (type === 'mousemove') {\n\t\t\tif (!opts.onHover && !opts.onLeave) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else if (type === 'click') {\n\t\t\tif (!opts.onClick) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\n\t\t// Chart event already has relative position in it\n\t\thoveredItem = me._getLegendItemAt(e.x, e.y);\n\n\t\tif (type === 'click') {\n\t\t\tif (hoveredItem && opts.onClick) {\n\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\topts.onClick.call(me, e.native, hoveredItem);\n\t\t\t}\n\t\t} else {\n\t\t\tif (opts.onLeave && hoveredItem !== me._hoveredItem) {\n\t\t\t\tif (me._hoveredItem) {\n\t\t\t\t\topts.onLeave.call(me, e.native, me._hoveredItem);\n\t\t\t\t}\n\t\t\t\tme._hoveredItem = hoveredItem;\n\t\t\t}\n\n\t\t\tif (opts.onHover && hoveredItem) {\n\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\topts.onHover.call(me, e.native, hoveredItem);\n\t\t\t}\n\t\t}\n\t}\n});\n\nfunction createNewLegendAndAttach(chart, legendOpts) {\n\tvar legend = new Legend({\n\t\tctx: chart.ctx,\n\t\toptions: legendOpts,\n\t\tchart: chart\n\t});\n\n\tcore_layouts.configure(chart, legend, legendOpts);\n\tcore_layouts.addBox(chart, legend);\n\tchart.legend = legend;\n}\n\nvar plugin_legend = {\n\tid: 'legend',\n\n\t/**\n\t * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n\t * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n\t * the plugin, which one will be re-exposed in the chart.js file.\n\t * https://github.com/chartjs/Chart.js/pull/2640\n\t * @private\n\t */\n\t_element: Legend,\n\n\tbeforeInit: function(chart) {\n\t\tvar legendOpts = chart.options.legend;\n\n\t\tif (legendOpts) {\n\t\t\tcreateNewLegendAndAttach(chart, legendOpts);\n\t\t}\n\t},\n\n\tbeforeUpdate: function(chart) {\n\t\tvar legendOpts = chart.options.legend;\n\t\tvar legend = chart.legend;\n\n\t\tif (legendOpts) {\n\t\t\thelpers$1.mergeIf(legendOpts, core_defaults.global.legend);\n\n\t\t\tif (legend) {\n\t\t\t\tcore_layouts.configure(chart, legend, legendOpts);\n\t\t\t\tlegend.options = legendOpts;\n\t\t\t} else {\n\t\t\t\tcreateNewLegendAndAttach(chart, legendOpts);\n\t\t\t}\n\t\t} else if (legend) {\n\t\t\tcore_layouts.removeBox(chart, legend);\n\t\t\tdelete chart.legend;\n\t\t}\n\t},\n\n\tafterEvent: function(chart, e) {\n\t\tvar legend = chart.legend;\n\t\tif (legend) {\n\t\t\tlegend.handleEvent(e);\n\t\t}\n\t}\n};\n\nvar noop$2 = helpers$1.noop;\n\ncore_defaults._set('global', {\n\ttitle: {\n\t\tdisplay: false,\n\t\tfontStyle: 'bold',\n\t\tfullWidth: true,\n\t\tpadding: 10,\n\t\tposition: 'top',\n\t\ttext: '',\n\t\tweight: 2000         // by default greater than legend (1000) to be above\n\t}\n});\n\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\nvar Title = core_element.extend({\n\tinitialize: function(config) {\n\t\tvar me = this;\n\t\thelpers$1.extend(me, config);\n\n\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\tme.legendHitBoxes = [];\n\t},\n\n\t// These methods are ordered by lifecycle. Utilities then follow.\n\n\tbeforeUpdate: noop$2,\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = margins;\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\t\t// Labels\n\t\tme.beforeBuildLabels();\n\t\tme.buildLabels();\n\t\tme.afterBuildLabels();\n\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\n\t},\n\tafterUpdate: noop$2,\n\n\t//\n\n\tbeforeSetDimensions: noop$2,\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\n\t\t// Reset minSize\n\t\tme.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\t},\n\tafterSetDimensions: noop$2,\n\n\t//\n\n\tbeforeBuildLabels: noop$2,\n\tbuildLabels: noop$2,\n\tafterBuildLabels: noop$2,\n\n\t//\n\n\tbeforeFit: noop$2,\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar display = opts.display;\n\t\tvar minSize = me.minSize;\n\t\tvar lineCount = helpers$1.isArray(opts.text) ? opts.text.length : 1;\n\t\tvar fontOpts = helpers$1.options._parseFont(opts);\n\t\tvar textSize = display ? (lineCount * fontOpts.lineHeight) + (opts.padding * 2) : 0;\n\n\t\tif (me.isHorizontal()) {\n\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\tminSize.height = textSize;\n\t\t} else {\n\t\t\tminSize.width = textSize;\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\n\t},\n\tafterFit: noop$2,\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\tvar pos = this.options.position;\n\t\treturn pos === 'top' || pos === 'bottom';\n\t},\n\n\t// Actually draw the title block on the canvas\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar ctx = me.ctx;\n\t\tvar opts = me.options;\n\n\t\tif (opts.display) {\n\t\t\tvar fontOpts = helpers$1.options._parseFont(opts);\n\t\t\tvar lineHeight = fontOpts.lineHeight;\n\t\t\tvar offset = lineHeight / 2 + opts.padding;\n\t\t\tvar rotation = 0;\n\t\t\tvar top = me.top;\n\t\t\tvar left = me.left;\n\t\t\tvar bottom = me.bottom;\n\t\t\tvar right = me.right;\n\t\t\tvar maxWidth, titleX, titleY;\n\n\t\t\tctx.fillStyle = helpers$1.valueOrDefault(opts.fontColor, core_defaults.global.defaultFontColor); // render in correct colour\n\t\t\tctx.font = fontOpts.string;\n\n\t\t\t// Horizontal\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\ttitleX = left + ((right - left) / 2); // midpoint of the width\n\t\t\t\ttitleY = top + offset;\n\t\t\t\tmaxWidth = right - left;\n\t\t\t} else {\n\t\t\t\ttitleX = opts.position === 'left' ? left + offset : right - offset;\n\t\t\t\ttitleY = top + ((bottom - top) / 2);\n\t\t\t\tmaxWidth = bottom - top;\n\t\t\t\trotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n\t\t\t}\n\n\t\t\tctx.save();\n\t\t\tctx.translate(titleX, titleY);\n\t\t\tctx.rotate(rotation);\n\t\t\tctx.textAlign = 'center';\n\t\t\tctx.textBaseline = 'middle';\n\n\t\t\tvar text = opts.text;\n\t\t\tif (helpers$1.isArray(text)) {\n\t\t\t\tvar y = 0;\n\t\t\t\tfor (var i = 0; i < text.length; ++i) {\n\t\t\t\t\tctx.fillText(text[i], 0, y, maxWidth);\n\t\t\t\t\ty += lineHeight;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tctx.fillText(text, 0, 0, maxWidth);\n\t\t\t}\n\n\t\t\tctx.restore();\n\t\t}\n\t}\n});\n\nfunction createNewTitleBlockAndAttach(chart, titleOpts) {\n\tvar title = new Title({\n\t\tctx: chart.ctx,\n\t\toptions: titleOpts,\n\t\tchart: chart\n\t});\n\n\tcore_layouts.configure(chart, title, titleOpts);\n\tcore_layouts.addBox(chart, title);\n\tchart.titleBlock = title;\n}\n\nvar plugin_title = {\n\tid: 'title',\n\n\t/**\n\t * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n\t * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n\t * the plugin, which one will be re-exposed in the chart.js file.\n\t * https://github.com/chartjs/Chart.js/pull/2640\n\t * @private\n\t */\n\t_element: Title,\n\n\tbeforeInit: function(chart) {\n\t\tvar titleOpts = chart.options.title;\n\n\t\tif (titleOpts) {\n\t\t\tcreateNewTitleBlockAndAttach(chart, titleOpts);\n\t\t}\n\t},\n\n\tbeforeUpdate: function(chart) {\n\t\tvar titleOpts = chart.options.title;\n\t\tvar titleBlock = chart.titleBlock;\n\n\t\tif (titleOpts) {\n\t\t\thelpers$1.mergeIf(titleOpts, core_defaults.global.title);\n\n\t\t\tif (titleBlock) {\n\t\t\t\tcore_layouts.configure(chart, titleBlock, titleOpts);\n\t\t\t\ttitleBlock.options = titleOpts;\n\t\t\t} else {\n\t\t\t\tcreateNewTitleBlockAndAttach(chart, titleOpts);\n\t\t\t}\n\t\t} else if (titleBlock) {\n\t\t\tcore_layouts.removeBox(chart, titleBlock);\n\t\t\tdelete chart.titleBlock;\n\t\t}\n\t}\n};\n\nvar plugins = {};\nvar filler = plugin_filler;\nvar legend = plugin_legend;\nvar title = plugin_title;\nplugins.filler = filler;\nplugins.legend = legend;\nplugins.title = title;\n\n/**\n * @namespace Chart\n */\n\n\ncore_controller.helpers = helpers$1;\n\n// @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\ncore_helpers(core_controller);\n\ncore_controller._adapters = core_adapters;\ncore_controller.Animation = core_animation;\ncore_controller.animationService = core_animations;\ncore_controller.controllers = controllers;\ncore_controller.DatasetController = core_datasetController;\ncore_controller.defaults = core_defaults;\ncore_controller.Element = core_element;\ncore_controller.elements = elements;\ncore_controller.Interaction = core_interaction;\ncore_controller.layouts = core_layouts;\ncore_controller.platform = platform;\ncore_controller.plugins = core_plugins;\ncore_controller.Scale = core_scale;\ncore_controller.scaleService = core_scaleService;\ncore_controller.Ticks = core_ticks;\ncore_controller.Tooltip = core_tooltip;\n\n// Register built-in scales\n\ncore_controller.helpers.each(scales, function(scale, type) {\n\tcore_controller.scaleService.registerScaleType(type, scale, scale._defaults);\n});\n\n// Load to register built-in adapters (as side effects)\n\n\n// Loading built-in plugins\n\nfor (var k in plugins) {\n\tif (plugins.hasOwnProperty(k)) {\n\t\tcore_controller.plugins.register(plugins[k]);\n\t}\n}\n\ncore_controller.platform.initialize();\n\nvar src = core_controller;\nif (typeof window !== 'undefined') {\n\twindow.Chart = core_controller;\n}\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Chart\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\ncore_controller.Chart = core_controller;\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Legend\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\ncore_controller.Legend = plugins.legend._element;\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Title\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\ncore_controller.Title = plugins.title._element;\n\n/**\n * Provided for backward compatibility, use Chart.plugins instead\n * @namespace Chart.pluginService\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\ncore_controller.pluginService = core_controller.plugins;\n\n/**\n * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n * effect, instead simply create/register plugins via plain JavaScript objects.\n * @interface Chart.PluginBase\n * @deprecated since version 2.5.0\n * @todo remove at version 3\n * @private\n */\ncore_controller.PluginBase = core_controller.Element.extend({});\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas instead.\n * @namespace Chart.canvasHelpers\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\ncore_controller.canvasHelpers = core_controller.helpers.canvas;\n\n/**\n * Provided for backward compatibility, use Chart.layouts instead.\n * @namespace Chart.layoutService\n * @deprecated since version 2.7.3\n * @todo remove at version 3\n * @private\n */\ncore_controller.layoutService = core_controller.layouts;\n\n/**\n * Provided for backward compatibility, not available anymore.\n * @namespace Chart.LinearScaleBase\n * @deprecated since version 2.8\n * @todo remove at version 3\n * @private\n */\ncore_controller.LinearScaleBase = scale_linearbase;\n\n/**\n * Provided for backward compatibility, instead we should create a new Chart\n * by setting the type in the config (`new Chart(id, {type: '{chart-type}'}`).\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n */\ncore_controller.helpers.each(\n\t[\n\t\t'Bar',\n\t\t'Bubble',\n\t\t'Doughnut',\n\t\t'Line',\n\t\t'PolarArea',\n\t\t'Radar',\n\t\t'Scatter'\n\t],\n\tfunction(klass) {\n\t\tcore_controller[klass] = function(ctx, cfg) {\n\t\t\treturn new core_controller(ctx, core_controller.helpers.merge(cfg || {}, {\n\t\t\t\ttype: klass.charAt(0).toLowerCase() + klass.slice(1)\n\t\t\t}));\n\t\t};\n\t}\n);\n\nreturn src;\n\n})));\n","; (function ($, window, document, undefined) {\r\n\tvar pluginName = \"cryodex\",\r\n\t\tdefaults = {\r\n\t\t\tbaseColours: {\r\n\t\t\t\tfirst: '#1abc9c',\r\n\t\t\t\tsecond: '#e74c3c',\r\n\t\t\t\tthird: '#3498db',\r\n\t\t\t\tfourth: '#9b59b6',\r\n\t\t\t\tfifth: '#34495e',\r\n\t\t\t\tsixth: '#2ecc71',\r\n\t\t\t\tseventh: '#e67e22',\r\n\t\t\t\teighth: '#f1c40f',\r\n\t\t\t\tninth: '#7f8c8d',\r\n\t\t\t\ttenth: '#d35400' \r\n\t\t\t},\r\n\t\t\tlegend: {}\r\n\t\t};\r\n\r\n\tfunction Cryodex(element, options) {\r\n\t\tthis.element = element;\r\n\r\n\t\t$('body').append('<div id=\"cryodex-js-colour-config\"></div>');\r\n\t\tcolours =  jQuery.parseJSON($('#cryodex-js-colour-config').css('content').replace(/\"/g,'').replace(/'/g,'\"'));\r\n\r\n\t\tif (typeof(colours) == 'object') {\r\n\t\t\tdefaults.colours = colours;\r\n\t\t} else {\r\n\t\t\tdefaults.colours = defaults.baseColours;\r\n\t\t}\r\n\r\n\t\tthis.options = $.extend({}, defaults, options);\r\n\r\n\t\tthis._defaults = defaults;\r\n\t\tthis._name = pluginName;\r\n\r\n\t\tthis._counter = 0 ;\r\n\r\n\t\tthis.init();\r\n\t}\r\n\r\n\tCryodex.prototype = {\r\n\r\n\t\tinit: function () {\r\n\t\t\tswitch ($(this.element).attr('data-cryodex-widget')) {\r\n\t\t\t\tcase 'gauge':\r\n\t\t\t\t\tthis._gauge();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'doughnut':\r\n\t\t\t\t\tthis._doughnut();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'bar':\r\n\t\t\t\t\tthis._bar('bar');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'horizontal-bar':\r\n\t\t\t\t\tthis._bar('horizontalBar');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'line':\r\n\t\t\t\t\tthis._line();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'progress':\r\n\t\t\t\t\tthis._progress();\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t$(this.element).addClass('cryodex-loaded');\r\n\t\t},\r\n\r\n\t\t_getColour: function(colour) {\r\n\t\t\tif (typeof (colour) == 'undefined' || colour == '') {\r\n\t\t\t\tcolour = this.options.colours[Object.keys(this.options.colours)[this._counter % Object.keys(this.options.colours).length]];\r\n\t\t\t} else if (typeof (this.options.colours[colour]) != 'undefined') {\r\n\t\t\t\tcolour = this.options.colours[colour];\r\n\t\t\t} else if (typeof (this._defaults.baseColours[colour]) != 'undefined') {\r\n\t\t\t\tcolour = this._defaults.baseColours[colour];\r\n\t\t\t}\r\n\t\t\treturn colour;\r\n\t\t},\r\n\r\n\t\t_getColourAlpha: function (colour, opacity) {\r\n\t\t\tcolour = this._getColour(colour);\r\n\t\t\tif (colour.substr(0, 5) == 'rgba(') {\r\n\t\t\t\trgb = colour.replace('rgba(', '').replace(')', '');\r\n\t\t\t\trgb = rgb.split(',');\r\n\t\t\t\tcolour = 'rgba(' + rgb[0] + ',' + rgb[1] + ',' + rgb[2] + ',' + opacity + ')';\r\n\t\t\t} else if (colour.substr(0, 4) == 'rgb(') {\r\n\t\t\t\trgb = colour.replace('rgb(', '').replace(')', '');\r\n\t\t\t\trgb = rgb.split(',');\r\n\t\t\t\tcolour = 'rgba(' + rgb[0] + ',' + rgb[1] + ',' + rgb[2] + ',' + opacity + ')';\r\n\t\t\t} else if (/^#([A-Fa-f0-9]{3}){1,2}$/.test(colour)) {\r\n\t\t\t\tc = colour.substring(1).split('');\r\n\t\t\t\tif (c.length == 3) {\r\n\t\t\t\t\tc = [c[0], c[0], c[1], c[1], c[2], c[2]];\r\n\t\t\t\t}\r\n\t\t\t\tc = '0x' + c.join('');\r\n\t\t\t\tcolour = 'rgba(' + [(c >> 16) & 255, (c >> 8) & 255, c & 255].join(',') + ',' + opacity + ')';\r\n\t\t\t}\r\n\r\n\t\t\treturn colour;\r\n\t\t},\r\n\r\n\t\t_gauge: function () {\r\n\t\t\tthis._counter = 0;\r\n\r\n\t\t\tvar value1 = $(this.element).attr('data-percent') * 0.75;\r\n\t\t\tvar value2 = 75 - value1;\r\n\t\t\tvar colour = this._getColour($(this.element).attr('data-colour'));\r\n\r\n\t\t\t$(this.element).append('<canvas />');\r\n\t\t\tthis.chart = new Chart($('canvas', this.element), {\r\n\t\t\t\ttype: 'doughnut',\r\n\t\t\t\tresponsive: true,\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tlabels: ['Complete', null],\r\n\t\t\t\t\tdatasets: [{\r\n\t\t\t\t\t\tlabel: 'progress',\r\n\t\t\t\t\t\tdata: [value1, value2, 25],\r\n\t\t\t\t\t\tbackgroundColor: [\r\n\t\t\t\t\t\t\tcolour,\r\n\t\t\t\t\t\t\t'#ddd',\r\n\t\t\t\t\t\t\t'transparent'\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\thoverBackgroundColor: [\r\n\t\t\t\t\t\t\tcolour,\r\n\t\t\t\t\t\t\t'#ddd',\r\n\t\t\t\t\t\t\t'transparent'\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\tborderWidth: 0\r\n\t\t\t\t\t}]\r\n\t\t\t\t},\r\n\t\t\t\toptions: {\r\n\t\t\t\t\tlegend: { display: false },\r\n\t\t\t\t\ttooltips: { enabled: false },\r\n\t\t\t\t\tcutoutPercentage: 70,\r\n\t\t\t\t\trotation: 0.75 * Math.PI,\r\n\t\t\t\t\tonClick: window[$(this.element).attr('data-click')]\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t_doughnut: function () {\r\n\t\t\tvar base = this;\r\n\t\t\tbase._counter = 0;\r\n\r\n\t\t\tvar table = $('table', this.element).eq(0).hide();\r\n\r\n\t\t\tvar labels = new Array();\r\n\t\t\t$('thead th', table).each(function () {\r\n\t\t\t\tlabels.push($(this).text());\r\n\t\t\t});\r\n\r\n\t\t\tvar datasets = new Array();\r\n\t\t\t$('tbody tr', table).each(function () {\r\n\t\t\t\tvar dataset_item = new Object();\r\n\t\t\t\tdataset_item.label = $(this).attr('data-label');\r\n\t\t\t\tdataset_item.data = new Array();\r\n\t\t\t\tdataset_item.backgroundColor = new Array();\r\n\t\t\t\t$('td', this).each(function () {\r\n\t\t\t\t\tdataset_item.data.push($(this).text());\r\n\t\t\t\t\tdataset_item.backgroundColor.push(base._getColour($(this).attr('data-colour')));\r\n\t\t\t\t\tbase._counter ++;\r\n\t\t\t\t});\r\n\t\t\t\tdataset_item.borderWidth = 0;\r\n\t\t\t\tdatasets.push(dataset_item);\r\n\t\t\t});\r\n\t\t\tvar legend = this.options.legend;\r\n\t\t\t//legend.position = 'left';\r\n\t\t\tlegend.display = false;\r\n\t\t\tif ($(this.element).attr('data-legend-click')) {\r\n\t\t\t\tlegend.onClick = window[$(this.element).attr('data-legend-click')];\r\n\t\t\t}\r\n\r\n\t\t\t$(this.element).append('<div class=\"cryodex-chart-wrapper\"><div class=\"cryodex-legend\" /><div class=\"cryodex-chart\"><canvas /></div></div>');\r\n\t\t\tthis.chart = new Chart($('canvas', this.element), {\r\n\t\t\t\ttype: 'doughnut',\r\n\t\t\t\tresponsive: true,\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tlabels: labels,\r\n\t\t\t\t\tdatasets: datasets\r\n\t\t\t\t},\r\n\t\t\t\toptions: {\r\n\t\t\t\t\tlegend: legend,\r\n\t\t\t\t\tonClick: window[$(this.element).attr('data-click')],\r\n\t\t\t\t\tlegendCallback: function(chart) {\r\n\t\t\t\t\t\tconsole.log(chart.data);\r\n\t\t\t\t\t\tvar text = [];\r\n\t\t\t\t\t\ttext.push('<ul>');\r\n\t\t\t\t\t\tfor (var i=0; i<chart.data.datasets[0].data.length; i++) {\r\n\t\t\t\t\t\t\ttext.push('<li>');\r\n\t\t\t\t\t\t\tconsole.log($(base.element).attr('data-legend-click'));\r\n\t\t\t\t\t\t\tif ($(base.element).attr('data-legend-click')) {\r\n\t\t\t\t\t\t\t\ttext.push('<a href=\"javascript:' + $(base.element).attr('data-legend-click') + '(null, {index: ' + i +', text: \\'' + chart.data.labels[i] + '\\'});\">');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\ttext.push('<span style=\"background-color:' + chart.data.datasets[0].backgroundColor[i] + '\">&nbsp;</span>');\r\n\t\t\t\t\t\t\tif (chart.data.labels[i]) {\r\n\t\t\t\t\t\t\t\ttext.push(chart.data.labels[i]);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif ($(base.element).attr('data-legend-click')) {\r\n\t\t\t\t\t\t\t\ttext.push('</a>');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\ttext.push('</li>');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\ttext.push('</ul>');\r\n\t\t\t\t\t\treturn text.join(\"\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t});\r\n\t\t\t$('.cryodex-legend', this.element).html(this.chart.generateLegend());\r\n\t\t},\r\n\r\n\t\t_bar: function (charttype) {\r\n\t\t\tvar base = this;\r\n\t\t\tbase._counter = 0;\r\n\r\n\t\t\tvar table = $('table', this.element).eq(0).hide();\r\n\r\n\t\t\tvar labels = new Array();\r\n\t\t\t$('thead th', table).each(function () {\r\n\t\t\t\tlabels.push($(this).text());\r\n\t\t\t});\r\n\r\n\t\t\tvar datasets = new Array();\r\n\t\t\t$('tbody tr', table).each(function () {\r\n\t\t\t\tvar dataset_item = new Object();\r\n\t\t\t\tdataset_item.label = $(this).attr('data-label');\r\n\t\t\t\tdataset_item.data = new Array();\r\n\t\t\t\tdataset_item.backgroundColor = new Array();\r\n\t\t\t\t$('td', this).each(function () {\r\n\t\t\t\t\tdataset_item.data.push($(this).text());\r\n\t\t\t\t\tdataset_item.backgroundColor.push(base._getColour($(this).attr('data-colour')));\r\n\t\t\t\t\tbase._counter ++;\r\n\t\t\t\t});\r\n\t\t\t\tdataset_item.borderWidth = 0;\r\n\t\t\t\tdatasets.push(dataset_item);\r\n\t\t\t});\r\n\r\n\t\t\tvar chartoptions = {\r\n\t\t\t\tlegend: { display: false },\r\n\t\t\t\tonClick: window[$(this.element).attr('data-click')]\r\n\t\t\t}\r\n\r\n\t\t\tif ($(this.element).attr('data-stacked')) {\r\n\t\t\t\tchartoptions.scales = {\r\n\t\t\t\t\txAxes: [{ stacked: true }],\r\n\t\t\t\t\tyAxes: [{ stacked: true }]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t$(this.element).append('<canvas />');\r\n\t\t\tthis.chart = new Chart($('canvas', this.element), {\r\n\t\t\t\ttype: charttype,\r\n\t\t\t\tresponsive: true,\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tlabels: labels,\r\n\t\t\t\t\tdatasets: datasets\r\n\t\t\t\t},\r\n\t\t\t\toptions: chartoptions\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t_line: function () {\r\n\t\t\tvar base = this;\r\n\t\t\tbase._counter = 0;\r\n\r\n\t\t\tvar table = $('table', this.element).eq(0).hide();\r\n\r\n\t\t\tvar labels = new Array();\r\n\t\t\t$('thead th', table).each(function () {\r\n\t\t\t\tlabels.push($(this).text());\r\n\t\t\t});\r\n\r\n\t\t\tvar datasets = new Array();\r\n\t\t\t$('tbody tr', table).each(function () {\r\n\t\t\t\tvar dataset_item = new Object();\r\n\t\t\t\tdataset_item.label = $(this).attr('data-label');\r\n\t\t\t\tdataset_item.data = new Array();\r\n\t\t\t\tdataset_item.pointRadius = 3;\r\n\t\t\t\tdataset_item.pointHoverRadius = 5;\r\n\t\t\t\tvar colour = base._getColour($(this).attr('data-colour'));\r\n\t\t\t\tdataset_item.pointBackgroundColor = colour;\r\n\t\t\t\tdataset_item.borderColor = colour;\r\n\t\t\t\tdataset_item.pointBorderColor = '#fff';\r\n\t\t\t\tdataset_item.pointHitRadius = 20;\r\n\t\t\t\tif (typeof ($(this).attr('data-fill')) != 'undefined') {\r\n\t\t\t\t\tdataset_item.backgroundColor = base._getColourAlpha($(this).attr('data-colour'), 0.6);\r\n\t\t\t\t}\r\n\t\t\t\t$('td', this).each(function () {\r\n\t\t\t\t\tdataset_item.data.push($(this).text());\r\n\t\t\t\t});\r\n\t\t\t\tdatasets.push(dataset_item);\r\n\t\t\t\tbase._counter ++;\r\n\t\t\t});\r\n\r\n\t\t\t$(this.element).append('<canvas />');\r\n\t\t\tthis.chart = new Chart($('canvas', this.element), {\r\n\t\t\t\ttype: 'line',\r\n\t\t\t\tresponsive: true,\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tlabels: labels,\r\n\t\t\t\t\tdatasets: datasets\r\n\t\t\t\t},\r\n\t\t\t\toptions: {\r\n\t\t\t\t\tlegend: { display: false },\r\n\t\t\t\t\ttooltips: { mode: 'x-axis' },\r\n\t\t\t\t\thover: { mode: 'x-axis' },\r\n\t\t\t\t\tonClick: window[$(this.element).attr('data-click')]\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t_progress: function() {\r\n\t\t\t$(this.element).attr('data-value', $(this.element).html());\r\n\t\t},\r\n\t};\r\n\r\n\t// A really lightweight plugin wrapper around the constructor,\r\n\t// preventing against multiple instantiations\r\n\t$.fn[pluginName] = function (options) {\r\n\t\treturn $('[data-cryodex-widget]', this).each(function () {\r\n\t\t\tif (!$.data(this, \"plugin_\" + pluginName)) {\r\n\t\t\t\t$.data(this, \"plugin_\" + pluginName,\r\n\t\t\t\tnew Cryodex(this, options));\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n})(jQuery, window, document);"]}